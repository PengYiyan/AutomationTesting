digraphCMD_method {
	"net.mooctest.Argument.variable(Lnet/mooctest/Variable;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Fact.getPredicate()Lnet/mooctest/Predicate;" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Fact.getPredicate()Lnet/mooctest/Predicate;" -> "net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "net.mooctest.Datalog.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "net.mooctest.DatalogOtherTest.testPredicate()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "net.mooctest.Fact.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.CapabilityPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.PackagePermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdminPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdaptPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.WeakGroupedListenerList$WeakComputationReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.http.impl.client.cache.ResourceReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.nio.file.attribute.AclEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.spec.EllipticCurve.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$EntryIterator$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Calendar.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.naming.RefAddr.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttributes.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.tree.TreePath.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.net.Proxy.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Method.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Parameter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.LinearUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.mapping.ResourceMapping.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.core.DefaultTreeNode.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientStringTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.OrTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.NotTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.AndTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.ServiceEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractAttributeSubscription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.ImageImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FileImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialDevice.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.NotExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ActionContributionItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.Row.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.CSSConditionalSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.index.IndexCommit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.ConstantScoreQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FilteredQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.NumericRangeQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanOrQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingSpanFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheRangeFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQueryWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheImpl$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.SortField.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.fst.PairOutputs$Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.validation.ValidationStatus.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.DefaultDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.Property.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.FileInfoMatcherDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.events.BuildContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.Requestor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.CSSConditionalSelectorImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.QualifiedName.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormatParser$Fragment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.AbstractScope.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.io.View.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredSelection.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.ViewerRow.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.ServicePermission$Properties$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.graphics.TextStyle.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$ControlDecorator.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$Message.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyShowInContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.DefaultSaveable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.EditorElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.WizardElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.ViewElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.part.DrillFrame.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVecInt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.Vec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.ObjectiveFunction.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.tools.WeightedObject.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.help.Map$ID.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$EntrySetView.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.CharArrayMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$ValueComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.Headers.getIndex(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryIndexForKey(IILjava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryForKey(IILjava/lang/Object;)Lorg/eclipse/emf/common/util/BasicEMap$Entry;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentPredicate(Ljava/util/List;Lorg/eclipse/emf/ecore/EReference;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.util.CircularArray.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.wasSet()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.remove(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementMulti.getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.DirectMap.findKey(Ljava/lang/String;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ResourceTranslator.hasRuntime21(Lorg/osgi/framework/Bundle;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.removeNode(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.find(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.putTreeVal(ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.log.Log.initialized()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays$ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.StringToNumberConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToBooleanConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToCharacterConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.isPrimitiveTypeMatchedWithBoxed(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.site.SelectionProviderActivator$TempAdapterFactory.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart$1.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.DesignerTab.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.StatisticsCalculator.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetPage.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectActionContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.ViewDescriptor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.ContextServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.EvaluationServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchSupportFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator$ParentLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(Lorg/eclipse/e4/core/internal/contexts/ContextChangeEvent;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$5.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.AggregateWorkingSet.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandService.refreshElements(Ljava/lang/String;Ljava/util/Map;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$5.run()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.add(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.property.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer$5.run()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CTabFolder$8.run()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.put(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractAction.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformLogWriter.isLoggable(Lorg/osgi/framework/Bundle;Ljava/lang/String;I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Lorg/eclipse/core/runtime/IPath;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.setDevice(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.makeAbsolute()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.canonicalize()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.collapseParentReferences()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.operations.ObjectUndoContext.matches(Lorg/eclipse/core/commands/operations/IUndoContext;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.MatchingCharacterPainter.paint(I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolveArgs(Lorg/eclipse/e4/core/internal/di/Requestor;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;ZZZ)[Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.getProviderType(Ljava/lang/reflect/Type;)Ljava/lang/Class;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.hasQualifier(Ljava/lang/Class;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.isOverridden(Ljava/lang/reflect/Method;Ljava/util/ArrayList;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.getQualifier(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/osgi/framework/util/KeyedElement;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.query.QueryUtil.createIUQuery(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/query/IQuery;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.lastIndexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.extractRange(Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.<init>(Lorg/eclipse/equinox/p2/metadata/Version;ZLorg/eclipse/equinox/p2/metadata/Version;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.isPredefined(Lorg/eclipse/equinox/p2/metadata/expression/IExpression;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.put(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.equals(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.removeAll(Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.CustomHashtable.keyEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.doFindItem(Ljava/lang/Object;)Lorg/eclipse/swt/widgets/Widget;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.matchingFirstSegments(Lorg/eclipse/core/runtime/IPath;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.tableProviders.objectstatistics.ClassStatistics$1.accept(Lcom/jrockit/mc/flightrecorder/spi/IEvent;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramSelectionIterator.skipForwardEvent()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier$1.bundleChanged(Lorg/osgi/framework/BundleEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.ErrorPageErrorHandler.getErrorPage(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(Ljava/net/URL;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.NativeCodeFinder.getNativePaths()Ljava/util/List;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.isUpdateJob(Lorg/eclipse/core/runtime/jobs/Job;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.search.federated.FederatedSearchJob.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveableHelper$6.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.progress.DeferredTreeContentManager$1.isParent(Lorg/eclipse/ui/progress/DeferredTreeContentManager$DeferredContentFamily;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.SubMonitor.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.InstancePreferences.loadLegacy()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.BundleDefaultPreferences.<init>(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.internalPut(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.OSGiPreferencesServiceImpl$OSGiLocalRootPreferences.fixPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.isPrefixOf(Lorg/eclipse/core/runtime/IPath;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.removeFileExtension()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.convertFromProperties(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/util/Properties;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressManagerUtil.getModalChildExcluding([Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/swt/widgets/Shell;)Lorg/eclipse/swt/widgets/Shell;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.engine.CSSElementContextImpl.elementMustBeRefreshed(Lorg/eclipse/e4/ui/css/core/dom/IElementProvider;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.addListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal()Ljava/net/URL;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.shouldCache(Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.FindSupport.find(Ljava/net/URL;)Ljava/net/URL;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$3.visit(Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PluginVersionIdentifier.parseVersion(Ljava/lang/String;)[Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getAttributeAsIs(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementHandle.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IConfigurationElement;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.PersistenceToolkit.create(Lcom/jrockit/mc/common/persistence/Type;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putBoolean(Ljava/lang/String;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.preference.PreferenceStore.firePropertyChangeEvent(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.implies(Ljava/security/Permission;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Collections.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.checkPermission2(Ljava/security/Permission;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.BaseExtensionPointHandle.getExtension(Ljava/lang/String;)Lorg/eclipse/core/runtime/IExtension;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.removeNodeChildrenFromQueue(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.getLocalList(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)[Lorg/eclipse/core/filesystem/IFileInfo;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ProjectDescription.setBuildSpec([Lorg/eclipse/core/resources/ICommand;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.getDescribedProperty(Lorg/eclipse/core/runtime/QualifiedName;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeMatcher.getSpecificDescription(Lorg/eclipse/core/internal/content/BasicDescription;)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.isRequested(Lorg/eclipse/core/runtime/QualifiedName;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.setProperty(Lorg/eclipse/core/runtime/QualifiedName;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.dispatchEventImpl(Ljava/awt/AWTEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.AWTKeyStroke.registerSubclass(Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.event.EventListenerList.remove(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.getLocalAttribute(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.isDefined(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS.translateHTMLToCSS(Ljavax/swing/text/AttributeSet;)Ljavax/swing/text/AttributeSet;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.removeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$FontWeight.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$StringValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.getSelectedIndex()I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JSplitPane.addImpl(Ljava/awt/Component;Ljava/lang/Object;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTabbedPane.indexOfComponent(Ljava/awt/Component;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.PriorityQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.export(Ljava/io/OutputStream;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.exportNode(Ljava/io/OutputStreamWriter;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultComboBoxModel.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.actionPerformed(Ljava/awt/event/ActionEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.MuxingAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.emptyTag(Ljavax/swing/text/Element;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.noMatchForTagInAttributes(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/html/HTML$Tag;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument$DefaultDocumentEvent.getChange(Ljavax/swing/text/Element;)Ljavax/swing/event/DocumentEvent$ElementChange;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$LeafIterator.setEndOffset()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JEditorPane$PlainEditorKit.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextAreaUI.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.<init>(Ljavax/swing/text/Element;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.TableView.updateInsets()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.TextLayoutStrategy.layoutRow(Ljavax/swing/text/FlowView;II)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.PriorityBlockingQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.findAndRemove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.FrameView$FrameEditorPane.getEditorKitForContentType(Ljava/lang/String;)Ljavax/swing/text/EditorKit;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addDecoration(Lsun/font/Decoration;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addFont(Ljava/lang/Object;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addToVector(Ljava/lang/Object;ILjava/util/Vector;[I)[I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.handleInsertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.insertUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.postRemoveUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.help.plaf.basic.BasicContentViewerUI$PageLoader$Callback.handleStartTag(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader$MetaAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.PlainDocument.insertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader.handleText([CI)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JOptionPane.showOptionDialog(Ljava/awt/Component;Ljava/lang/Object;Ljava/lang/String;IILjavax/swing/Icon;[Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.contentsChanged(Ljavax/swing/event/ListDataEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setSelectedValue(Ljava/lang/Object;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractButton.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.setDropTarget(Ljava/awt/dnd/DropTarget;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.addDropTargetListener(Ljava/awt/dnd/DropTargetListener;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.setComponent(Ljava/awt/Component;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultCellEditor$2.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerDateModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerNumberModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicFileChooserUI.resetGlobFilter()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DragSourceContext.setCursorImpl(Ljava/awt/Cursor;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.help.SortMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.help.UniteAppendMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setCellRenderer(Ljavax/swing/ListCellRenderer;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTextField.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex()I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultDesktopManager.getBoundsForIconOf(Ljavax/swing/JInternalFrame;)Ljava/awt/Rectangle;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicColorChooserUI.installPreviewPanel()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalIconFactory$ImageCacher$ImageGcPair.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.BumpBuffer.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.listensToAttribute(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.HotspotManagementToolkit.isVMOptionExplicit(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putByteArray(Ljava/lang/String;[B)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.getRangeType()Lcom/jrockit/mc/rjmx/ui/internal/ChartModel$AxisRange;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.graph.EventGraphTree.restoreExpansionState()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodHandles.constant(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.stream.DistinctOps$1$1.accept(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.StateImpl.checkProp(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.compatibility.state.PlatformBundleListener$1.filterMatches(Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.module.ResolverBundle.equivalentMaps(Ljava/util/Map;Ljava/util/Map;Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.ImportPackageSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.HostSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleRevision.isCurrent()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.verifyNoDuplicates(Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.cleanup(Lorg/eclipse/osgi/container/ModuleRevision;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.hookregistry.StorageHookFactory.createStorageHookAndValidateFactoryClass(Lorg/eclipse/osgi/storage/BundleInfo$Generation;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getStorageHook(Ljava/lang/Class;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionsParser.logStatus(Lorg/xml/sax/SAXParseException;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryIndexElement.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.toURI(Ljava/net/URL;)Ljava/net/URI;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle.adapt0(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.DTOBuilder.mapComponentType(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.url.EquinoxFactoryManager.getField(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/reflect/Field;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.ref.Log.security()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.<init>(Ljava/lang/String;Lorg/eclipse/equinox/internal/util/ref/Log;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleContainer.update(Lorg/eclipse/osgi/container/Module;Lorg/eclipse/osgi/container/ModuleRevisionBuilder;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.Activator.startRegistry()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionRegistry.<init>(Lorg/eclipse/core/runtime/spi/RegistryStrategy;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.cacheUse()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.WorkManager$NotifyRule.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.isConflicting(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.removeByKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/registry/KeyedElement;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.mergeContribution(Lorg/eclipse/core/internal/registry/Contribution;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryObjectManager.findCommonNamespaceIdentifier([Lorg/eclipse/core/internal/registry/RegistryObject;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.EclipseBundleListener.checkForNLSFiles(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.TableReader.checkCacheValidity(Ljava/io/DataInputStream;J)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.console.command.adapter.Activator.getCommandMethods(Ljava/lang/Object;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.loadData(Ljava/lang/String;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseScheduledApplication.<init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.addScheduledApp(Lorg/eclipse/equinox/internal/app/EclipseScheduledApplication;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationDescriptor.checkArgs(Ljava/util/Map;Z)Ljava/util/Map;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationHandle.destroy()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$Values.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ValuesView.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.TreeMap.valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.init()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.createAppDescriptor(Lorg/eclipse/core/runtime/IExtension;)Lorg/eclipse/equinox/internal/app/EclipseAppDescriptor;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;IIZLjava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.enterLoad(Ljava/net/URI;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.http.util.LangUtils.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.http.pool.RouteSpecificPool.getFree(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.util.JREProxyHelper.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.StringUtil.equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.ProxyType.setProxyData(Lorg/eclipse/core/net/proxy/IProxyData;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putInt(Ljava/lang/String;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.cert.X509CertSelector.matchSubjectAlternativeNames(Ljava/security/cert/X509Certificate;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionParser.removeRedundantTrail(Ljava/util/List;Ljava/lang/Comparable;)Ljava/lang/Comparable;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.makeRelative(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxManipulatorImpl.setConfiguratorManipulator()Lorg/eclipse/equinox/internal/provisional/configuratormanipulator/ConfiguratorManipulator;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.FileLocator.getBundleFile(Lorg/osgi/framework/Bundle;)Ljava/io/File;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.fromString(Ljava/lang/String;)Ljava/net/URI;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameURI(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameString(Ljava/lang/String;Ljava/lang/String;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxBundlesState.getPrerequisteBundles(Lorg/eclipse/equinox/frameworkadmin/BundleInfo;)[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository.getCompleteArtifactDescriptor(Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.IUMap.remove(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isDynamicImport(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.pde.internal.build.publisher.FeatureRootAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AdviceFileAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractAdvice.matchVersion(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.isIncluded(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isOptional(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createMatchExpressionFromRange(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;)Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.getCachedTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.sat4j.tools.FullClauseSelectorSolver.addControlableClause(Lorg/sat4j/specs/IVecInt;)Lorg/sat4j/specs/IConstr;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.server.session.AbstractSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.listener.ELContextCleaner.purgeEntries(Ljava/lang/reflect/Field;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.contains(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.startedBundle2(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.unbind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.getMethod(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;Lorg/osgi/framework/ServiceReference;)Ljava/lang/reflect/Method;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.InstanceProcess.checkCanCauseCycle(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getMethod(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/reflect/Method;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.bind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.readObject(Ljava/io/InputStream;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeValue(Ljava/lang/Object;Ljava/io/OutputStream;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writePrimitiveArray(Ljava/lang/Class;Ljava/lang/Object;ILjava/io/OutputStream;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.xml.impl.XMLParserImpl.parse_tag_special(Lorg/eclipse/equinox/internal/util/xml/impl/TagImpl;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doProperty(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doReference(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getNamespace(Ljava/lang/String;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.validate(II)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getCardinality(Ljava/lang/String;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.isCorrectComponentTag(Ljava/lang/String;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PerformanceStats.removeStats(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.watson.DefaultElementComparator.testEquality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putLong(Ljava/lang/String;J)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.getValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.stoppingBundle(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentType.hasFileSpec(Lorg/eclipse/core/runtime/preferences/IScopeContext;Ljava/lang/String;I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.internalIntrospecthelper(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.createTypedArray(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.convert(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTransferable.getTransferData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.isStandardTextRepresentationClass()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextUI$TextTransferHandler$TextTransferable.getRicherData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.net.Socket$1.run()Ljava/lang/Boolean;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.TestExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.LegacyHandlerSubmissionExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.ActiveShellExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.expressions.WorkbenchWindowExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.findElementsRecursive(Lorg/eclipse/e4/ui/model/application/MApplicationElement;Ljava/lang/Class;Lorg/eclipse/e4/ui/workbench/Selector;Ljava/util/List;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ToolBarManagerRenderer$7.select(Lorg/eclipse/e4/ui/model/application/MApplicationElement;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.showIntro(Lorg/eclipse/ui/IWorkbenchWindow;Z)Lorg/eclipse/ui/intro/IIntroPart;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.findCoolItem([Lorg/eclipse/swt/widgets/CoolItem;Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/swt/widgets/CoolItem;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getField(Ljava/lang/String;)Ljava/lang/reflect/Field;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.setIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.MenuManager.update(ZZ)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkingSetMenuContributionItem.fill(Lorg/eclipse/swt/widgets/Menu;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.Model.areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.getControl()Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Ljava/lang/Runnable;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarManager.update(Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.addValue(Lorg/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.help.WorkbenchHelpSystem.setHelpTrace(Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.update(Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.ParameterizedCommand.<init>(Lorg/eclipse/core/commands/Command;[Lorg/eclipse/core/commands/Parameterization;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CoolBarToTrimManager.remove(Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/jface/action/IContributionItem;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarContributionItem.fill(Lorg/eclipse/swt/widgets/CoolBar;I)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.RadioMenu.isEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ShowInMenu.getShowInPartIds(Lorg/eclipse/ui/IWorkbenchPart;)Ljava/util/ArrayList;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveAllAction.updateState()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveablesList.fillModelsClosing(Ljava/util/Set;Ljava/util/Map;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.switchToPosition(Lorg/eclipse/jface/text/link/LinkedModeModel;Lorg/eclipse/jface/text/link/LinkedPosition;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.prune(Ljava/util/List;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$SubMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StyledString.isDifferentStyle(Lorg/eclipse/jface/viewers/StyledString$Styler;Lorg/eclipse/jface/viewers/StyledString$Styler;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.removeAutoEditStrategy(Lorg/eclipse/jface/text/IAutoEditStrategy;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionGroup.overlapsOrTouches(Lorg/eclipse/jface/text/link/LinkedPosition;Lorg/eclipse/jface/text/DocumentEvent;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.NonLocalUndoUserApprover.elementsContains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.createIURequirements(Ljava/util/Collection;)Ljava/util/Collection;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.queryForIU(Lorg/eclipse/equinox/p2/publisher/IPublisherResult;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.versionElements(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ConfigCUsAction.publishBundleCUs(Lorg/eclipse/equinox/p2/publisher/IPublisherInfo;[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;Ljava/lang/String;Lorg/eclipse/equinox/p2/publisher/IPublisherResult;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.FeaturesAction.getVersionRange(Lorg/eclipse/equinox/p2/publisher/eclipse/FeatureEntry;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.ExpandableComposite.setClient(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.propertytester.PlatformPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(Lorg/eclipse/core/internal/content/ContentTypeMatcher;Ljava/lang/String;Ljava/util/Comparator;)[[Lorg/eclipse/core/runtime/content/IContentType;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(Lorg/eclipse/core/internal/resources/File;Lorg/eclipse/core/internal/resources/ResourceInfo;Z)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Cache$Entry.compare(Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.getAdapter(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.classForName(Lorg/eclipse/core/runtime/IAdapterFactory;Ljava/lang/String;)Ljava/lang/Class;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Document;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.UAElement.importElement(Lorg/eclipse/help/internal/UAElement;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.AbstractIntroContainer.handleIncludeStyleInheritence(Lorg/eclipse/ui/internal/intro/impl/model/IntroInclude;Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroElement;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableValue.updateInnerObservableValue()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableList.updateInnerObservableList()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.swt.SWTVetoableValueDecorator.<init>(Lorg/eclipse/swt/widgets/Widget;Lorg/eclipse/jface/internal/databinding/swt/WidgetStringValueProperty;Lorg/eclipse/core/databinding/observable/value/IObservableValue;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.list.MultiList.<init>(Lorg/eclipse/core/databinding/observable/Realm;[Lorg/eclipse/core/databinding/observable/list/IObservableList;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableSet.updateInnerObservableSet()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableMap.updateDetailMap()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver.countPrecedingItems(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewContentProvider.createChildren(Ljava/lang/Object;)[Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardActivityFilter.select(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.includeInSetStructure(Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ActionSet;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.ProvisioningOperationWizard.provisioningContextChanged()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldHideToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.removeAttributeFromListener(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.setValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;Ljava/lang/String;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ConditionChooser.updateUnit()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.LocalizedString.getLocales()Ljava/util/List;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.FieldFactory.createFromDisplayUnit(Lcom/jrockit/mc/common/unit/UnitDescriptor;Ljava/lang/String;I)Lcom/jrockit/mc/ui/model/fields/Field;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.removeCollector(Lorg/eclipse/ui/internal/progress/IProgressUpdateCollector;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.merge(Lorg/eclipse/e4/ui/model/application/ui/MExpression;Lorg/eclipse/e4/ui/model/application/ui/MExpression;)Lorg/eclipse/e4/ui/model/application/ui/MExpression;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialViewer.drawBackground(Lorg/eclipse/swt/graphics/GC;Lcom/jrockit/mc/ui/dial/DialDevice;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.fields.internal.QuantityField.initKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;Ljava/lang/String;Lcom/jrockit/mc/common/unit/IQuantity;Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.getNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/jrockit/mc/common/xml/ClassFactory;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.setAttributeType(Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.sampler.CompositeRangeSampler.needsStructuralRefresh(Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.focusLost(Ljava/awt/event/FocusEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectInputStream.loadFeatureMap(Lorg/eclipse/emf/ecore/util/FeatureMap$Internal;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setExtendedMetaDataOption(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FontDescriptor.setStyle(I)Lorg/eclipse/jface/resource/FontDescriptor;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.canEdit(Ljava/lang/String;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.StringConstructorCellEditor.checkContructor(Ljava/lang/Class;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getForeground(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Color;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyDescriptor.isCompatibleWith(Lorg/eclipse/ui/views/properties/IPropertyDescriptor;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.ArrayLengthCellEditor.doGetValue()Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.fireSelectionChanged(II)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.FileUtil.computeOverlap(Ljava/net/URI;Ljava/net/URI;Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Queue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ScopeSetDialog.findOperation(Lorg/eclipse/help/ui/internal/views/ScopeSet;Ljava/lang/Class;)Lorg/eclipse/help/ui/internal/views/ScopeSetDialog$PendingOperation;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.internal.BasicPrimitivesConverter.getConverter(Ljava/lang/Class;)Lcom/jrockit/mc/rjmx/services/flr/internal/Converter;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferenceServiceRegistryHelper.applyRuntimeDefaults(Ljava/lang/String;Ljava/lang/ref/WeakReference;)Ljava/lang/ref/WeakReference;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.compiler.JspUtil.interpreterCall(ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.<clinit>()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory.getClassForInterface(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.demo.html.HTMLParser.addText(Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.servlet.http.HttpServlet.getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.check(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.configAdminRegistered(Lorg/osgi/service/cm/ConfigurationAdmin;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.updated(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.isPossibleMatch(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Reference.bindNewReference(Lorg/osgi/framework/ServiceReference;Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver.removeNonEffectiveRequirements(Ljava/util/ListIterator;Ljava/util/List;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.themes.ColorsAndFontsPreferencePage.isDefault(Lorg/eclipse/ui/internal/themes/ColorDefinition;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.updateActive(Lorg/eclipse/ui/IEditorPart;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.UIEvents.contains(Lorg/osgi/service/event/Event;Ljava/lang/String;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.saveData(Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.unsubscribe(Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardContentProvider.getParent(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.filesystem.URIUtil.equals(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.index.Index.concatenateUnique(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator.coerceAndEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.addListener(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.skip()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.isSubtype(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.layout(Lorg/eclipse/swt/graphics/GC;ILorg/eclipse/ui/internal/forms/widgets/Locator;ILjava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.about.InstallationDialog.createContents(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.setVisible(Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.equalSettings(Lcom/jrockit/mc/rjmx/services/flr/IEventSettingsHolder;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.wizards.preferences.WizardPreferencesImportPage1.getTransfers()[Lorg/eclipse/ui/internal/preferences/PreferenceTransferElement;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.scopeMatches(Ljava/lang/String;Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.NewWizardNewPage.isPrimary(Lorg/eclipse/ui/wizards/IWizardDescriptor;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.ColumnComposite.countVisibleColumnsBefore(Lcom/jrockit/mc/rjmx/ui/column/IColumn;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.KeysPreferencePage.createModifyTab(Lorg/eclipse/swt/widgets/TabFolder;)Lorg/eclipse/swt/widgets/Composite;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage.createDataControls(Lorg/eclipse/swt/widgets/Composite;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.fillEditorTable()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeSorter.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.getInitialRadioSelection()I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.TwoPaneElementSelector.setLowerSelectedElement(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredList.setSelection([Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.swing.ProgressMonitor.isCanceled()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.DefaultHelpUI.isActiveShell(Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/ui/IWorkbenchWindow;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.refresh()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.SeeAlsoPart.updateLinks(Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/util/List;)Ljava/lang/Class;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.allSameClass(Ljava/util/List;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.fireSelectionChanged(Lorg/eclipse/ui/forms/IFormPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.update()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.checkLimit()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.editor.FormPage.isActive()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCToolBarManager.remove(Lorg/eclipse/jface/action/IAction;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.Section.setSeparatorControl(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.isIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.BindingService.isSameBinding(Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;Lorg/eclipse/e4/ui/model/application/commands/MCommand;Lorg/eclipse/jface/bindings/Binding;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuFactoryGenerator.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ApplicationImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ContributionImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.CoreExpressionImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.advanced.impl.PerspectiveImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.WindowImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.PopupMenuImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectToolItemImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectMenuItemImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DynamicMenuContributionImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.ToolControlImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureChangeImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureMapEntryImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EAttributeImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EReferenceImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassifierImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EDataTypeImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumLiteralImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xml.type.impl.SimpleAnyTypeImpl.eIsSet(I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleData.dynamicIsSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.init(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/util/Map;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equals(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EObject;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.TopologicalSort.buildDependencyGraph()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.GenericMApplicationElementFactoryImpl$MApplicationElementClassToEClass.buildMapping(Lorg/eclipse/emf/ecore/EPackage;)Ljava/util/Map;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.saveAll(Ljava/util/List;ZZZLorg/eclipse/jface/operation/IRunnableContext;Lorg/eclipse/jface/window/IShellProvider;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferencePageHistory.addHistoryEntry(Lorg/eclipse/ui/internal/dialogs/PreferenceHistoryEntry;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.model.ConflictModel.setConflicts(Ljava/util/Collection;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MoveControlAction.run()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.checkDuplicates(Lorg/eclipse/ui/internal/NavigationHistoryEditorInfo;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.failsEnablement([Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCBook.showPageWithData(Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMinValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMaxValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedDialsSectionPart$AttributeDial.updateMetadata()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.setQuantityKindFromAttribute(Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setKindOfQuantity(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.updateQuantityKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.activate()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.TogglingCellEditor.doSetValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.canEdit(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.getCellEditor(Ljava/lang/Object;)Lorg/eclipse/jface/viewers/CellEditor;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.createConverter(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/conversion/IConverter;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateValueStrategy.findValidator(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/validation/IValidator;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.getKeyForClass(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToByteConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToShortConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToLongConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToFloatConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToDoubleConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigDecimalConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.NumberToStringConverter.<init>(Lcom/ibm/icu/text/NumberFormat;Ljava/lang/Class;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeConfiguratorTableFactory$2.getValueTyped(Lcom/jrockit/mc/rjmx/subscription/MRI;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.operativeset.actions.AddMatchingRelationalKeyAction.addMatchingEventsForType(Lcom/jrockit/mc/flightrecorder/spi/IEventType;Lcom/jrockit/mc/flightrecorder/spi/IField;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.toolbar.DeleteAction.removeFromList(Lcom/jrockit/mc/components/ui/tab/BaseDescriptor;Ljava/util/List;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addAfter(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addBefore(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.loadMenuAndToolbarStructure()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.createMenuEntries(Lorg/eclipse/e4/ui/model/application/ui/menu/MMenu;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.addMatchedKeys(Ljava/util/ArrayList;Lorg/eclipse/core/runtime/preferences/PreferenceFilterEntry;[Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldCreateToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.selectionChanged(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.commands.internal.Traverser.lookupMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.NewPropertySheetHandler.findPropertySheet(Lorg/eclipse/core/commands/ExecutionEvent;Lorg/eclipse/ui/views/properties/PropertyShowInContext;)Lorg/eclipse/ui/views/properties/PropertySheet;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$4$PerspectiveDropTarget.sameShell()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.WorkbenchActivitySupport.addExtension(Lorg/eclipse/core/runtime/dynamichelpers/IExtensionTracker;Lorg/eclipse/core/runtime/IExtension;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.EditorHistoryItem.matches(Lorg/eclipse/ui/IEditorInput;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.checkEditor(Lorg/eclipse/ui/IEditorInput;Ljava/util/List;Lorg/eclipse/ui/internal/EditorReference;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.createEntry(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IEditorPart;Lorg/eclipse/ui/INavigationLocation;)Lorg/eclipse/ui/internal/NavigationHistoryEntry;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistoryEntry.mergeInto(Lorg/eclipse/ui/internal/NavigationHistoryEntry;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(Lorg/eclipse/swt/widgets/Widget;[Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.itemExists([Lorg/eclipse/swt/widgets/Item;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.loader.ContentProviderManager.getContentProviderParentPage(Lorg/eclipse/ui/intro/config/IIntroContentProvider;)Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroPage;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.internalRefresh(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.internalIsInputOrEmptyPath(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.startsWith(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$9.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.AbstractWorkingSetDialog.removeSelectedWorkingSets(Ljava/util/List;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.gotoEntryForTab(Lorg/eclipse/ui/internal/NavigationHistoryEntry;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.handleWidgetSelected()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.Timestamp.in(Lcom/jrockit/mc/common/unit/IUnit;)Lcom/jrockit/mc/common/unit/IQuantity;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putDouble(Ljava/lang/String;D)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.restoreChangedWorkingSets()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesMapper.close(Lorg/eclipse/equinox/internal/security/storage/SecurePreferencesRoot;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.getCloseableSiblingParts(Lorg/eclipse/e4/ui/model/application/ui/basic/MPart;)Ljava/util/List;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ActionChooser$1.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeSelectorComponent$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.ViewsPreferencePage$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$12.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.layout.TreePart.updateSelection()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.tracetree.TraceModel.traceContainsFrames(Lcom/jrockit/mc/common/IMCStackTrace;Ljava/util/List;Ljava/util/Map;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonTypeProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMaxValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMinValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.handleSelection(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.contentassist.AdditionalInfoController.showInformation(Lorg/eclipse/jface/text/contentassist/ICompletionProposal;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationEvent(Lorg/osgi/service/cm/ConfigurationEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationChange(Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;Lorg/osgi/service/cm/Configuration;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getComponentPropByPID(Ljava/lang/String;)Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.handleBoundServicesUpdate(Ljava/util/Hashtable;Ljava/util/Dictionary;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.director.app.DirectorApplication.parseIUsArgument(Ljava/util/List;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.validation.ObjectToPrimitiveValidator.mapContainsValues(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager.findMessage(Ljava/lang/Object;Ljava/util/ArrayList;)Lorg/eclipse/ui/internal/forms/MessageManager$Message;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.internal.ToolbarFormEditor.show(Lcom/jrockit/mc/ui/formpage/FormPageContributionGroup;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.refresh()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.tree.MBeanTreeSectionPart$1$1.findItem(Ljava/lang/Object;[Lorg/eclipse/swt/widgets/TreeItem;)Lorg/eclipse/swt/widgets/TreeItem;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.originatesFrom(Lorg/eclipse/core/runtime/IExtension;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.createProxy(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/core/internal/adapter/AdapterFactoryProxy;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Workspace.computeActiveBuildConfigOrder()Lorg/eclipse/core/internal/resources/ComputeProjectOrder$VertexOrder;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.successors.SuccessorFrameNodeBuilder.addTrace(Lcom/jrockit/mc/flightrecorder/ui/components/histogram/HistogramItem;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.createNewCharto(Lcom/jrockit/mc/flightrecorder/ui/components/chart/model/FLRChartDescriptor;Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;)Lse/hirt/greychart/impl/DefaultXYGreyChart;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.getContentType(Lcom/jrockit/mc/common/unit/UnitDescriptor;)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMin.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMax.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.AbstractSingleMRITransformation.subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue.getLiveValue()Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.KeyBindingService.removeKeyBindingService(Lorg/eclipse/ui/IWorkbenchSite;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialConfiguration.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.tabs.threads.ThreadMasterDetailBlock.pageChanged(Lorg/eclipse/jface/dialogs/PageChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.WorkbenchPartPropertySheets.getPropertySheetProxyPage(Ljava/lang/Object;)Lcom/jrockit/mc/ui/misc/WorkbenchPartPropertySheets$PropertySheetProxyPage;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.isThisPart(Lorg/eclipse/ui/IWorkbenchPartReference;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.handlePartDeactivation(Lorg/eclipse/ui/IWorkbenchPartReference;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler$PartListener.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partOpened(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory$1.updateNavigationHistory(Lorg/eclipse/ui/IWorkbenchPartReference;Z)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$DetailsContentViewer.refresh([Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.perspectiveChanged(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IPerspectiveDescriptor;Lorg/eclipse/ui/IWorkbenchPartReference;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.SelectableIUsPage$2.checkStateChanged(Lorg/eclipse/jface/viewers/CheckStateChangedEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$ItemsListLabelProvider.isSelected(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryChangeEvent.getHostDelta(Ljava/lang/String;)Lorg/eclipse/core/internal/registry/RegistryDelta;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryDelta.getExtensionDeltas(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IExtensionDelta;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$3.matches(Lorg/eclipse/core/runtime/IExtensionPoint;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.getViewAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.browse.MultiProtocolFileSystemBrowserAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.outgoing.MultiProtocolOutgoingAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.getAdapterNames()[Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.indexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.jsp.jasper.Activator.getJasperBundle()Lorg/osgi/framework/Bundle;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.getImportingBundles()[Lorg/osgi/framework/Bundle;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.addRequirers(Ljava/util/Set;Lorg/eclipse/osgi/container/ModuleWiring;Ljava/lang/String;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.DevClassPathHelper.getArrayFromList(Ljava/lang/String;)[Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/internal/registry/ConfigurationElement;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Lorg/eclipse/core/runtime/spi/RegistryContributor;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher.perspectiveIsActive(Lorg/eclipse/ui/IPerspectiveDescriptor;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectPrevious(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectNext(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormTextModel.select(Lorg/eclipse/ui/internal/forms/widgets/IFocusSelectable;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart$2.linkActivated(Lorg/eclipse/ui/forms/events/HyperlinkEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormUtil.ensureVisible(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.events.ExpansionEvent.getState()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$13.keyPressed(Lorg/eclipse/swt/events/KeyEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$3.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$6.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CycleBaseHandler$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$7.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$6.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$4.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.FormToolkit$BorderPainter.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.actions.SelectWorkingSetsAction.isWorkingSetEnabled(Lorg/eclipse/ui/IWorkingSet;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.BrowserPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ContextHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.EngineResultSection.hasControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.views.JVMBrowserView.addActions(Lorg/eclipse/jface/action/IMenuManager;Lorg/eclipse/jface/viewers/IStructuredSelection;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextEmail.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextRegex.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.paint(Lorg/eclipse/swt/graphics/GC;Lorg/eclipse/swt/graphics/Rectangle;Ljava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;Lorg/eclipse/ui/internal/forms/widgets/SelectionData;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.SearchField.addPreviousPick(Ljava/lang/String;Lorg/eclipse/ui/internal/quickaccess/QuickAccessElement;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessDialog$1$1.addPreviousPick(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.DefaultHyperlinkPresenter.highlightRegion(Lorg/eclipse/jface/text/IRegion;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer$3.select()V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.parse(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.handleScroll(Lorg/eclipse/swt/widgets/Event;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.isParentScrolling(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreeViewer.replace(Ljava/lang/Object;ILjava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.createListDiffs(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.listIndexOf(Ljava/util/List;Ljava/lang/Object;I)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue$1.handleValueChange(Lorg/eclipse/core/databinding/observable/value/ValueChangeEvent;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.map.BidiObservableMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.Pool$AccessUnit.matches(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceCompareTo(Lorg/eclipse/ecf/core/identity/BaseID;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.naming.ldap.Rdn$RdnEntry.compareTo(Ljavax/naming/ldap/Rdn$RdnEntry;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver$ResolveProcess.compare(Lorg/osgi/resource/Capability;Lorg/osgi/resource/Capability;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Lang.guessLanguages(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(Ljava/lang/CharSequence;I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule$4.isMatch(Ljava/lang/CharSequence;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.OptimisticComparator.compareCells(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.WeakInterningHashSet.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.isTouch()Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ECollections$2.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.nio.file.FileTreeWalker.wouldLoop(Ljava/nio/file/Path;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.toString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.getFormat()Lorg/eclipse/equinox/p2/metadata/IVersionFormat;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemReasonString(I)Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.FileEditorMapping.compareList(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.preferences.PropertyUtil.isEqual(Lorg/eclipse/ui/internal/preferences/IPropertyMap;Lorg/eclipse/ui/internal/preferences/IPropertyMap;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.equality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnChainMatch(Ljava/util/List;ILjava/util/List;I)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.skipWildCards(Ljava/util/List;I)I";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnmatch(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextAttribute.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Feature.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.equals([Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;Ljava/lang/Comparable;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceEquals(Lorg/eclipse/ecf/core/identity/BaseID;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.helpers.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.equals(Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.ImageDescription.safeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.equalContext(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllLimits(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MemberName$Factory.getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Class;)Ljava/util/List;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.valueEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/util/EnumMap;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.security.Identity.identityEquals(Ljava/security/Identity;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$BasicEStoreEList.delegateEquals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArraySet.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.font.TextLayout.equals(Ljava/awt/font/TextLayout;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ShapeGraphicAttribute.equals(Ljava/awt/font/ShapeGraphicAttribute;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ImageGraphicAttribute.equals(Ljava/awt/font/ImageGraphicAttribute;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.equal(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ForwardingNode.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Predicate.hashCode()I" -> "net.mooctest.Fact.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "net.mooctest.Datalog.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "net.mooctest.DatalogOtherTest.testPredicate()V";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.OrdFieldSource.<clinit>()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.ReverseOrdFieldSource.<clinit>()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread.startListenSocket()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.framework.CapabilityPermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.framework.PackagePermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.framework.AdminPermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.framework.AdaptPermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.framework.ServicePermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.service.application.ApplicationAdminPermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.log.LogPermission.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.awt.datatransfer.DataFlavor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.databinding.property.SimplePropertyEvent.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.awt.font.ImageGraphicAttribute.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.awt.font.ShapeGraphicAttribute.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.awt.font.TextLine.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.AbstractSet.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.AbstractList.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.AbstractEList.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.http.impl.client.cache.ResourceReference.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.security.spec.EllipticCurve.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.sql.DriverInfo.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.AbstractMap$SimpleEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.AbstractMap$SimpleImmutableEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Collections$ReverseComparator2.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Calendar.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$Node.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.naming.RefAddr.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.naming.directory.BasicAttribute.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.naming.directory.BasicAttributes.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.text.StyleContext$SmallAttributeSet.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.tree.TreePath.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.CopyOnWriteArrayList.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.net.Proxy.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.awt.font.FontRenderContext.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.TreeMap$Entry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$KeySetView.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.invoke.MethodType.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.reflect.Parameter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.security.AccessControlContext.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.common.unit.LinearUnit.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.resources.mapping.ResourceMapping.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.resources.Resource.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.resources.Marker.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.resources.BuildConfiguration.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.resources.mapping.ShallowContainer.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.core.DefaultTreeNode.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.search.RecipientStringTerm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.search.AddressTerm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.search.RecipientTerm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.search.OrTerm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.search.NotTerm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.search.AndTerm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.viewers.DecorationOverlayIcon.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.resource.DerivedImageDescriptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.resource.FileImageDescriptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.ui.dial.DialDevice.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.action.ActionContributionItem.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.ui.misc.MCToolBarManager$ToolbarItem.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.ui.model.fields.Row.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.util.AttributeSource.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.index.IndexCommit.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.index.SegmentInfo.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.ConstantScoreQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.FilteredQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.MultiTermQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.NumericRangeQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.NGramPhraseQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.CustomScoreQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.ValueSourceQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.spans.SpanOrQuery.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.CachingSpanFilter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.CachingWrapperFilter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.FieldCacheRangeFilter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.FieldCacheImpl$Entry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.SortField.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.payloads.AveragePayloadFunction.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.payloads.MaxPayloadFunction.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.payloads.MinPayloadFunction.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.util.fst.PairOutputs$Pair.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.databinding.validation.ValidationStatus.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.databinding.observable.DecoratingObservable.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.databinding.observable.value.ValueDiff.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$4.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentitySet.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.SetDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapSimpleValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.Pair.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentityMap$4.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentitySet.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.expressions.Property.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.jobs.Semaphore.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.jobs.ObjectMap.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.resources.FileInfoMatcherDescription.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.resources.ProjectScope.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.resources.LinkDescription.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.utils.ObjectMap.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ecf.core.util.Proxy.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.URI$Fragment.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler$EClassFeatureNamePair.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLOptionsImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup$FeatureClassifierPair.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$EStoreImpl$Entry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.runtime.QualifiedName.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionedId.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionRange.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Unary.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.MatchExpression.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.UnaryCollectionFilter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Member.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.CollectionFilter.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.ContextExpression.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.LambdaExpression.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Not.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Condition.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.p2.operations.Update.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.preferences.AbstractScope.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.ExtensionRegistry$ListenerInfo.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableHelpResource.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableTocsArray.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.util.component.Container$Relationship.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$4.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementSet.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.link.LinkedPosition.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.link.ProposalPosition.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.contentassist.ContextInformationPopup$ContextFrame.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.TextSelection.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.viewers.TreeSelection.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.viewers.ViewerRow.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.osgi.framework.ServicePermission$Properties$Entry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ServiceReferenceImpl.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.views.properties.PropertyShowInContext.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.DefaultSaveable.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.Semaphore.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.AggregateWorkingSet.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.EditorElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.WizardElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.ViewElement.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.part.MultiEditorInput.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.sat4j.core.ReadOnlyVec.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.sat4j.core.ReadOnlyVecInt.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.sat4j.core.Vec.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.sat4j.pb.ObjectiveFunction.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.sat4j.pb.tools.WeightedObject.hashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.Object.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.event.TreeModelEvent.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.text.html.OptionListModel.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.tree.DefaultTreeSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.DefaultListSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "java.awt.image.BufferedImage.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.BranchLabel.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.director.Projector$AbstractVariable.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.util.ssl.SslContextFactory.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.Server.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.io.AbstractConnection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.io.nio.SelectChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.ResourceCache.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSession.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.Request.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.DocumentRewriteSession.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.PartSite.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable$EntrySet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap.hashOf(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToStringMapImpl.getHash()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.getHash()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.change.impl.EObjectToChangesMapEntryImpl.getHash()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.DynamicEObjectImpl$BasicEMapEntry.getHash()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl.getHash()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container$Dynamic$BasicEMapEntry.getHash()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.WeakInterningHashSet.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Arrays.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.HashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.storage.bundlefile.BundleFile.getResourceURL(Ljava/lang/String;Lorg/eclipse/osgi/container/Module;I)Ljava/net/URL;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.runtime.Path.computeHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getEntry(Ljava/lang/String;)Ljava/net/URL;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.<init>(Ljava/lang/reflect/AnnotatedElement;Lorg/eclipse/e4/core/di/IInjector;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Ljava/lang/Object;Z)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.framework.util.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.viewers.CustomHashtable.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.viewers.TreePath.hashCode(Lorg/eclipse/jface/viewers/IElementComparer;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.URI$LazyFragmentInitializer.clear()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.Pool$ObjectAccessUnit.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.hashCode(Ljava/lang/String;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Formatter$FormatSpecifier.printHashCode(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.common.util.URI.rawAppendFragment(Ljava/lang/CharSequence;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.plaf.nimbus.ImageCache.hash(Ljava/awt/GraphicsConfiguration;II[Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Arrays.deepHashCode([Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.reflect.Proxy$Key1.<init>(Ljava/lang/Class;)V";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.reflect.Proxy$Key2.<init>(Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Predicate.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Hashtable.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight.scorer(Lorg/apache/lucene/index/IndexReader;ZZ)Lorg/apache/lucene/search/Scorer;";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight$1.add(ILorg/apache/lucene/index/IndexReader;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.RegistryIndexElement.getKeyHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.Contribution.getKeyHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.setEvent(Lorg/eclipse/equinox/internal/util/timer/TimerListener;IIJJILjava/lang/String;Ljava/security/AccessControlContext;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.registry.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.http.servlet.internal.ProxyContext$ContextAttributes.<init>(Lorg/eclipse/equinox/http/servlet/internal/ProxyContext;Lorg/osgi/service/http/HttpContext;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread.<init>(Lorg/eclipse/jetty/server/AsyncNCSARequestLog;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setClassName(Ljava/lang/String;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setHeldClass(Ljava/lang/Class;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(Ljavax/servlet/http/HttpServletRequest;J)Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.utils.Cache$Entry.getKeyHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.utils.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createWidget(Lorg/eclipse/e4/ui/model/application/ui/MUIElement;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jetty.io.AbstractBuffer.toDetailString()Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getWindowId(Lorg/eclipse/ui/IWorkbenchWindow;)Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getPageId(Lorg/eclipse/ui/IWorkbenchPage;)Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.calcHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.calcHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.projection.ProjectionDocument.<init>(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.PaintManager$PositionManager.<init>()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.TextViewer$ViewerState.connect(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.statushandlers.LabelProviderWrapper.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getIndex(Lorg/eclipse/emf/ecore/EClass;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.resetPerspectiveModel(Lorg/eclipse/e4/ui/model/application/ui/advanced/MPerspective;Lorg/eclipse/e4/ui/model/application/ui/basic/MWindow;Z)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.part.EditorInputTransfer.<clinit>()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.presentation.PresentationReconciler.<init>()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.text.TextViewer.<init>()V";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.hash(ILjava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.mail.internet.UniqueValue.getUniqueMessageIDValue(Ljavax/mail/Session;)Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.views.types.EventTypesView.updateShowingPage()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.WeakHashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.ResourceBundle$CacheKey.calculateHashCode()V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.util.EcoreUtil.getIdentification(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Predicate.hashCode()I" -> "javax.swing.GroupLayout.createSpringDescription(Ljava/lang/StringBuffer;Ljavax/swing/GroupLayout$Spring;Ljava/lang/String;I)V";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ui.internal.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.hashCode([Ljava/lang/Comparable;Ljava/lang/Comparable;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Expression.hashCode([Lorg/eclipse/equinox/internal/p2/metadata/expression/Expression;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.ecf.core.identity.StringID.namespaceHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode([Lorg/eclipse/core/resources/IBuildConfiguration;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.databinding.observable.map.MapDiff$AbstractMapEntry.hash(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.commands.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.databinding.BindingStatus.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.http.util.LangUtils.hashCode(ILjava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.expressions.EqualsExpression.computeHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.expressions.Expression.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.hashCode(Ljava/net/URL;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.Objects.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "javax.security.auth.Subject.getCredHashCode(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.util.EnumMap.entryHashCode(I)I";
	"net.mooctest.Predicate.hashCode()I" -> "java.nio.file.attribute.AclEntry.hash(ILjava/lang/Object;)I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.EClassImpl$9.delegateHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.emf.ecore.impl.EOperationImpl$1.delegateHashCode()I";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Predicate.hashCode()I" -> "org.eclipse.core.internal.utils.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Predicate.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Program.<init>([Lnet/mooctest/Rule;)V" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Program.<init>([Lnet/mooctest/Rule;)V" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Program.<init>([Lnet/mooctest/Rule;)V" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Program.query(Lnet/mooctest/Datalog;[Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;" -> "net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest3.testFact()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.test()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalogSames()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest.substituteTo()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest5.blowTestPredicate()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.<init>()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest.<init>()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalogGets()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.testPredicate()V";
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.DatalogTest.substituteTo()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.DatalogTest.toFact()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "net.mooctest.DatalogTest2.testVariable3()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "net.mooctest.DatalogOtherTest.testVariable3()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.CapabilityPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.PackagePermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdminPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdaptPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.WeakGroupedListenerList$WeakComputationReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.http.impl.client.cache.ResourceReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.nio.file.attribute.AclEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.spec.EllipticCurve.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$EntryIterator$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Calendar.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.naming.RefAddr.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttributes.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.tree.TreePath.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.net.Proxy.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Method.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Parameter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.LinearUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.mapping.ResourceMapping.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.core.DefaultTreeNode.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientStringTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.OrTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.NotTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.AndTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.ServiceEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractAttributeSubscription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.ImageImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FileImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialDevice.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.NotExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ActionContributionItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.Row.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.CSSConditionalSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.index.IndexCommit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.ConstantScoreQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FilteredQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.NumericRangeQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanOrQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingSpanFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheRangeFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQueryWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheImpl$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.SortField.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.fst.PairOutputs$Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.validation.ValidationStatus.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.DefaultDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.Property.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.FileInfoMatcherDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.events.BuildContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.Requestor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.CSSConditionalSelectorImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.QualifiedName.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormatParser$Fragment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.AbstractScope.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.io.View.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredSelection.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.ViewerRow.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.ServicePermission$Properties$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.graphics.TextStyle.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$ControlDecorator.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$Message.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyShowInContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.DefaultSaveable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.EditorElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.WizardElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.ViewElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.part.DrillFrame.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVecInt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.Vec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.ObjectiveFunction.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.tools.WeightedObject.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.help.Map$ID.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.toString()Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$EntrySetView.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.CharArrayMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$ValueComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.Headers.getIndex(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryIndexForKey(IILjava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryForKey(IILjava/lang/Object;)Lorg/eclipse/emf/common/util/BasicEMap$Entry;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentPredicate(Ljava/util/List;Lorg/eclipse/emf/ecore/EReference;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.util.CircularArray.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.wasSet()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.remove(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementMulti.getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.DirectMap.findKey(Ljava/lang/String;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ResourceTranslator.hasRuntime21(Lorg/osgi/framework/Bundle;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.removeNode(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.find(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.putTreeVal(ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.log.Log.initialized()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays$ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.StringToNumberConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToBooleanConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToCharacterConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.isPrimitiveTypeMatchedWithBoxed(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.site.SelectionProviderActivator$TempAdapterFactory.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart$1.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.DesignerTab.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.StatisticsCalculator.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetPage.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectActionContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.ViewDescriptor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.ContextServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.EvaluationServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchSupportFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator$ParentLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(Lorg/eclipse/e4/core/internal/contexts/ContextChangeEvent;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$5.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.AggregateWorkingSet.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandService.refreshElements(Ljava/lang/String;Ljava/util/Map;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$5.run()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.add(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.property.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer$5.run()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CTabFolder$8.run()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.put(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractAction.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformLogWriter.isLoggable(Lorg/osgi/framework/Bundle;Ljava/lang/String;I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Lorg/eclipse/core/runtime/IPath;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.setDevice(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.makeAbsolute()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.canonicalize()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.collapseParentReferences()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.operations.ObjectUndoContext.matches(Lorg/eclipse/core/commands/operations/IUndoContext;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.MatchingCharacterPainter.paint(I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolveArgs(Lorg/eclipse/e4/core/internal/di/Requestor;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;ZZZ)[Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.getProviderType(Ljava/lang/reflect/Type;)Ljava/lang/Class;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.hasQualifier(Ljava/lang/Class;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.isOverridden(Ljava/lang/reflect/Method;Ljava/util/ArrayList;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.getQualifier(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/osgi/framework/util/KeyedElement;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.query.QueryUtil.createIUQuery(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/query/IQuery;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.lastIndexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.extractRange(Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.<init>(Lorg/eclipse/equinox/p2/metadata/Version;ZLorg/eclipse/equinox/p2/metadata/Version;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.isPredefined(Lorg/eclipse/equinox/p2/metadata/expression/IExpression;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.put(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.equals(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.removeAll(Ljava/util/Collection;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.CustomHashtable.keyEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.doFindItem(Ljava/lang/Object;)Lorg/eclipse/swt/widgets/Widget;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.matchingFirstSegments(Lorg/eclipse/core/runtime/IPath;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.tableProviders.objectstatistics.ClassStatistics$1.accept(Lcom/jrockit/mc/flightrecorder/spi/IEvent;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramSelectionIterator.skipForwardEvent()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier$1.bundleChanged(Lorg/osgi/framework/BundleEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.ErrorPageErrorHandler.getErrorPage(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(Ljava/net/URL;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.NativeCodeFinder.getNativePaths()Ljava/util/List;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.isUpdateJob(Lorg/eclipse/core/runtime/jobs/Job;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.search.federated.FederatedSearchJob.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveableHelper$6.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.progress.DeferredTreeContentManager$1.isParent(Lorg/eclipse/ui/progress/DeferredTreeContentManager$DeferredContentFamily;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.SubMonitor.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.InstancePreferences.loadLegacy()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.BundleDefaultPreferences.<init>(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.internalPut(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.OSGiPreferencesServiceImpl$OSGiLocalRootPreferences.fixPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.isPrefixOf(Lorg/eclipse/core/runtime/IPath;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.removeFileExtension()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.convertFromProperties(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/util/Properties;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressManagerUtil.getModalChildExcluding([Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/swt/widgets/Shell;)Lorg/eclipse/swt/widgets/Shell;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.engine.CSSElementContextImpl.elementMustBeRefreshed(Lorg/eclipse/e4/ui/css/core/dom/IElementProvider;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.addListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal()Ljava/net/URL;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.shouldCache(Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.FindSupport.find(Ljava/net/URL;)Ljava/net/URL;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$3.visit(Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PluginVersionIdentifier.parseVersion(Ljava/lang/String;)[Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getAttributeAsIs(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementHandle.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IConfigurationElement;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.PersistenceToolkit.create(Lcom/jrockit/mc/common/persistence/Type;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putBoolean(Ljava/lang/String;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.preference.PreferenceStore.firePropertyChangeEvent(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.implies(Ljava/security/Permission;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Collections.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.checkPermission2(Ljava/security/Permission;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.BaseExtensionPointHandle.getExtension(Ljava/lang/String;)Lorg/eclipse/core/runtime/IExtension;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.removeNodeChildrenFromQueue(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.getLocalList(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)[Lorg/eclipse/core/filesystem/IFileInfo;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ProjectDescription.setBuildSpec([Lorg/eclipse/core/resources/ICommand;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.getDescribedProperty(Lorg/eclipse/core/runtime/QualifiedName;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeMatcher.getSpecificDescription(Lorg/eclipse/core/internal/content/BasicDescription;)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.isRequested(Lorg/eclipse/core/runtime/QualifiedName;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.setProperty(Lorg/eclipse/core/runtime/QualifiedName;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.dispatchEventImpl(Ljava/awt/AWTEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.AWTKeyStroke.registerSubclass(Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.event.EventListenerList.remove(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.getLocalAttribute(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.isDefined(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS.translateHTMLToCSS(Ljavax/swing/text/AttributeSet;)Ljavax/swing/text/AttributeSet;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.removeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$FontWeight.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$StringValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.getSelectedIndex()I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JSplitPane.addImpl(Ljava/awt/Component;Ljava/lang/Object;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTabbedPane.indexOfComponent(Ljava/awt/Component;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.PriorityQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.export(Ljava/io/OutputStream;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.exportNode(Ljava/io/OutputStreamWriter;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultComboBoxModel.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.actionPerformed(Ljava/awt/event/ActionEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.MuxingAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.emptyTag(Ljavax/swing/text/Element;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.noMatchForTagInAttributes(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/html/HTML$Tag;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument$DefaultDocumentEvent.getChange(Ljavax/swing/text/Element;)Ljavax/swing/event/DocumentEvent$ElementChange;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$LeafIterator.setEndOffset()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JEditorPane$PlainEditorKit.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextAreaUI.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.<init>(Ljavax/swing/text/Element;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.TableView.updateInsets()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.TextLayoutStrategy.layoutRow(Ljavax/swing/text/FlowView;II)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.PriorityBlockingQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.findAndRemove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.FrameView$FrameEditorPane.getEditorKitForContentType(Ljava/lang/String;)Ljavax/swing/text/EditorKit;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addDecoration(Lsun/font/Decoration;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addFont(Ljava/lang/Object;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addToVector(Ljava/lang/Object;ILjava/util/Vector;[I)[I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.handleInsertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.insertUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.postRemoveUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.help.plaf.basic.BasicContentViewerUI$PageLoader$Callback.handleStartTag(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader$MetaAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.PlainDocument.insertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader.handleText([CI)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JOptionPane.showOptionDialog(Ljava/awt/Component;Ljava/lang/Object;Ljava/lang/String;IILjavax/swing/Icon;[Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.contentsChanged(Ljavax/swing/event/ListDataEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setSelectedValue(Ljava/lang/Object;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractButton.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.setDropTarget(Ljava/awt/dnd/DropTarget;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.addDropTargetListener(Ljava/awt/dnd/DropTargetListener;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.setComponent(Ljava/awt/Component;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultCellEditor$2.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerDateModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerNumberModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicFileChooserUI.resetGlobFilter()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DragSourceContext.setCursorImpl(Ljava/awt/Cursor;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.help.SortMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.help.UniteAppendMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setCellRenderer(Ljavax/swing/ListCellRenderer;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTextField.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex()I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultDesktopManager.getBoundsForIconOf(Ljavax/swing/JInternalFrame;)Ljava/awt/Rectangle;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicColorChooserUI.installPreviewPanel()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalIconFactory$ImageCacher$ImageGcPair.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.BumpBuffer.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.listensToAttribute(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.HotspotManagementToolkit.isVMOptionExplicit(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putByteArray(Ljava/lang/String;[B)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.getRangeType()Lcom/jrockit/mc/rjmx/ui/internal/ChartModel$AxisRange;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.graph.EventGraphTree.restoreExpansionState()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodHandles.constant(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.stream.DistinctOps$1$1.accept(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.StateImpl.checkProp(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.compatibility.state.PlatformBundleListener$1.filterMatches(Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.module.ResolverBundle.equivalentMaps(Ljava/util/Map;Ljava/util/Map;Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.ImportPackageSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.HostSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleRevision.isCurrent()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.verifyNoDuplicates(Ljava/util/Collection;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.cleanup(Lorg/eclipse/osgi/container/ModuleRevision;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.hookregistry.StorageHookFactory.createStorageHookAndValidateFactoryClass(Lorg/eclipse/osgi/storage/BundleInfo$Generation;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getStorageHook(Ljava/lang/Class;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionsParser.logStatus(Lorg/xml/sax/SAXParseException;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryIndexElement.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.toURI(Ljava/net/URL;)Ljava/net/URI;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle.adapt0(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.DTOBuilder.mapComponentType(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.url.EquinoxFactoryManager.getField(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/reflect/Field;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.ref.Log.security()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.<init>(Ljava/lang/String;Lorg/eclipse/equinox/internal/util/ref/Log;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleContainer.update(Lorg/eclipse/osgi/container/Module;Lorg/eclipse/osgi/container/ModuleRevisionBuilder;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.Activator.startRegistry()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionRegistry.<init>(Lorg/eclipse/core/runtime/spi/RegistryStrategy;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.cacheUse()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.WorkManager$NotifyRule.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.isConflicting(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.removeByKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/registry/KeyedElement;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.mergeContribution(Lorg/eclipse/core/internal/registry/Contribution;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryObjectManager.findCommonNamespaceIdentifier([Lorg/eclipse/core/internal/registry/RegistryObject;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.EclipseBundleListener.checkForNLSFiles(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.TableReader.checkCacheValidity(Ljava/io/DataInputStream;J)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.console.command.adapter.Activator.getCommandMethods(Ljava/lang/Object;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.loadData(Ljava/lang/String;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseScheduledApplication.<init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.addScheduledApp(Lorg/eclipse/equinox/internal/app/EclipseScheduledApplication;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationDescriptor.checkArgs(Ljava/util/Map;Z)Ljava/util/Map;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationHandle.destroy()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$Values.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ValuesView.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.TreeMap.valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.init()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.createAppDescriptor(Lorg/eclipse/core/runtime/IExtension;)Lorg/eclipse/equinox/internal/app/EclipseAppDescriptor;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;IIZLjava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.enterLoad(Ljava/net/URI;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.http.util.LangUtils.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.http.pool.RouteSpecificPool.getFree(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.util.JREProxyHelper.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.StringUtil.equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.ProxyType.setProxyData(Lorg/eclipse/core/net/proxy/IProxyData;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putInt(Ljava/lang/String;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.cert.X509CertSelector.matchSubjectAlternativeNames(Ljava/security/cert/X509Certificate;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionParser.removeRedundantTrail(Ljava/util/List;Ljava/lang/Comparable;)Ljava/lang/Comparable;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.makeRelative(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxManipulatorImpl.setConfiguratorManipulator()Lorg/eclipse/equinox/internal/provisional/configuratormanipulator/ConfiguratorManipulator;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.FileLocator.getBundleFile(Lorg/osgi/framework/Bundle;)Ljava/io/File;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.fromString(Ljava/lang/String;)Ljava/net/URI;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameURI(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameString(Ljava/lang/String;Ljava/lang/String;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxBundlesState.getPrerequisteBundles(Lorg/eclipse/equinox/frameworkadmin/BundleInfo;)[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository.getCompleteArtifactDescriptor(Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.IUMap.remove(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isDynamicImport(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.pde.internal.build.publisher.FeatureRootAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AdviceFileAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractAdvice.matchVersion(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.isIncluded(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isOptional(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createMatchExpressionFromRange(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;)Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.getCachedTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.sat4j.tools.FullClauseSelectorSolver.addControlableClause(Lorg/sat4j/specs/IVecInt;)Lorg/sat4j/specs/IConstr;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.server.session.AbstractSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.listener.ELContextCleaner.purgeEntries(Ljava/lang/reflect/Field;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.contains(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.startedBundle2(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.unbind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.getMethod(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;Lorg/osgi/framework/ServiceReference;)Ljava/lang/reflect/Method;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.InstanceProcess.checkCanCauseCycle(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getMethod(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/reflect/Method;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.bind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.readObject(Ljava/io/InputStream;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeValue(Ljava/lang/Object;Ljava/io/OutputStream;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writePrimitiveArray(Ljava/lang/Class;Ljava/lang/Object;ILjava/io/OutputStream;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.xml.impl.XMLParserImpl.parse_tag_special(Lorg/eclipse/equinox/internal/util/xml/impl/TagImpl;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doProperty(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doReference(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getNamespace(Ljava/lang/String;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.validate(II)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getCardinality(Ljava/lang/String;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.isCorrectComponentTag(Ljava/lang/String;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PerformanceStats.removeStats(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.watson.DefaultElementComparator.testEquality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putLong(Ljava/lang/String;J)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.getValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.stoppingBundle(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentType.hasFileSpec(Lorg/eclipse/core/runtime/preferences/IScopeContext;Ljava/lang/String;I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.internalIntrospecthelper(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.createTypedArray(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.convert(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTransferable.getTransferData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.isStandardTextRepresentationClass()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextUI$TextTransferHandler$TextTransferable.getRicherData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.net.Socket$1.run()Ljava/lang/Boolean;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.TestExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.LegacyHandlerSubmissionExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.ActiveShellExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.expressions.WorkbenchWindowExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.findElementsRecursive(Lorg/eclipse/e4/ui/model/application/MApplicationElement;Ljava/lang/Class;Lorg/eclipse/e4/ui/workbench/Selector;Ljava/util/List;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ToolBarManagerRenderer$7.select(Lorg/eclipse/e4/ui/model/application/MApplicationElement;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.showIntro(Lorg/eclipse/ui/IWorkbenchWindow;Z)Lorg/eclipse/ui/intro/IIntroPart;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.findCoolItem([Lorg/eclipse/swt/widgets/CoolItem;Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/swt/widgets/CoolItem;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getField(Ljava/lang/String;)Ljava/lang/reflect/Field;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.setIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.MenuManager.update(ZZ)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkingSetMenuContributionItem.fill(Lorg/eclipse/swt/widgets/Menu;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.Model.areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.getControl()Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Ljava/lang/Runnable;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarManager.update(Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.addValue(Lorg/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.help.WorkbenchHelpSystem.setHelpTrace(Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.update(Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.ParameterizedCommand.<init>(Lorg/eclipse/core/commands/Command;[Lorg/eclipse/core/commands/Parameterization;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CoolBarToTrimManager.remove(Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/jface/action/IContributionItem;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarContributionItem.fill(Lorg/eclipse/swt/widgets/CoolBar;I)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.RadioMenu.isEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ShowInMenu.getShowInPartIds(Lorg/eclipse/ui/IWorkbenchPart;)Ljava/util/ArrayList;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveAllAction.updateState()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveablesList.fillModelsClosing(Ljava/util/Set;Ljava/util/Map;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.switchToPosition(Lorg/eclipse/jface/text/link/LinkedModeModel;Lorg/eclipse/jface/text/link/LinkedPosition;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.prune(Ljava/util/List;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$SubMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StyledString.isDifferentStyle(Lorg/eclipse/jface/viewers/StyledString$Styler;Lorg/eclipse/jface/viewers/StyledString$Styler;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.removeAutoEditStrategy(Lorg/eclipse/jface/text/IAutoEditStrategy;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionGroup.overlapsOrTouches(Lorg/eclipse/jface/text/link/LinkedPosition;Lorg/eclipse/jface/text/DocumentEvent;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.NonLocalUndoUserApprover.elementsContains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.createIURequirements(Ljava/util/Collection;)Ljava/util/Collection;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.queryForIU(Lorg/eclipse/equinox/p2/publisher/IPublisherResult;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.versionElements(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ConfigCUsAction.publishBundleCUs(Lorg/eclipse/equinox/p2/publisher/IPublisherInfo;[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;Ljava/lang/String;Lorg/eclipse/equinox/p2/publisher/IPublisherResult;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.FeaturesAction.getVersionRange(Lorg/eclipse/equinox/p2/publisher/eclipse/FeatureEntry;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.ExpandableComposite.setClient(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.propertytester.PlatformPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(Lorg/eclipse/core/internal/content/ContentTypeMatcher;Ljava/lang/String;Ljava/util/Comparator;)[[Lorg/eclipse/core/runtime/content/IContentType;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(Lorg/eclipse/core/internal/resources/File;Lorg/eclipse/core/internal/resources/ResourceInfo;Z)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Cache$Entry.compare(Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.getAdapter(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.classForName(Lorg/eclipse/core/runtime/IAdapterFactory;Ljava/lang/String;)Ljava/lang/Class;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Document;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.UAElement.importElement(Lorg/eclipse/help/internal/UAElement;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.AbstractIntroContainer.handleIncludeStyleInheritence(Lorg/eclipse/ui/internal/intro/impl/model/IntroInclude;Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroElement;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableValue.updateInnerObservableValue()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableList.updateInnerObservableList()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.swt.SWTVetoableValueDecorator.<init>(Lorg/eclipse/swt/widgets/Widget;Lorg/eclipse/jface/internal/databinding/swt/WidgetStringValueProperty;Lorg/eclipse/core/databinding/observable/value/IObservableValue;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.list.MultiList.<init>(Lorg/eclipse/core/databinding/observable/Realm;[Lorg/eclipse/core/databinding/observable/list/IObservableList;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableSet.updateInnerObservableSet()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableMap.updateDetailMap()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver.countPrecedingItems(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewContentProvider.createChildren(Ljava/lang/Object;)[Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardActivityFilter.select(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.includeInSetStructure(Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ActionSet;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.ProvisioningOperationWizard.provisioningContextChanged()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldHideToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.removeAttributeFromListener(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.setValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;Ljava/lang/String;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ConditionChooser.updateUnit()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.LocalizedString.getLocales()Ljava/util/List;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.FieldFactory.createFromDisplayUnit(Lcom/jrockit/mc/common/unit/UnitDescriptor;Ljava/lang/String;I)Lcom/jrockit/mc/ui/model/fields/Field;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.removeCollector(Lorg/eclipse/ui/internal/progress/IProgressUpdateCollector;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.merge(Lorg/eclipse/e4/ui/model/application/ui/MExpression;Lorg/eclipse/e4/ui/model/application/ui/MExpression;)Lorg/eclipse/e4/ui/model/application/ui/MExpression;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialViewer.drawBackground(Lorg/eclipse/swt/graphics/GC;Lcom/jrockit/mc/ui/dial/DialDevice;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.fields.internal.QuantityField.initKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;Ljava/lang/String;Lcom/jrockit/mc/common/unit/IQuantity;Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.getNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/jrockit/mc/common/xml/ClassFactory;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.setAttributeType(Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.sampler.CompositeRangeSampler.needsStructuralRefresh(Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.focusLost(Ljava/awt/event/FocusEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectInputStream.loadFeatureMap(Lorg/eclipse/emf/ecore/util/FeatureMap$Internal;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setExtendedMetaDataOption(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FontDescriptor.setStyle(I)Lorg/eclipse/jface/resource/FontDescriptor;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.canEdit(Ljava/lang/String;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.StringConstructorCellEditor.checkContructor(Ljava/lang/Class;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getForeground(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Color;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyDescriptor.isCompatibleWith(Lorg/eclipse/ui/views/properties/IPropertyDescriptor;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.ArrayLengthCellEditor.doGetValue()Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.fireSelectionChanged(II)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.FileUtil.computeOverlap(Ljava/net/URI;Ljava/net/URI;Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Queue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ScopeSetDialog.findOperation(Lorg/eclipse/help/ui/internal/views/ScopeSet;Ljava/lang/Class;)Lorg/eclipse/help/ui/internal/views/ScopeSetDialog$PendingOperation;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.internal.BasicPrimitivesConverter.getConverter(Ljava/lang/Class;)Lcom/jrockit/mc/rjmx/services/flr/internal/Converter;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferenceServiceRegistryHelper.applyRuntimeDefaults(Ljava/lang/String;Ljava/lang/ref/WeakReference;)Ljava/lang/ref/WeakReference;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.compiler.JspUtil.interpreterCall(ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.<clinit>()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory.getClassForInterface(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.demo.html.HTMLParser.addText(Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.servlet.http.HttpServlet.getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.check(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.configAdminRegistered(Lorg/osgi/service/cm/ConfigurationAdmin;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.updated(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.isPossibleMatch(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Reference.bindNewReference(Lorg/osgi/framework/ServiceReference;Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver.removeNonEffectiveRequirements(Ljava/util/ListIterator;Ljava/util/List;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.themes.ColorsAndFontsPreferencePage.isDefault(Lorg/eclipse/ui/internal/themes/ColorDefinition;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.updateActive(Lorg/eclipse/ui/IEditorPart;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.UIEvents.contains(Lorg/osgi/service/event/Event;Ljava/lang/String;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.saveData(Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.unsubscribe(Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardContentProvider.getParent(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.filesystem.URIUtil.equals(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.index.Index.concatenateUnique(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator.coerceAndEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.addListener(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.skip()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.isSubtype(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.layout(Lorg/eclipse/swt/graphics/GC;ILorg/eclipse/ui/internal/forms/widgets/Locator;ILjava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.about.InstallationDialog.createContents(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.setVisible(Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.equalSettings(Lcom/jrockit/mc/rjmx/services/flr/IEventSettingsHolder;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.wizards.preferences.WizardPreferencesImportPage1.getTransfers()[Lorg/eclipse/ui/internal/preferences/PreferenceTransferElement;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.scopeMatches(Ljava/lang/String;Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.NewWizardNewPage.isPrimary(Lorg/eclipse/ui/wizards/IWizardDescriptor;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.ColumnComposite.countVisibleColumnsBefore(Lcom/jrockit/mc/rjmx/ui/column/IColumn;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.KeysPreferencePage.createModifyTab(Lorg/eclipse/swt/widgets/TabFolder;)Lorg/eclipse/swt/widgets/Composite;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage.createDataControls(Lorg/eclipse/swt/widgets/Composite;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.fillEditorTable()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeSorter.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.getInitialRadioSelection()I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.TwoPaneElementSelector.setLowerSelectedElement(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredList.setSelection([Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.swing.ProgressMonitor.isCanceled()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.DefaultHelpUI.isActiveShell(Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/ui/IWorkbenchWindow;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.refresh()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.SeeAlsoPart.updateLinks(Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/util/List;)Ljava/lang/Class;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.allSameClass(Ljava/util/List;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.fireSelectionChanged(Lorg/eclipse/ui/forms/IFormPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.update()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.checkLimit()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.editor.FormPage.isActive()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCToolBarManager.remove(Lorg/eclipse/jface/action/IAction;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.Section.setSeparatorControl(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.isIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.BindingService.isSameBinding(Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;Lorg/eclipse/e4/ui/model/application/commands/MCommand;Lorg/eclipse/jface/bindings/Binding;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuFactoryGenerator.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ApplicationImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ContributionImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.CoreExpressionImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.advanced.impl.PerspectiveImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.WindowImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.PopupMenuImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectToolItemImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectMenuItemImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DynamicMenuContributionImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.ToolControlImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureChangeImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureMapEntryImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EAttributeImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EReferenceImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassifierImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EDataTypeImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumLiteralImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xml.type.impl.SimpleAnyTypeImpl.eIsSet(I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleData.dynamicIsSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.init(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/util/Map;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equals(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EObject;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.TopologicalSort.buildDependencyGraph()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.GenericMApplicationElementFactoryImpl$MApplicationElementClassToEClass.buildMapping(Lorg/eclipse/emf/ecore/EPackage;)Ljava/util/Map;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.saveAll(Ljava/util/List;ZZZLorg/eclipse/jface/operation/IRunnableContext;Lorg/eclipse/jface/window/IShellProvider;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferencePageHistory.addHistoryEntry(Lorg/eclipse/ui/internal/dialogs/PreferenceHistoryEntry;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.model.ConflictModel.setConflicts(Ljava/util/Collection;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MoveControlAction.run()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.checkDuplicates(Lorg/eclipse/ui/internal/NavigationHistoryEditorInfo;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.failsEnablement([Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCBook.showPageWithData(Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMinValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMaxValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedDialsSectionPart$AttributeDial.updateMetadata()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.setQuantityKindFromAttribute(Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setKindOfQuantity(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.updateQuantityKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.activate()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.TogglingCellEditor.doSetValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.canEdit(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.getCellEditor(Ljava/lang/Object;)Lorg/eclipse/jface/viewers/CellEditor;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.createConverter(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/conversion/IConverter;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateValueStrategy.findValidator(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/validation/IValidator;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.getKeyForClass(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToByteConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToShortConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToLongConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToFloatConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToDoubleConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigDecimalConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.NumberToStringConverter.<init>(Lcom/ibm/icu/text/NumberFormat;Ljava/lang/Class;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeConfiguratorTableFactory$2.getValueTyped(Lcom/jrockit/mc/rjmx/subscription/MRI;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.operativeset.actions.AddMatchingRelationalKeyAction.addMatchingEventsForType(Lcom/jrockit/mc/flightrecorder/spi/IEventType;Lcom/jrockit/mc/flightrecorder/spi/IField;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.toolbar.DeleteAction.removeFromList(Lcom/jrockit/mc/components/ui/tab/BaseDescriptor;Ljava/util/List;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addAfter(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addBefore(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.loadMenuAndToolbarStructure()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.createMenuEntries(Lorg/eclipse/e4/ui/model/application/ui/menu/MMenu;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.addMatchedKeys(Ljava/util/ArrayList;Lorg/eclipse/core/runtime/preferences/PreferenceFilterEntry;[Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldCreateToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.selectionChanged(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.commands.internal.Traverser.lookupMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.NewPropertySheetHandler.findPropertySheet(Lorg/eclipse/core/commands/ExecutionEvent;Lorg/eclipse/ui/views/properties/PropertyShowInContext;)Lorg/eclipse/ui/views/properties/PropertySheet;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$4$PerspectiveDropTarget.sameShell()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.WorkbenchActivitySupport.addExtension(Lorg/eclipse/core/runtime/dynamichelpers/IExtensionTracker;Lorg/eclipse/core/runtime/IExtension;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.EditorHistoryItem.matches(Lorg/eclipse/ui/IEditorInput;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.checkEditor(Lorg/eclipse/ui/IEditorInput;Ljava/util/List;Lorg/eclipse/ui/internal/EditorReference;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.createEntry(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IEditorPart;Lorg/eclipse/ui/INavigationLocation;)Lorg/eclipse/ui/internal/NavigationHistoryEntry;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistoryEntry.mergeInto(Lorg/eclipse/ui/internal/NavigationHistoryEntry;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(Lorg/eclipse/swt/widgets/Widget;[Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.itemExists([Lorg/eclipse/swt/widgets/Item;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.loader.ContentProviderManager.getContentProviderParentPage(Lorg/eclipse/ui/intro/config/IIntroContentProvider;)Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroPage;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.internalRefresh(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.internalIsInputOrEmptyPath(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.startsWith(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$9.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.AbstractWorkingSetDialog.removeSelectedWorkingSets(Ljava/util/List;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.gotoEntryForTab(Lorg/eclipse/ui/internal/NavigationHistoryEntry;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.handleWidgetSelected()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.Timestamp.in(Lcom/jrockit/mc/common/unit/IUnit;)Lcom/jrockit/mc/common/unit/IQuantity;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putDouble(Ljava/lang/String;D)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.restoreChangedWorkingSets()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesMapper.close(Lorg/eclipse/equinox/internal/security/storage/SecurePreferencesRoot;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.getCloseableSiblingParts(Lorg/eclipse/e4/ui/model/application/ui/basic/MPart;)Ljava/util/List;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ActionChooser$1.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeSelectorComponent$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.ViewsPreferencePage$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$12.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.layout.TreePart.updateSelection()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.tracetree.TraceModel.traceContainsFrames(Lcom/jrockit/mc/common/IMCStackTrace;Ljava/util/List;Ljava/util/Map;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonTypeProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMaxValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMinValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.handleSelection(Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.contentassist.AdditionalInfoController.showInformation(Lorg/eclipse/jface/text/contentassist/ICompletionProposal;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationEvent(Lorg/osgi/service/cm/ConfigurationEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationChange(Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;Lorg/osgi/service/cm/Configuration;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getComponentPropByPID(Ljava/lang/String;)Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.handleBoundServicesUpdate(Ljava/util/Hashtable;Ljava/util/Dictionary;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.director.app.DirectorApplication.parseIUsArgument(Ljava/util/List;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.validation.ObjectToPrimitiveValidator.mapContainsValues(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager.findMessage(Ljava/lang/Object;Ljava/util/ArrayList;)Lorg/eclipse/ui/internal/forms/MessageManager$Message;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.internal.ToolbarFormEditor.show(Lcom/jrockit/mc/ui/formpage/FormPageContributionGroup;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.refresh()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.tree.MBeanTreeSectionPart$1$1.findItem(Ljava/lang/Object;[Lorg/eclipse/swt/widgets/TreeItem;)Lorg/eclipse/swt/widgets/TreeItem;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.originatesFrom(Lorg/eclipse/core/runtime/IExtension;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.createProxy(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/core/internal/adapter/AdapterFactoryProxy;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Workspace.computeActiveBuildConfigOrder()Lorg/eclipse/core/internal/resources/ComputeProjectOrder$VertexOrder;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.successors.SuccessorFrameNodeBuilder.addTrace(Lcom/jrockit/mc/flightrecorder/ui/components/histogram/HistogramItem;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.createNewCharto(Lcom/jrockit/mc/flightrecorder/ui/components/chart/model/FLRChartDescriptor;Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;)Lse/hirt/greychart/impl/DefaultXYGreyChart;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.getContentType(Lcom/jrockit/mc/common/unit/UnitDescriptor;)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMin.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMax.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.AbstractSingleMRITransformation.subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue.getLiveValue()Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.KeyBindingService.removeKeyBindingService(Lorg/eclipse/ui/IWorkbenchSite;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialConfiguration.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.tabs.threads.ThreadMasterDetailBlock.pageChanged(Lorg/eclipse/jface/dialogs/PageChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.WorkbenchPartPropertySheets.getPropertySheetProxyPage(Ljava/lang/Object;)Lcom/jrockit/mc/ui/misc/WorkbenchPartPropertySheets$PropertySheetProxyPage;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.isThisPart(Lorg/eclipse/ui/IWorkbenchPartReference;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.handlePartDeactivation(Lorg/eclipse/ui/IWorkbenchPartReference;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler$PartListener.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partOpened(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory$1.updateNavigationHistory(Lorg/eclipse/ui/IWorkbenchPartReference;Z)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$DetailsContentViewer.refresh([Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.perspectiveChanged(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IPerspectiveDescriptor;Lorg/eclipse/ui/IWorkbenchPartReference;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.SelectableIUsPage$2.checkStateChanged(Lorg/eclipse/jface/viewers/CheckStateChangedEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$ItemsListLabelProvider.isSelected(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryChangeEvent.getHostDelta(Ljava/lang/String;)Lorg/eclipse/core/internal/registry/RegistryDelta;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryDelta.getExtensionDeltas(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IExtensionDelta;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$3.matches(Lorg/eclipse/core/runtime/IExtensionPoint;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.getViewAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.browse.MultiProtocolFileSystemBrowserAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.outgoing.MultiProtocolOutgoingAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.getAdapterNames()[Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.indexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.jsp.jasper.Activator.getJasperBundle()Lorg/osgi/framework/Bundle;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.getImportingBundles()[Lorg/osgi/framework/Bundle;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.addRequirers(Ljava/util/Set;Lorg/eclipse/osgi/container/ModuleWiring;Ljava/lang/String;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.DevClassPathHelper.getArrayFromList(Ljava/lang/String;)[Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/internal/registry/ConfigurationElement;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Lorg/eclipse/core/runtime/spi/RegistryContributor;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher.perspectiveIsActive(Lorg/eclipse/ui/IPerspectiveDescriptor;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectPrevious(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectNext(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormTextModel.select(Lorg/eclipse/ui/internal/forms/widgets/IFocusSelectable;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart$2.linkActivated(Lorg/eclipse/ui/forms/events/HyperlinkEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormUtil.ensureVisible(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.events.ExpansionEvent.getState()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$13.keyPressed(Lorg/eclipse/swt/events/KeyEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$3.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$6.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CycleBaseHandler$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$7.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$6.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$4.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.FormToolkit$BorderPainter.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.actions.SelectWorkingSetsAction.isWorkingSetEnabled(Lorg/eclipse/ui/IWorkingSet;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.BrowserPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ContextHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.EngineResultSection.hasControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.views.JVMBrowserView.addActions(Lorg/eclipse/jface/action/IMenuManager;Lorg/eclipse/jface/viewers/IStructuredSelection;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextEmail.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextRegex.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.paint(Lorg/eclipse/swt/graphics/GC;Lorg/eclipse/swt/graphics/Rectangle;Ljava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;Lorg/eclipse/ui/internal/forms/widgets/SelectionData;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.SearchField.addPreviousPick(Ljava/lang/String;Lorg/eclipse/ui/internal/quickaccess/QuickAccessElement;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessDialog$1$1.addPreviousPick(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.DefaultHyperlinkPresenter.highlightRegion(Lorg/eclipse/jface/text/IRegion;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer$3.select()V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.parse(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.handleScroll(Lorg/eclipse/swt/widgets/Event;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.isParentScrolling(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreeViewer.replace(Ljava/lang/Object;ILjava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.createListDiffs(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.listIndexOf(Ljava/util/List;Ljava/lang/Object;I)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue$1.handleValueChange(Lorg/eclipse/core/databinding/observable/value/ValueChangeEvent;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.map.BidiObservableMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.Pool$AccessUnit.matches(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceCompareTo(Lorg/eclipse/ecf/core/identity/BaseID;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.naming.ldap.Rdn$RdnEntry.compareTo(Ljavax/naming/ldap/Rdn$RdnEntry;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver$ResolveProcess.compare(Lorg/osgi/resource/Capability;Lorg/osgi/resource/Capability;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Lang.guessLanguages(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(Ljava/lang/CharSequence;I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule$4.isMatch(Ljava/lang/CharSequence;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.OptimisticComparator.compareCells(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.WeakInterningHashSet.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.isTouch()Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ECollections$2.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.nio.file.FileTreeWalker.wouldLoop(Ljava/nio/file/Path;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.toString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.getFormat()Lorg/eclipse/equinox/p2/metadata/IVersionFormat;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemReasonString(I)Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.FileEditorMapping.compareList(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.preferences.PropertyUtil.isEqual(Lorg/eclipse/ui/internal/preferences/IPropertyMap;Lorg/eclipse/ui/internal/preferences/IPropertyMap;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.equality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnChainMatch(Ljava/util/List;ILjava/util/List;I)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.skipWildCards(Ljava/util/List;I)I";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnmatch(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextAttribute.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Feature.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.equals([Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;Ljava/lang/Comparable;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceEquals(Lorg/eclipse/ecf/core/identity/BaseID;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.helpers.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.equals(Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.ImageDescription.safeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.equalContext(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllLimits(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MemberName$Factory.getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Class;)Ljava/util/List;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.valueEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/util/EnumMap;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.security.Identity.identityEquals(Ljava/security/Identity;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$BasicEStoreEList.delegateEquals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArraySet.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.font.TextLayout.equals(Ljava/awt/font/TextLayout;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ShapeGraphicAttribute.equals(Ljava/awt/font/ShapeGraphicAttribute;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ImageGraphicAttribute.equals(Ljava/awt/font/ImageGraphicAttribute;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.equal(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ForwardingNode.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Program.deriveAll([Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;" -> "net.mooctest.Program.query(Lnet/mooctest/Datalog;[Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest3.testFact()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.test()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalogSames()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest5.blowTestValue()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest.<init>()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalogGets()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.testValue()V";
	"net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;" -> "net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;";
	"net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;" -> "net.mooctest.Datalog.compatibleWith(Lnet/mooctest/Fact;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "net.mooctest.Datalog.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "net.mooctest.Fact.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "net.mooctest.Datalog.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "net.mooctest.DatalogOtherTest.testPredicate()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;" -> "net.mooctest.Program.deriveAll([Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "net.mooctest.DatalogTest.equals()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.CapabilityPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.PackagePermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdminPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdaptPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.WeakGroupedListenerList$WeakComputationReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.http.impl.client.cache.ResourceReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.nio.file.attribute.AclEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.spec.EllipticCurve.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$EntryIterator$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Calendar.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.naming.RefAddr.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttributes.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.tree.TreePath.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.net.Proxy.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Method.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Parameter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.LinearUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.mapping.ResourceMapping.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.core.DefaultTreeNode.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientStringTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.OrTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.NotTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.AndTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.ServiceEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractAttributeSubscription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.ImageImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FileImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialDevice.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.NotExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ActionContributionItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.Row.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.CSSConditionalSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.index.IndexCommit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.ConstantScoreQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FilteredQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.NumericRangeQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanOrQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingSpanFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheRangeFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQueryWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheImpl$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.SortField.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.fst.PairOutputs$Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.validation.ValidationStatus.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.DefaultDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.Property.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.FileInfoMatcherDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.events.BuildContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.Requestor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.CSSConditionalSelectorImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.QualifiedName.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormatParser$Fragment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.AbstractScope.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.io.View.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredSelection.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.ViewerRow.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.ServicePermission$Properties$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.graphics.TextStyle.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$ControlDecorator.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$Message.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyShowInContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.DefaultSaveable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.EditorElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.WizardElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.ViewElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.part.DrillFrame.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVecInt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.Vec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.ObjectiveFunction.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.tools.WeightedObject.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.help.Map$ID.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$EntrySetView.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.CharArrayMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$ValueComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.Headers.getIndex(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryIndexForKey(IILjava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryForKey(IILjava/lang/Object;)Lorg/eclipse/emf/common/util/BasicEMap$Entry;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentPredicate(Ljava/util/List;Lorg/eclipse/emf/ecore/EReference;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.util.CircularArray.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.wasSet()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.remove(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementMulti.getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.DirectMap.findKey(Ljava/lang/String;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ResourceTranslator.hasRuntime21(Lorg/osgi/framework/Bundle;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.removeNode(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.find(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.putTreeVal(ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.log.Log.initialized()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays$ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.StringToNumberConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToBooleanConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToCharacterConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.isPrimitiveTypeMatchedWithBoxed(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.site.SelectionProviderActivator$TempAdapterFactory.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart$1.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.DesignerTab.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.StatisticsCalculator.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetPage.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectActionContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.ViewDescriptor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.ContextServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.EvaluationServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchSupportFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator$ParentLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(Lorg/eclipse/e4/core/internal/contexts/ContextChangeEvent;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$5.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.AggregateWorkingSet.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandService.refreshElements(Ljava/lang/String;Ljava/util/Map;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$5.run()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.add(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.property.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer$5.run()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CTabFolder$8.run()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.put(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractAction.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformLogWriter.isLoggable(Lorg/osgi/framework/Bundle;Ljava/lang/String;I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Lorg/eclipse/core/runtime/IPath;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.setDevice(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.makeAbsolute()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.canonicalize()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.collapseParentReferences()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.operations.ObjectUndoContext.matches(Lorg/eclipse/core/commands/operations/IUndoContext;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.MatchingCharacterPainter.paint(I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolveArgs(Lorg/eclipse/e4/core/internal/di/Requestor;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;ZZZ)[Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.getProviderType(Ljava/lang/reflect/Type;)Ljava/lang/Class;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.hasQualifier(Ljava/lang/Class;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.isOverridden(Ljava/lang/reflect/Method;Ljava/util/ArrayList;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.getQualifier(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/osgi/framework/util/KeyedElement;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.query.QueryUtil.createIUQuery(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/query/IQuery;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.lastIndexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.extractRange(Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.<init>(Lorg/eclipse/equinox/p2/metadata/Version;ZLorg/eclipse/equinox/p2/metadata/Version;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.isPredefined(Lorg/eclipse/equinox/p2/metadata/expression/IExpression;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.put(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.equals(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.removeAll(Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.CustomHashtable.keyEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.doFindItem(Ljava/lang/Object;)Lorg/eclipse/swt/widgets/Widget;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.matchingFirstSegments(Lorg/eclipse/core/runtime/IPath;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.tableProviders.objectstatistics.ClassStatistics$1.accept(Lcom/jrockit/mc/flightrecorder/spi/IEvent;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramSelectionIterator.skipForwardEvent()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier$1.bundleChanged(Lorg/osgi/framework/BundleEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.ErrorPageErrorHandler.getErrorPage(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(Ljava/net/URL;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.NativeCodeFinder.getNativePaths()Ljava/util/List;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.isUpdateJob(Lorg/eclipse/core/runtime/jobs/Job;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.search.federated.FederatedSearchJob.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveableHelper$6.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.progress.DeferredTreeContentManager$1.isParent(Lorg/eclipse/ui/progress/DeferredTreeContentManager$DeferredContentFamily;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.SubMonitor.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.InstancePreferences.loadLegacy()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.BundleDefaultPreferences.<init>(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.internalPut(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.OSGiPreferencesServiceImpl$OSGiLocalRootPreferences.fixPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.isPrefixOf(Lorg/eclipse/core/runtime/IPath;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.removeFileExtension()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.convertFromProperties(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/util/Properties;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressManagerUtil.getModalChildExcluding([Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/swt/widgets/Shell;)Lorg/eclipse/swt/widgets/Shell;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.engine.CSSElementContextImpl.elementMustBeRefreshed(Lorg/eclipse/e4/ui/css/core/dom/IElementProvider;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.addListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal()Ljava/net/URL;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.shouldCache(Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.FindSupport.find(Ljava/net/URL;)Ljava/net/URL;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$3.visit(Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PluginVersionIdentifier.parseVersion(Ljava/lang/String;)[Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getAttributeAsIs(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementHandle.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IConfigurationElement;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.PersistenceToolkit.create(Lcom/jrockit/mc/common/persistence/Type;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putBoolean(Ljava/lang/String;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.preference.PreferenceStore.firePropertyChangeEvent(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.implies(Ljava/security/Permission;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Collections.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.checkPermission2(Ljava/security/Permission;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.BaseExtensionPointHandle.getExtension(Ljava/lang/String;)Lorg/eclipse/core/runtime/IExtension;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.removeNodeChildrenFromQueue(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.getLocalList(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)[Lorg/eclipse/core/filesystem/IFileInfo;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ProjectDescription.setBuildSpec([Lorg/eclipse/core/resources/ICommand;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.getDescribedProperty(Lorg/eclipse/core/runtime/QualifiedName;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeMatcher.getSpecificDescription(Lorg/eclipse/core/internal/content/BasicDescription;)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.isRequested(Lorg/eclipse/core/runtime/QualifiedName;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.setProperty(Lorg/eclipse/core/runtime/QualifiedName;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.dispatchEventImpl(Ljava/awt/AWTEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.AWTKeyStroke.registerSubclass(Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.event.EventListenerList.remove(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.getLocalAttribute(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.isDefined(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS.translateHTMLToCSS(Ljavax/swing/text/AttributeSet;)Ljavax/swing/text/AttributeSet;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.removeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$FontWeight.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$StringValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.getSelectedIndex()I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JSplitPane.addImpl(Ljava/awt/Component;Ljava/lang/Object;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTabbedPane.indexOfComponent(Ljava/awt/Component;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.PriorityQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.export(Ljava/io/OutputStream;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.exportNode(Ljava/io/OutputStreamWriter;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultComboBoxModel.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.actionPerformed(Ljava/awt/event/ActionEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.MuxingAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.emptyTag(Ljavax/swing/text/Element;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.noMatchForTagInAttributes(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/html/HTML$Tag;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument$DefaultDocumentEvent.getChange(Ljavax/swing/text/Element;)Ljavax/swing/event/DocumentEvent$ElementChange;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$LeafIterator.setEndOffset()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JEditorPane$PlainEditorKit.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextAreaUI.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.<init>(Ljavax/swing/text/Element;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.TableView.updateInsets()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.TextLayoutStrategy.layoutRow(Ljavax/swing/text/FlowView;II)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.PriorityBlockingQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.findAndRemove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.FrameView$FrameEditorPane.getEditorKitForContentType(Ljava/lang/String;)Ljavax/swing/text/EditorKit;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addDecoration(Lsun/font/Decoration;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addFont(Ljava/lang/Object;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addToVector(Ljava/lang/Object;ILjava/util/Vector;[I)[I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.handleInsertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.insertUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.postRemoveUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.help.plaf.basic.BasicContentViewerUI$PageLoader$Callback.handleStartTag(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader$MetaAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.PlainDocument.insertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader.handleText([CI)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JOptionPane.showOptionDialog(Ljava/awt/Component;Ljava/lang/Object;Ljava/lang/String;IILjavax/swing/Icon;[Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.contentsChanged(Ljavax/swing/event/ListDataEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setSelectedValue(Ljava/lang/Object;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractButton.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.setDropTarget(Ljava/awt/dnd/DropTarget;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.addDropTargetListener(Ljava/awt/dnd/DropTargetListener;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.setComponent(Ljava/awt/Component;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultCellEditor$2.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerDateModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerNumberModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicFileChooserUI.resetGlobFilter()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DragSourceContext.setCursorImpl(Ljava/awt/Cursor;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.help.SortMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.help.UniteAppendMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setCellRenderer(Ljavax/swing/ListCellRenderer;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTextField.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex()I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultDesktopManager.getBoundsForIconOf(Ljavax/swing/JInternalFrame;)Ljava/awt/Rectangle;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicColorChooserUI.installPreviewPanel()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalIconFactory$ImageCacher$ImageGcPair.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.BumpBuffer.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.listensToAttribute(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.HotspotManagementToolkit.isVMOptionExplicit(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putByteArray(Ljava/lang/String;[B)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.getRangeType()Lcom/jrockit/mc/rjmx/ui/internal/ChartModel$AxisRange;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.graph.EventGraphTree.restoreExpansionState()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodHandles.constant(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.stream.DistinctOps$1$1.accept(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.StateImpl.checkProp(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.compatibility.state.PlatformBundleListener$1.filterMatches(Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.module.ResolverBundle.equivalentMaps(Ljava/util/Map;Ljava/util/Map;Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.ImportPackageSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.HostSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleRevision.isCurrent()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.verifyNoDuplicates(Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.cleanup(Lorg/eclipse/osgi/container/ModuleRevision;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.hookregistry.StorageHookFactory.createStorageHookAndValidateFactoryClass(Lorg/eclipse/osgi/storage/BundleInfo$Generation;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getStorageHook(Ljava/lang/Class;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionsParser.logStatus(Lorg/xml/sax/SAXParseException;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryIndexElement.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.toURI(Ljava/net/URL;)Ljava/net/URI;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle.adapt0(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.DTOBuilder.mapComponentType(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.url.EquinoxFactoryManager.getField(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/reflect/Field;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.ref.Log.security()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.<init>(Ljava/lang/String;Lorg/eclipse/equinox/internal/util/ref/Log;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleContainer.update(Lorg/eclipse/osgi/container/Module;Lorg/eclipse/osgi/container/ModuleRevisionBuilder;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.Activator.startRegistry()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionRegistry.<init>(Lorg/eclipse/core/runtime/spi/RegistryStrategy;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.cacheUse()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.WorkManager$NotifyRule.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.isConflicting(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.removeByKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/registry/KeyedElement;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.mergeContribution(Lorg/eclipse/core/internal/registry/Contribution;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryObjectManager.findCommonNamespaceIdentifier([Lorg/eclipse/core/internal/registry/RegistryObject;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.EclipseBundleListener.checkForNLSFiles(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.TableReader.checkCacheValidity(Ljava/io/DataInputStream;J)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.console.command.adapter.Activator.getCommandMethods(Ljava/lang/Object;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.loadData(Ljava/lang/String;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseScheduledApplication.<init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.addScheduledApp(Lorg/eclipse/equinox/internal/app/EclipseScheduledApplication;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationDescriptor.checkArgs(Ljava/util/Map;Z)Ljava/util/Map;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationHandle.destroy()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$Values.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ValuesView.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.TreeMap.valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.init()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.createAppDescriptor(Lorg/eclipse/core/runtime/IExtension;)Lorg/eclipse/equinox/internal/app/EclipseAppDescriptor;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;IIZLjava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.enterLoad(Ljava/net/URI;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.http.util.LangUtils.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.http.pool.RouteSpecificPool.getFree(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.util.JREProxyHelper.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.StringUtil.equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.ProxyType.setProxyData(Lorg/eclipse/core/net/proxy/IProxyData;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putInt(Ljava/lang/String;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.cert.X509CertSelector.matchSubjectAlternativeNames(Ljava/security/cert/X509Certificate;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionParser.removeRedundantTrail(Ljava/util/List;Ljava/lang/Comparable;)Ljava/lang/Comparable;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.makeRelative(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxManipulatorImpl.setConfiguratorManipulator()Lorg/eclipse/equinox/internal/provisional/configuratormanipulator/ConfiguratorManipulator;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.FileLocator.getBundleFile(Lorg/osgi/framework/Bundle;)Ljava/io/File;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.fromString(Ljava/lang/String;)Ljava/net/URI;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameURI(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameString(Ljava/lang/String;Ljava/lang/String;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxBundlesState.getPrerequisteBundles(Lorg/eclipse/equinox/frameworkadmin/BundleInfo;)[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository.getCompleteArtifactDescriptor(Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.IUMap.remove(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isDynamicImport(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.pde.internal.build.publisher.FeatureRootAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AdviceFileAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractAdvice.matchVersion(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.isIncluded(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isOptional(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createMatchExpressionFromRange(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;)Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.getCachedTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.sat4j.tools.FullClauseSelectorSolver.addControlableClause(Lorg/sat4j/specs/IVecInt;)Lorg/sat4j/specs/IConstr;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.server.session.AbstractSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.listener.ELContextCleaner.purgeEntries(Ljava/lang/reflect/Field;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.contains(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.startedBundle2(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.unbind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.getMethod(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;Lorg/osgi/framework/ServiceReference;)Ljava/lang/reflect/Method;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.InstanceProcess.checkCanCauseCycle(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getMethod(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/reflect/Method;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.bind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.readObject(Ljava/io/InputStream;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeValue(Ljava/lang/Object;Ljava/io/OutputStream;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writePrimitiveArray(Ljava/lang/Class;Ljava/lang/Object;ILjava/io/OutputStream;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.xml.impl.XMLParserImpl.parse_tag_special(Lorg/eclipse/equinox/internal/util/xml/impl/TagImpl;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doProperty(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doReference(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getNamespace(Ljava/lang/String;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.validate(II)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getCardinality(Ljava/lang/String;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.isCorrectComponentTag(Ljava/lang/String;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PerformanceStats.removeStats(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.watson.DefaultElementComparator.testEquality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putLong(Ljava/lang/String;J)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.getValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.stoppingBundle(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentType.hasFileSpec(Lorg/eclipse/core/runtime/preferences/IScopeContext;Ljava/lang/String;I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.internalIntrospecthelper(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.createTypedArray(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.convert(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTransferable.getTransferData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.isStandardTextRepresentationClass()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextUI$TextTransferHandler$TextTransferable.getRicherData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.net.Socket$1.run()Ljava/lang/Boolean;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.TestExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.LegacyHandlerSubmissionExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.ActiveShellExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.expressions.WorkbenchWindowExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.findElementsRecursive(Lorg/eclipse/e4/ui/model/application/MApplicationElement;Ljava/lang/Class;Lorg/eclipse/e4/ui/workbench/Selector;Ljava/util/List;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ToolBarManagerRenderer$7.select(Lorg/eclipse/e4/ui/model/application/MApplicationElement;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.showIntro(Lorg/eclipse/ui/IWorkbenchWindow;Z)Lorg/eclipse/ui/intro/IIntroPart;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.findCoolItem([Lorg/eclipse/swt/widgets/CoolItem;Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/swt/widgets/CoolItem;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getField(Ljava/lang/String;)Ljava/lang/reflect/Field;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.setIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.MenuManager.update(ZZ)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkingSetMenuContributionItem.fill(Lorg/eclipse/swt/widgets/Menu;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.Model.areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.getControl()Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Ljava/lang/Runnable;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarManager.update(Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.addValue(Lorg/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.help.WorkbenchHelpSystem.setHelpTrace(Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.update(Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.ParameterizedCommand.<init>(Lorg/eclipse/core/commands/Command;[Lorg/eclipse/core/commands/Parameterization;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CoolBarToTrimManager.remove(Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/jface/action/IContributionItem;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarContributionItem.fill(Lorg/eclipse/swt/widgets/CoolBar;I)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.RadioMenu.isEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ShowInMenu.getShowInPartIds(Lorg/eclipse/ui/IWorkbenchPart;)Ljava/util/ArrayList;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveAllAction.updateState()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveablesList.fillModelsClosing(Ljava/util/Set;Ljava/util/Map;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.switchToPosition(Lorg/eclipse/jface/text/link/LinkedModeModel;Lorg/eclipse/jface/text/link/LinkedPosition;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.prune(Ljava/util/List;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$SubMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StyledString.isDifferentStyle(Lorg/eclipse/jface/viewers/StyledString$Styler;Lorg/eclipse/jface/viewers/StyledString$Styler;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.removeAutoEditStrategy(Lorg/eclipse/jface/text/IAutoEditStrategy;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionGroup.overlapsOrTouches(Lorg/eclipse/jface/text/link/LinkedPosition;Lorg/eclipse/jface/text/DocumentEvent;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.NonLocalUndoUserApprover.elementsContains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.createIURequirements(Ljava/util/Collection;)Ljava/util/Collection;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.queryForIU(Lorg/eclipse/equinox/p2/publisher/IPublisherResult;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.versionElements(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ConfigCUsAction.publishBundleCUs(Lorg/eclipse/equinox/p2/publisher/IPublisherInfo;[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;Ljava/lang/String;Lorg/eclipse/equinox/p2/publisher/IPublisherResult;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.FeaturesAction.getVersionRange(Lorg/eclipse/equinox/p2/publisher/eclipse/FeatureEntry;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.ExpandableComposite.setClient(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.propertytester.PlatformPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(Lorg/eclipse/core/internal/content/ContentTypeMatcher;Ljava/lang/String;Ljava/util/Comparator;)[[Lorg/eclipse/core/runtime/content/IContentType;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(Lorg/eclipse/core/internal/resources/File;Lorg/eclipse/core/internal/resources/ResourceInfo;Z)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Cache$Entry.compare(Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.getAdapter(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.classForName(Lorg/eclipse/core/runtime/IAdapterFactory;Ljava/lang/String;)Ljava/lang/Class;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Document;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.UAElement.importElement(Lorg/eclipse/help/internal/UAElement;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.AbstractIntroContainer.handleIncludeStyleInheritence(Lorg/eclipse/ui/internal/intro/impl/model/IntroInclude;Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroElement;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableValue.updateInnerObservableValue()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableList.updateInnerObservableList()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.swt.SWTVetoableValueDecorator.<init>(Lorg/eclipse/swt/widgets/Widget;Lorg/eclipse/jface/internal/databinding/swt/WidgetStringValueProperty;Lorg/eclipse/core/databinding/observable/value/IObservableValue;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.list.MultiList.<init>(Lorg/eclipse/core/databinding/observable/Realm;[Lorg/eclipse/core/databinding/observable/list/IObservableList;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableSet.updateInnerObservableSet()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableMap.updateDetailMap()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver.countPrecedingItems(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewContentProvider.createChildren(Ljava/lang/Object;)[Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardActivityFilter.select(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.includeInSetStructure(Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ActionSet;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.ProvisioningOperationWizard.provisioningContextChanged()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldHideToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.removeAttributeFromListener(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.setValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;Ljava/lang/String;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ConditionChooser.updateUnit()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.LocalizedString.getLocales()Ljava/util/List;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.FieldFactory.createFromDisplayUnit(Lcom/jrockit/mc/common/unit/UnitDescriptor;Ljava/lang/String;I)Lcom/jrockit/mc/ui/model/fields/Field;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.removeCollector(Lorg/eclipse/ui/internal/progress/IProgressUpdateCollector;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.merge(Lorg/eclipse/e4/ui/model/application/ui/MExpression;Lorg/eclipse/e4/ui/model/application/ui/MExpression;)Lorg/eclipse/e4/ui/model/application/ui/MExpression;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialViewer.drawBackground(Lorg/eclipse/swt/graphics/GC;Lcom/jrockit/mc/ui/dial/DialDevice;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.fields.internal.QuantityField.initKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;Ljava/lang/String;Lcom/jrockit/mc/common/unit/IQuantity;Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.getNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/jrockit/mc/common/xml/ClassFactory;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.setAttributeType(Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.sampler.CompositeRangeSampler.needsStructuralRefresh(Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.focusLost(Ljava/awt/event/FocusEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectInputStream.loadFeatureMap(Lorg/eclipse/emf/ecore/util/FeatureMap$Internal;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setExtendedMetaDataOption(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FontDescriptor.setStyle(I)Lorg/eclipse/jface/resource/FontDescriptor;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.canEdit(Ljava/lang/String;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.StringConstructorCellEditor.checkContructor(Ljava/lang/Class;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getForeground(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Color;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyDescriptor.isCompatibleWith(Lorg/eclipse/ui/views/properties/IPropertyDescriptor;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.ArrayLengthCellEditor.doGetValue()Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.fireSelectionChanged(II)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.FileUtil.computeOverlap(Ljava/net/URI;Ljava/net/URI;Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Queue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ScopeSetDialog.findOperation(Lorg/eclipse/help/ui/internal/views/ScopeSet;Ljava/lang/Class;)Lorg/eclipse/help/ui/internal/views/ScopeSetDialog$PendingOperation;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.internal.BasicPrimitivesConverter.getConverter(Ljava/lang/Class;)Lcom/jrockit/mc/rjmx/services/flr/internal/Converter;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferenceServiceRegistryHelper.applyRuntimeDefaults(Ljava/lang/String;Ljava/lang/ref/WeakReference;)Ljava/lang/ref/WeakReference;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.compiler.JspUtil.interpreterCall(ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.<clinit>()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory.getClassForInterface(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.demo.html.HTMLParser.addText(Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.servlet.http.HttpServlet.getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.check(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.configAdminRegistered(Lorg/osgi/service/cm/ConfigurationAdmin;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.updated(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.isPossibleMatch(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Reference.bindNewReference(Lorg/osgi/framework/ServiceReference;Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver.removeNonEffectiveRequirements(Ljava/util/ListIterator;Ljava/util/List;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.themes.ColorsAndFontsPreferencePage.isDefault(Lorg/eclipse/ui/internal/themes/ColorDefinition;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.updateActive(Lorg/eclipse/ui/IEditorPart;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.UIEvents.contains(Lorg/osgi/service/event/Event;Ljava/lang/String;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.saveData(Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.unsubscribe(Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardContentProvider.getParent(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.filesystem.URIUtil.equals(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.index.Index.concatenateUnique(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator.coerceAndEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.addListener(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.skip()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.isSubtype(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.layout(Lorg/eclipse/swt/graphics/GC;ILorg/eclipse/ui/internal/forms/widgets/Locator;ILjava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.about.InstallationDialog.createContents(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.setVisible(Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.equalSettings(Lcom/jrockit/mc/rjmx/services/flr/IEventSettingsHolder;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.wizards.preferences.WizardPreferencesImportPage1.getTransfers()[Lorg/eclipse/ui/internal/preferences/PreferenceTransferElement;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.scopeMatches(Ljava/lang/String;Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.NewWizardNewPage.isPrimary(Lorg/eclipse/ui/wizards/IWizardDescriptor;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.ColumnComposite.countVisibleColumnsBefore(Lcom/jrockit/mc/rjmx/ui/column/IColumn;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.KeysPreferencePage.createModifyTab(Lorg/eclipse/swt/widgets/TabFolder;)Lorg/eclipse/swt/widgets/Composite;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage.createDataControls(Lorg/eclipse/swt/widgets/Composite;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.fillEditorTable()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeSorter.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.getInitialRadioSelection()I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.TwoPaneElementSelector.setLowerSelectedElement(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredList.setSelection([Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.swing.ProgressMonitor.isCanceled()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.DefaultHelpUI.isActiveShell(Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/ui/IWorkbenchWindow;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.refresh()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.SeeAlsoPart.updateLinks(Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/util/List;)Ljava/lang/Class;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.allSameClass(Ljava/util/List;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.fireSelectionChanged(Lorg/eclipse/ui/forms/IFormPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.update()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.checkLimit()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.editor.FormPage.isActive()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCToolBarManager.remove(Lorg/eclipse/jface/action/IAction;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.Section.setSeparatorControl(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.isIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.BindingService.isSameBinding(Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;Lorg/eclipse/e4/ui/model/application/commands/MCommand;Lorg/eclipse/jface/bindings/Binding;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuFactoryGenerator.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ApplicationImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ContributionImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.CoreExpressionImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.advanced.impl.PerspectiveImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.WindowImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.PopupMenuImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectToolItemImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectMenuItemImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DynamicMenuContributionImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.ToolControlImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureChangeImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureMapEntryImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EAttributeImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EReferenceImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassifierImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EDataTypeImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumLiteralImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xml.type.impl.SimpleAnyTypeImpl.eIsSet(I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleData.dynamicIsSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.init(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/util/Map;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equals(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EObject;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.TopologicalSort.buildDependencyGraph()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.GenericMApplicationElementFactoryImpl$MApplicationElementClassToEClass.buildMapping(Lorg/eclipse/emf/ecore/EPackage;)Ljava/util/Map;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.saveAll(Ljava/util/List;ZZZLorg/eclipse/jface/operation/IRunnableContext;Lorg/eclipse/jface/window/IShellProvider;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferencePageHistory.addHistoryEntry(Lorg/eclipse/ui/internal/dialogs/PreferenceHistoryEntry;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.model.ConflictModel.setConflicts(Ljava/util/Collection;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MoveControlAction.run()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.checkDuplicates(Lorg/eclipse/ui/internal/NavigationHistoryEditorInfo;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.failsEnablement([Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCBook.showPageWithData(Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMinValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMaxValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedDialsSectionPart$AttributeDial.updateMetadata()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.setQuantityKindFromAttribute(Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setKindOfQuantity(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.updateQuantityKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.activate()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.TogglingCellEditor.doSetValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.canEdit(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.getCellEditor(Ljava/lang/Object;)Lorg/eclipse/jface/viewers/CellEditor;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.createConverter(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/conversion/IConverter;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateValueStrategy.findValidator(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/validation/IValidator;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.getKeyForClass(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToByteConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToShortConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToLongConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToFloatConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToDoubleConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigDecimalConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.NumberToStringConverter.<init>(Lcom/ibm/icu/text/NumberFormat;Ljava/lang/Class;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeConfiguratorTableFactory$2.getValueTyped(Lcom/jrockit/mc/rjmx/subscription/MRI;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.operativeset.actions.AddMatchingRelationalKeyAction.addMatchingEventsForType(Lcom/jrockit/mc/flightrecorder/spi/IEventType;Lcom/jrockit/mc/flightrecorder/spi/IField;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.toolbar.DeleteAction.removeFromList(Lcom/jrockit/mc/components/ui/tab/BaseDescriptor;Ljava/util/List;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addAfter(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addBefore(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.loadMenuAndToolbarStructure()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.createMenuEntries(Lorg/eclipse/e4/ui/model/application/ui/menu/MMenu;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.addMatchedKeys(Ljava/util/ArrayList;Lorg/eclipse/core/runtime/preferences/PreferenceFilterEntry;[Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldCreateToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.selectionChanged(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.commands.internal.Traverser.lookupMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.NewPropertySheetHandler.findPropertySheet(Lorg/eclipse/core/commands/ExecutionEvent;Lorg/eclipse/ui/views/properties/PropertyShowInContext;)Lorg/eclipse/ui/views/properties/PropertySheet;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$4$PerspectiveDropTarget.sameShell()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.WorkbenchActivitySupport.addExtension(Lorg/eclipse/core/runtime/dynamichelpers/IExtensionTracker;Lorg/eclipse/core/runtime/IExtension;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.EditorHistoryItem.matches(Lorg/eclipse/ui/IEditorInput;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.checkEditor(Lorg/eclipse/ui/IEditorInput;Ljava/util/List;Lorg/eclipse/ui/internal/EditorReference;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.createEntry(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IEditorPart;Lorg/eclipse/ui/INavigationLocation;)Lorg/eclipse/ui/internal/NavigationHistoryEntry;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistoryEntry.mergeInto(Lorg/eclipse/ui/internal/NavigationHistoryEntry;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(Lorg/eclipse/swt/widgets/Widget;[Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.itemExists([Lorg/eclipse/swt/widgets/Item;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.loader.ContentProviderManager.getContentProviderParentPage(Lorg/eclipse/ui/intro/config/IIntroContentProvider;)Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroPage;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.internalRefresh(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.internalIsInputOrEmptyPath(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.startsWith(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$9.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.AbstractWorkingSetDialog.removeSelectedWorkingSets(Ljava/util/List;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.gotoEntryForTab(Lorg/eclipse/ui/internal/NavigationHistoryEntry;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.handleWidgetSelected()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.Timestamp.in(Lcom/jrockit/mc/common/unit/IUnit;)Lcom/jrockit/mc/common/unit/IQuantity;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putDouble(Ljava/lang/String;D)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.restoreChangedWorkingSets()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesMapper.close(Lorg/eclipse/equinox/internal/security/storage/SecurePreferencesRoot;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.getCloseableSiblingParts(Lorg/eclipse/e4/ui/model/application/ui/basic/MPart;)Ljava/util/List;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ActionChooser$1.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeSelectorComponent$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.ViewsPreferencePage$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$12.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.layout.TreePart.updateSelection()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.tracetree.TraceModel.traceContainsFrames(Lcom/jrockit/mc/common/IMCStackTrace;Ljava/util/List;Ljava/util/Map;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonTypeProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMaxValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMinValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.handleSelection(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.contentassist.AdditionalInfoController.showInformation(Lorg/eclipse/jface/text/contentassist/ICompletionProposal;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationEvent(Lorg/osgi/service/cm/ConfigurationEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationChange(Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;Lorg/osgi/service/cm/Configuration;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getComponentPropByPID(Ljava/lang/String;)Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.handleBoundServicesUpdate(Ljava/util/Hashtable;Ljava/util/Dictionary;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.director.app.DirectorApplication.parseIUsArgument(Ljava/util/List;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.validation.ObjectToPrimitiveValidator.mapContainsValues(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager.findMessage(Ljava/lang/Object;Ljava/util/ArrayList;)Lorg/eclipse/ui/internal/forms/MessageManager$Message;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.internal.ToolbarFormEditor.show(Lcom/jrockit/mc/ui/formpage/FormPageContributionGroup;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.refresh()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.tree.MBeanTreeSectionPart$1$1.findItem(Ljava/lang/Object;[Lorg/eclipse/swt/widgets/TreeItem;)Lorg/eclipse/swt/widgets/TreeItem;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.originatesFrom(Lorg/eclipse/core/runtime/IExtension;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.createProxy(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/core/internal/adapter/AdapterFactoryProxy;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Workspace.computeActiveBuildConfigOrder()Lorg/eclipse/core/internal/resources/ComputeProjectOrder$VertexOrder;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.successors.SuccessorFrameNodeBuilder.addTrace(Lcom/jrockit/mc/flightrecorder/ui/components/histogram/HistogramItem;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.createNewCharto(Lcom/jrockit/mc/flightrecorder/ui/components/chart/model/FLRChartDescriptor;Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;)Lse/hirt/greychart/impl/DefaultXYGreyChart;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.getContentType(Lcom/jrockit/mc/common/unit/UnitDescriptor;)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMin.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMax.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.AbstractSingleMRITransformation.subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue.getLiveValue()Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.KeyBindingService.removeKeyBindingService(Lorg/eclipse/ui/IWorkbenchSite;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialConfiguration.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.tabs.threads.ThreadMasterDetailBlock.pageChanged(Lorg/eclipse/jface/dialogs/PageChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.WorkbenchPartPropertySheets.getPropertySheetProxyPage(Ljava/lang/Object;)Lcom/jrockit/mc/ui/misc/WorkbenchPartPropertySheets$PropertySheetProxyPage;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.isThisPart(Lorg/eclipse/ui/IWorkbenchPartReference;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.handlePartDeactivation(Lorg/eclipse/ui/IWorkbenchPartReference;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler$PartListener.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partOpened(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory$1.updateNavigationHistory(Lorg/eclipse/ui/IWorkbenchPartReference;Z)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$DetailsContentViewer.refresh([Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.perspectiveChanged(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IPerspectiveDescriptor;Lorg/eclipse/ui/IWorkbenchPartReference;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.SelectableIUsPage$2.checkStateChanged(Lorg/eclipse/jface/viewers/CheckStateChangedEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$ItemsListLabelProvider.isSelected(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryChangeEvent.getHostDelta(Ljava/lang/String;)Lorg/eclipse/core/internal/registry/RegistryDelta;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryDelta.getExtensionDeltas(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IExtensionDelta;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$3.matches(Lorg/eclipse/core/runtime/IExtensionPoint;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.getViewAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.browse.MultiProtocolFileSystemBrowserAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.outgoing.MultiProtocolOutgoingAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.getAdapterNames()[Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.indexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.jsp.jasper.Activator.getJasperBundle()Lorg/osgi/framework/Bundle;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.getImportingBundles()[Lorg/osgi/framework/Bundle;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.addRequirers(Ljava/util/Set;Lorg/eclipse/osgi/container/ModuleWiring;Ljava/lang/String;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.DevClassPathHelper.getArrayFromList(Ljava/lang/String;)[Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/internal/registry/ConfigurationElement;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Lorg/eclipse/core/runtime/spi/RegistryContributor;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher.perspectiveIsActive(Lorg/eclipse/ui/IPerspectiveDescriptor;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectPrevious(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectNext(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormTextModel.select(Lorg/eclipse/ui/internal/forms/widgets/IFocusSelectable;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart$2.linkActivated(Lorg/eclipse/ui/forms/events/HyperlinkEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormUtil.ensureVisible(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.events.ExpansionEvent.getState()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$13.keyPressed(Lorg/eclipse/swt/events/KeyEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$3.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$6.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CycleBaseHandler$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$7.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$6.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$4.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.FormToolkit$BorderPainter.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.actions.SelectWorkingSetsAction.isWorkingSetEnabled(Lorg/eclipse/ui/IWorkingSet;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.BrowserPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ContextHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.EngineResultSection.hasControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.views.JVMBrowserView.addActions(Lorg/eclipse/jface/action/IMenuManager;Lorg/eclipse/jface/viewers/IStructuredSelection;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextEmail.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextRegex.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.paint(Lorg/eclipse/swt/graphics/GC;Lorg/eclipse/swt/graphics/Rectangle;Ljava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;Lorg/eclipse/ui/internal/forms/widgets/SelectionData;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.SearchField.addPreviousPick(Ljava/lang/String;Lorg/eclipse/ui/internal/quickaccess/QuickAccessElement;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessDialog$1$1.addPreviousPick(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.DefaultHyperlinkPresenter.highlightRegion(Lorg/eclipse/jface/text/IRegion;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer$3.select()V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.parse(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.handleScroll(Lorg/eclipse/swt/widgets/Event;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.isParentScrolling(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreeViewer.replace(Ljava/lang/Object;ILjava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.createListDiffs(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.listIndexOf(Ljava/util/List;Ljava/lang/Object;I)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue$1.handleValueChange(Lorg/eclipse/core/databinding/observable/value/ValueChangeEvent;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.map.BidiObservableMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.Pool$AccessUnit.matches(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceCompareTo(Lorg/eclipse/ecf/core/identity/BaseID;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.naming.ldap.Rdn$RdnEntry.compareTo(Ljavax/naming/ldap/Rdn$RdnEntry;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver$ResolveProcess.compare(Lorg/osgi/resource/Capability;Lorg/osgi/resource/Capability;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Lang.guessLanguages(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(Ljava/lang/CharSequence;I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule$4.isMatch(Ljava/lang/CharSequence;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.OptimisticComparator.compareCells(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.WeakInterningHashSet.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.isTouch()Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ECollections$2.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.nio.file.FileTreeWalker.wouldLoop(Ljava/nio/file/Path;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.toString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.getFormat()Lorg/eclipse/equinox/p2/metadata/IVersionFormat;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemReasonString(I)Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.FileEditorMapping.compareList(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.preferences.PropertyUtil.isEqual(Lorg/eclipse/ui/internal/preferences/IPropertyMap;Lorg/eclipse/ui/internal/preferences/IPropertyMap;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.equality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnChainMatch(Ljava/util/List;ILjava/util/List;I)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.skipWildCards(Ljava/util/List;I)I";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnmatch(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextAttribute.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Feature.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.equals([Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;Ljava/lang/Comparable;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceEquals(Lorg/eclipse/ecf/core/identity/BaseID;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.helpers.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.equals(Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.ImageDescription.safeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.equalContext(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllLimits(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MemberName$Factory.getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Class;)Ljava/util/List;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.valueEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/util/EnumMap;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.security.Identity.identityEquals(Ljava/security/Identity;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$BasicEStoreEList.delegateEquals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArraySet.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.font.TextLayout.equals(Ljava/awt/font/TextLayout;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ShapeGraphicAttribute.equals(Ljava/awt/font/ShapeGraphicAttribute;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ImageGraphicAttribute.equals(Ljava/awt/font/ImageGraphicAttribute;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.equal(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ForwardingNode.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Value.hashCode()I" -> "net.mooctest.DatalogOtherTest.testValue()V";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.OrdFieldSource.<clinit>()V";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.ReverseOrdFieldSource.<clinit>()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread.startListenSocket()V";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.framework.CapabilityPermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.framework.PackagePermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.framework.AdminPermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.framework.AdaptPermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.framework.ServicePermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.service.application.ApplicationAdminPermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.log.LogPermission.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.awt.datatransfer.DataFlavor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.databinding.property.SimplePropertyEvent.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.awt.font.ImageGraphicAttribute.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.awt.font.ShapeGraphicAttribute.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.awt.font.TextLine.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.AbstractSet.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.AbstractList.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.AbstractEList.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.http.impl.client.cache.ResourceReference.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.security.spec.EllipticCurve.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.sql.DriverInfo.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.AbstractMap$SimpleEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.AbstractMap$SimpleImmutableEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.Collections$ReverseComparator2.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.Calendar.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$Node.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.naming.RefAddr.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.naming.directory.BasicAttribute.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.naming.directory.BasicAttributes.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.text.StyleContext$SmallAttributeSet.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.tree.TreePath.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.CopyOnWriteArrayList.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.net.Proxy.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.awt.font.FontRenderContext.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.TreeMap$Entry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$KeySetView.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.lang.invoke.MethodType.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.lang.reflect.Parameter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.security.AccessControlContext.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.common.unit.LinearUnit.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.resources.mapping.ResourceMapping.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.resources.Resource.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.resources.Marker.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.resources.BuildConfiguration.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.resources.mapping.ShallowContainer.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.core.DefaultTreeNode.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.search.RecipientStringTerm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.search.AddressTerm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.search.RecipientTerm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.search.OrTerm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.search.NotTerm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.search.AndTerm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.viewers.DecorationOverlayIcon.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.resource.DerivedImageDescriptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.resource.FileImageDescriptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.ui.dial.DialDevice.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.action.ActionContributionItem.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.ui.misc.MCToolBarManager$ToolbarItem.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.ui.model.fields.Row.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.util.AttributeSource.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.index.IndexCommit.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.index.SegmentInfo.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.ConstantScoreQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.FilteredQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.MultiTermQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.NumericRangeQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.NGramPhraseQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.CustomScoreQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.ValueSourceQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.spans.SpanOrQuery.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.CachingSpanFilter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.CachingWrapperFilter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.FieldCacheRangeFilter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.FieldCacheImpl$Entry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.SortField.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.payloads.AveragePayloadFunction.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.payloads.MaxPayloadFunction.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.payloads.MinPayloadFunction.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.util.fst.PairOutputs$Pair.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.databinding.validation.ValidationStatus.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.databinding.observable.DecoratingObservable.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.databinding.observable.value.ValueDiff.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$4.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentitySet.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.SetDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapSimpleValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.Pair.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentityMap$4.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentitySet.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.expressions.Property.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.jobs.Semaphore.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.jobs.ObjectMap.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.resources.FileInfoMatcherDescription.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.resources.ProjectScope.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.resources.LinkDescription.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.utils.ObjectMap.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ecf.core.util.Proxy.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.URI$Fragment.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler$EClassFeatureNamePair.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLOptionsImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup$FeatureClassifierPair.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$EStoreImpl$Entry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.runtime.QualifiedName.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionedId.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionRange.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Unary.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.MatchExpression.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.UnaryCollectionFilter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Member.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.CollectionFilter.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.ContextExpression.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.LambdaExpression.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Not.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Condition.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.p2.operations.Update.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.preferences.AbstractScope.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.ExtensionRegistry$ListenerInfo.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableHelpResource.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableTocsArray.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.util.component.Container$Relationship.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$4.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementSet.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.link.LinkedPosition.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.link.ProposalPosition.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.contentassist.ContextInformationPopup$ContextFrame.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.TextSelection.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.viewers.TreeSelection.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.viewers.ViewerRow.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.osgi.framework.ServicePermission$Properties$Entry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ServiceReferenceImpl.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.views.properties.PropertyShowInContext.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.DefaultSaveable.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.Semaphore.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.AggregateWorkingSet.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.EditorElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.WizardElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.ViewElement.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.part.MultiEditorInput.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.sat4j.core.ReadOnlyVec.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.sat4j.core.ReadOnlyVecInt.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.sat4j.core.Vec.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.sat4j.pb.ObjectiveFunction.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.sat4j.pb.tools.WeightedObject.hashCode()I";
	"net.mooctest.Value.hashCode()I" -> "java.lang.Object.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.event.TreeModelEvent.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.text.html.OptionListModel.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.tree.DefaultTreeSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.DefaultListSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "java.awt.image.BufferedImage.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.BranchLabel.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.director.Projector$AbstractVariable.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.util.ssl.SslContextFactory.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.Server.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.io.AbstractConnection.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.io.nio.SelectChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.ResourceCache.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSession.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.Request.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.DocumentRewriteSession.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.PartSite.toString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable$EntrySet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap.hashOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToStringMapImpl.getHash()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.getHash()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.change.impl.EObjectToChangesMapEntryImpl.getHash()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.DynamicEObjectImpl$BasicEMapEntry.getHash()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl.getHash()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container$Dynamic$BasicEMapEntry.getHash()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.WeakInterningHashSet.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.Arrays.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.HashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.storage.bundlefile.BundleFile.getResourceURL(Ljava/lang/String;Lorg/eclipse/osgi/container/Module;I)Ljava/net/URL;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.runtime.Path.computeHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getEntry(Ljava/lang/String;)Ljava/net/URL;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.<init>(Ljava/lang/reflect/AnnotatedElement;Lorg/eclipse/e4/core/di/IInjector;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Ljava/lang/Object;Z)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.framework.util.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.viewers.CustomHashtable.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.viewers.TreePath.hashCode(Lorg/eclipse/jface/viewers/IElementComparer;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.URI$LazyFragmentInitializer.clear()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.Pool$ObjectAccessUnit.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.hashCode(Ljava/lang/String;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.Formatter$FormatSpecifier.printHashCode(Ljava/lang/Object;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.common.util.URI.rawAppendFragment(Ljava/lang/CharSequence;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.plaf.nimbus.ImageCache.hash(Ljava/awt/GraphicsConfiguration;II[Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.Arrays.deepHashCode([Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "java.lang.reflect.Proxy$Key1.<init>(Ljava/lang/Class;)V";
	"net.mooctest.Value.hashCode()I" -> "java.lang.reflect.Proxy$Key2.<init>(Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Value.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Value.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Value.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "java.util.Hashtable.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight.scorer(Lorg/apache/lucene/index/IndexReader;ZZ)Lorg/apache/lucene/search/Scorer;";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight$1.add(ILorg/apache/lucene/index/IndexReader;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.RegistryIndexElement.getKeyHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.Contribution.getKeyHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.setEvent(Lorg/eclipse/equinox/internal/util/timer/TimerListener;IIJJILjava/lang/String;Ljava/security/AccessControlContext;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.registry.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.http.servlet.internal.ProxyContext$ContextAttributes.<init>(Lorg/eclipse/equinox/http/servlet/internal/ProxyContext;Lorg/osgi/service/http/HttpContext;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread.<init>(Lorg/eclipse/jetty/server/AsyncNCSARequestLog;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setClassName(Ljava/lang/String;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setHeldClass(Ljava/lang/Class;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(Ljavax/servlet/http/HttpServletRequest;J)Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.utils.Cache$Entry.getKeyHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.utils.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createWidget(Lorg/eclipse/e4/ui/model/application/ui/MUIElement;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jetty.io.AbstractBuffer.toDetailString()Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getWindowId(Lorg/eclipse/ui/IWorkbenchWindow;)Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getPageId(Lorg/eclipse/ui/IWorkbenchPage;)Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.calcHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.calcHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.projection.ProjectionDocument.<init>(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.PaintManager$PositionManager.<init>()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.TextViewer$ViewerState.connect(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.statushandlers.LabelProviderWrapper.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getIndex(Lorg/eclipse/emf/ecore/EClass;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.resetPerspectiveModel(Lorg/eclipse/e4/ui/model/application/ui/advanced/MPerspective;Lorg/eclipse/e4/ui/model/application/ui/basic/MWindow;Z)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.part.EditorInputTransfer.<clinit>()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.presentation.PresentationReconciler.<init>()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.text.TextViewer.<init>()V";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.hash(ILjava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "javax.mail.internet.UniqueValue.getUniqueMessageIDValue(Ljavax/mail/Session;)Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.views.types.EventTypesView.updateShowingPage()V";
	"net.mooctest.Value.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Value.hashCode()I" -> "java.util.WeakHashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.ResourceBundle$CacheKey.calculateHashCode()V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.util.EcoreUtil.getIdentification(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Value.hashCode()I" -> "javax.swing.GroupLayout.createSpringDescription(Ljava/lang/StringBuffer;Ljavax/swing/GroupLayout$Spring;Ljava/lang/String;I)V";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ui.internal.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.hashCode([Ljava/lang/Comparable;Ljava/lang/Comparable;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Expression.hashCode([Lorg/eclipse/equinox/internal/p2/metadata/expression/Expression;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.ecf.core.identity.StringID.namespaceHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode([Lorg/eclipse/core/resources/IBuildConfiguration;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.databinding.observable.map.MapDiff$AbstractMapEntry.hash(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.commands.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.databinding.BindingStatus.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.apache.http.util.LangUtils.hashCode(ILjava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.expressions.EqualsExpression.computeHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.expressions.Expression.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.hashCode(Ljava/net/URL;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.Objects.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "javax.security.auth.Subject.getCredHashCode(Ljava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "java.util.EnumMap.entryHashCode(I)I";
	"net.mooctest.Value.hashCode()I" -> "java.nio.file.attribute.AclEntry.hash(ILjava/lang/Object;)I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.EClassImpl$9.delegateHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.emf.ecore.impl.EOperationImpl$1.delegateHashCode()I";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Value.hashCode()I" -> "org.eclipse.core.internal.utils.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Value.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest2.testVariable3()V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest2.testVariable2()V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogOtherTest.testVariable3()V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest2.testVariable_0()V";
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "net.mooctest.DatalogTest2.testVariable()V";
	"net.mooctest.Fact.getValues()[Lnet/mooctest/Value;" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Fact.getValues()[Lnet/mooctest/Value;" -> "net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "net.mooctest.DatalogOtherTest.testValue()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.CapabilityPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.PackagePermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdminPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdaptPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.WeakGroupedListenerList$WeakComputationReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.http.impl.client.cache.ResourceReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.nio.file.attribute.AclEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.spec.EllipticCurve.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$EntryIterator$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Calendar.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.naming.RefAddr.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttributes.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.tree.TreePath.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.net.Proxy.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Method.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Parameter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.LinearUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.mapping.ResourceMapping.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.core.DefaultTreeNode.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientStringTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.OrTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.NotTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.AndTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.ServiceEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractAttributeSubscription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.ImageImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FileImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialDevice.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.NotExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ActionContributionItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.Row.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.CSSConditionalSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.index.IndexCommit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.ConstantScoreQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FilteredQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.NumericRangeQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanOrQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingSpanFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheRangeFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQueryWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheImpl$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.SortField.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.fst.PairOutputs$Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.validation.ValidationStatus.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.DefaultDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.Property.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.FileInfoMatcherDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.events.BuildContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.Requestor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.CSSConditionalSelectorImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.QualifiedName.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormatParser$Fragment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.AbstractScope.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.io.View.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredSelection.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.ViewerRow.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.ServicePermission$Properties$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.graphics.TextStyle.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$ControlDecorator.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$Message.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyShowInContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.DefaultSaveable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.EditorElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.WizardElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.ViewElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.part.DrillFrame.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVecInt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.Vec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.ObjectiveFunction.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.tools.WeightedObject.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.help.Map$ID.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.toString()Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$EntrySetView.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.CharArrayMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$ValueComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.Headers.getIndex(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryIndexForKey(IILjava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryForKey(IILjava/lang/Object;)Lorg/eclipse/emf/common/util/BasicEMap$Entry;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentPredicate(Ljava/util/List;Lorg/eclipse/emf/ecore/EReference;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.util.CircularArray.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.wasSet()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.remove(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementMulti.getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.DirectMap.findKey(Ljava/lang/String;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ResourceTranslator.hasRuntime21(Lorg/osgi/framework/Bundle;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.removeNode(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.find(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.putTreeVal(ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.log.Log.initialized()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays$ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.StringToNumberConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToBooleanConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToCharacterConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.isPrimitiveTypeMatchedWithBoxed(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.site.SelectionProviderActivator$TempAdapterFactory.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart$1.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.DesignerTab.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.StatisticsCalculator.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetPage.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectActionContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.ViewDescriptor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.ContextServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.EvaluationServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchSupportFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator$ParentLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(Lorg/eclipse/e4/core/internal/contexts/ContextChangeEvent;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$5.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.AggregateWorkingSet.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandService.refreshElements(Ljava/lang/String;Ljava/util/Map;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$5.run()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.add(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.property.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer$5.run()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CTabFolder$8.run()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.put(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractAction.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformLogWriter.isLoggable(Lorg/osgi/framework/Bundle;Ljava/lang/String;I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Lorg/eclipse/core/runtime/IPath;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.setDevice(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.makeAbsolute()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.canonicalize()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.collapseParentReferences()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.operations.ObjectUndoContext.matches(Lorg/eclipse/core/commands/operations/IUndoContext;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.MatchingCharacterPainter.paint(I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolveArgs(Lorg/eclipse/e4/core/internal/di/Requestor;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;ZZZ)[Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.getProviderType(Ljava/lang/reflect/Type;)Ljava/lang/Class;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.hasQualifier(Ljava/lang/Class;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.isOverridden(Ljava/lang/reflect/Method;Ljava/util/ArrayList;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.getQualifier(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/osgi/framework/util/KeyedElement;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.query.QueryUtil.createIUQuery(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/query/IQuery;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.lastIndexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.extractRange(Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.<init>(Lorg/eclipse/equinox/p2/metadata/Version;ZLorg/eclipse/equinox/p2/metadata/Version;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.isPredefined(Lorg/eclipse/equinox/p2/metadata/expression/IExpression;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.put(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.equals(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.removeAll(Ljava/util/Collection;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.CustomHashtable.keyEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.doFindItem(Ljava/lang/Object;)Lorg/eclipse/swt/widgets/Widget;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.matchingFirstSegments(Lorg/eclipse/core/runtime/IPath;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.tableProviders.objectstatistics.ClassStatistics$1.accept(Lcom/jrockit/mc/flightrecorder/spi/IEvent;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramSelectionIterator.skipForwardEvent()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier$1.bundleChanged(Lorg/osgi/framework/BundleEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.ErrorPageErrorHandler.getErrorPage(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(Ljava/net/URL;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.NativeCodeFinder.getNativePaths()Ljava/util/List;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.isUpdateJob(Lorg/eclipse/core/runtime/jobs/Job;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.search.federated.FederatedSearchJob.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveableHelper$6.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.progress.DeferredTreeContentManager$1.isParent(Lorg/eclipse/ui/progress/DeferredTreeContentManager$DeferredContentFamily;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.SubMonitor.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.InstancePreferences.loadLegacy()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.BundleDefaultPreferences.<init>(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.internalPut(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.OSGiPreferencesServiceImpl$OSGiLocalRootPreferences.fixPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.isPrefixOf(Lorg/eclipse/core/runtime/IPath;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.removeFileExtension()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.convertFromProperties(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/util/Properties;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressManagerUtil.getModalChildExcluding([Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/swt/widgets/Shell;)Lorg/eclipse/swt/widgets/Shell;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.engine.CSSElementContextImpl.elementMustBeRefreshed(Lorg/eclipse/e4/ui/css/core/dom/IElementProvider;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.addListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal()Ljava/net/URL;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.shouldCache(Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.FindSupport.find(Ljava/net/URL;)Ljava/net/URL;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$3.visit(Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PluginVersionIdentifier.parseVersion(Ljava/lang/String;)[Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getAttributeAsIs(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementHandle.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IConfigurationElement;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.PersistenceToolkit.create(Lcom/jrockit/mc/common/persistence/Type;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putBoolean(Ljava/lang/String;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.preference.PreferenceStore.firePropertyChangeEvent(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.implies(Ljava/security/Permission;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Collections.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.checkPermission2(Ljava/security/Permission;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.BaseExtensionPointHandle.getExtension(Ljava/lang/String;)Lorg/eclipse/core/runtime/IExtension;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.removeNodeChildrenFromQueue(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.getLocalList(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)[Lorg/eclipse/core/filesystem/IFileInfo;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ProjectDescription.setBuildSpec([Lorg/eclipse/core/resources/ICommand;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.getDescribedProperty(Lorg/eclipse/core/runtime/QualifiedName;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeMatcher.getSpecificDescription(Lorg/eclipse/core/internal/content/BasicDescription;)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.isRequested(Lorg/eclipse/core/runtime/QualifiedName;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.setProperty(Lorg/eclipse/core/runtime/QualifiedName;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.dispatchEventImpl(Ljava/awt/AWTEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.AWTKeyStroke.registerSubclass(Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.event.EventListenerList.remove(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.getLocalAttribute(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.isDefined(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS.translateHTMLToCSS(Ljavax/swing/text/AttributeSet;)Ljavax/swing/text/AttributeSet;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.removeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$FontWeight.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$StringValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.getSelectedIndex()I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JSplitPane.addImpl(Ljava/awt/Component;Ljava/lang/Object;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTabbedPane.indexOfComponent(Ljava/awt/Component;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.PriorityQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.export(Ljava/io/OutputStream;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.exportNode(Ljava/io/OutputStreamWriter;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultComboBoxModel.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.actionPerformed(Ljava/awt/event/ActionEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.MuxingAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.emptyTag(Ljavax/swing/text/Element;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.noMatchForTagInAttributes(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/html/HTML$Tag;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument$DefaultDocumentEvent.getChange(Ljavax/swing/text/Element;)Ljavax/swing/event/DocumentEvent$ElementChange;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$LeafIterator.setEndOffset()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JEditorPane$PlainEditorKit.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextAreaUI.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.<init>(Ljavax/swing/text/Element;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.TableView.updateInsets()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.TextLayoutStrategy.layoutRow(Ljavax/swing/text/FlowView;II)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.PriorityBlockingQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.findAndRemove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.FrameView$FrameEditorPane.getEditorKitForContentType(Ljava/lang/String;)Ljavax/swing/text/EditorKit;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addDecoration(Lsun/font/Decoration;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addFont(Ljava/lang/Object;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addToVector(Ljava/lang/Object;ILjava/util/Vector;[I)[I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.handleInsertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.insertUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.postRemoveUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.help.plaf.basic.BasicContentViewerUI$PageLoader$Callback.handleStartTag(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader$MetaAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.PlainDocument.insertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader.handleText([CI)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JOptionPane.showOptionDialog(Ljava/awt/Component;Ljava/lang/Object;Ljava/lang/String;IILjavax/swing/Icon;[Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.contentsChanged(Ljavax/swing/event/ListDataEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setSelectedValue(Ljava/lang/Object;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractButton.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.setDropTarget(Ljava/awt/dnd/DropTarget;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.addDropTargetListener(Ljava/awt/dnd/DropTargetListener;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.setComponent(Ljava/awt/Component;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultCellEditor$2.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerDateModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerNumberModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicFileChooserUI.resetGlobFilter()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DragSourceContext.setCursorImpl(Ljava/awt/Cursor;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.help.SortMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.help.UniteAppendMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setCellRenderer(Ljavax/swing/ListCellRenderer;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTextField.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex()I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultDesktopManager.getBoundsForIconOf(Ljavax/swing/JInternalFrame;)Ljava/awt/Rectangle;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicColorChooserUI.installPreviewPanel()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalIconFactory$ImageCacher$ImageGcPair.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.BumpBuffer.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.listensToAttribute(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.HotspotManagementToolkit.isVMOptionExplicit(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putByteArray(Ljava/lang/String;[B)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.getRangeType()Lcom/jrockit/mc/rjmx/ui/internal/ChartModel$AxisRange;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.graph.EventGraphTree.restoreExpansionState()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodHandles.constant(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.stream.DistinctOps$1$1.accept(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.StateImpl.checkProp(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.compatibility.state.PlatformBundleListener$1.filterMatches(Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.module.ResolverBundle.equivalentMaps(Ljava/util/Map;Ljava/util/Map;Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.ImportPackageSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.HostSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleRevision.isCurrent()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.verifyNoDuplicates(Ljava/util/Collection;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.cleanup(Lorg/eclipse/osgi/container/ModuleRevision;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.hookregistry.StorageHookFactory.createStorageHookAndValidateFactoryClass(Lorg/eclipse/osgi/storage/BundleInfo$Generation;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getStorageHook(Ljava/lang/Class;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionsParser.logStatus(Lorg/xml/sax/SAXParseException;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryIndexElement.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.toURI(Ljava/net/URL;)Ljava/net/URI;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle.adapt0(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.DTOBuilder.mapComponentType(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.url.EquinoxFactoryManager.getField(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/reflect/Field;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.ref.Log.security()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.<init>(Ljava/lang/String;Lorg/eclipse/equinox/internal/util/ref/Log;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleContainer.update(Lorg/eclipse/osgi/container/Module;Lorg/eclipse/osgi/container/ModuleRevisionBuilder;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.Activator.startRegistry()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionRegistry.<init>(Lorg/eclipse/core/runtime/spi/RegistryStrategy;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.cacheUse()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.WorkManager$NotifyRule.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.isConflicting(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.removeByKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/registry/KeyedElement;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.mergeContribution(Lorg/eclipse/core/internal/registry/Contribution;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryObjectManager.findCommonNamespaceIdentifier([Lorg/eclipse/core/internal/registry/RegistryObject;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.EclipseBundleListener.checkForNLSFiles(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.TableReader.checkCacheValidity(Ljava/io/DataInputStream;J)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.console.command.adapter.Activator.getCommandMethods(Ljava/lang/Object;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.loadData(Ljava/lang/String;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseScheduledApplication.<init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.addScheduledApp(Lorg/eclipse/equinox/internal/app/EclipseScheduledApplication;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationDescriptor.checkArgs(Ljava/util/Map;Z)Ljava/util/Map;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationHandle.destroy()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$Values.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ValuesView.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.TreeMap.valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.init()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.createAppDescriptor(Lorg/eclipse/core/runtime/IExtension;)Lorg/eclipse/equinox/internal/app/EclipseAppDescriptor;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;IIZLjava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.enterLoad(Ljava/net/URI;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.http.util.LangUtils.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.http.pool.RouteSpecificPool.getFree(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.util.JREProxyHelper.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.StringUtil.equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.ProxyType.setProxyData(Lorg/eclipse/core/net/proxy/IProxyData;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putInt(Ljava/lang/String;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.cert.X509CertSelector.matchSubjectAlternativeNames(Ljava/security/cert/X509Certificate;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionParser.removeRedundantTrail(Ljava/util/List;Ljava/lang/Comparable;)Ljava/lang/Comparable;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.makeRelative(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxManipulatorImpl.setConfiguratorManipulator()Lorg/eclipse/equinox/internal/provisional/configuratormanipulator/ConfiguratorManipulator;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.FileLocator.getBundleFile(Lorg/osgi/framework/Bundle;)Ljava/io/File;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.fromString(Ljava/lang/String;)Ljava/net/URI;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameURI(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameString(Ljava/lang/String;Ljava/lang/String;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxBundlesState.getPrerequisteBundles(Lorg/eclipse/equinox/frameworkadmin/BundleInfo;)[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository.getCompleteArtifactDescriptor(Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.IUMap.remove(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isDynamicImport(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.pde.internal.build.publisher.FeatureRootAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AdviceFileAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractAdvice.matchVersion(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.isIncluded(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isOptional(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createMatchExpressionFromRange(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;)Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.getCachedTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.sat4j.tools.FullClauseSelectorSolver.addControlableClause(Lorg/sat4j/specs/IVecInt;)Lorg/sat4j/specs/IConstr;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.server.session.AbstractSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.listener.ELContextCleaner.purgeEntries(Ljava/lang/reflect/Field;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.contains(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.startedBundle2(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.unbind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.getMethod(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;Lorg/osgi/framework/ServiceReference;)Ljava/lang/reflect/Method;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.InstanceProcess.checkCanCauseCycle(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getMethod(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/reflect/Method;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.bind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.readObject(Ljava/io/InputStream;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeValue(Ljava/lang/Object;Ljava/io/OutputStream;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writePrimitiveArray(Ljava/lang/Class;Ljava/lang/Object;ILjava/io/OutputStream;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.xml.impl.XMLParserImpl.parse_tag_special(Lorg/eclipse/equinox/internal/util/xml/impl/TagImpl;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doProperty(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doReference(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getNamespace(Ljava/lang/String;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.validate(II)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getCardinality(Ljava/lang/String;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.isCorrectComponentTag(Ljava/lang/String;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PerformanceStats.removeStats(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.watson.DefaultElementComparator.testEquality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putLong(Ljava/lang/String;J)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.getValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.stoppingBundle(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentType.hasFileSpec(Lorg/eclipse/core/runtime/preferences/IScopeContext;Ljava/lang/String;I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.internalIntrospecthelper(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.createTypedArray(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.convert(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTransferable.getTransferData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.isStandardTextRepresentationClass()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextUI$TextTransferHandler$TextTransferable.getRicherData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.net.Socket$1.run()Ljava/lang/Boolean;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.TestExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.LegacyHandlerSubmissionExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.ActiveShellExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.expressions.WorkbenchWindowExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.findElementsRecursive(Lorg/eclipse/e4/ui/model/application/MApplicationElement;Ljava/lang/Class;Lorg/eclipse/e4/ui/workbench/Selector;Ljava/util/List;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ToolBarManagerRenderer$7.select(Lorg/eclipse/e4/ui/model/application/MApplicationElement;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.showIntro(Lorg/eclipse/ui/IWorkbenchWindow;Z)Lorg/eclipse/ui/intro/IIntroPart;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.findCoolItem([Lorg/eclipse/swt/widgets/CoolItem;Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/swt/widgets/CoolItem;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getField(Ljava/lang/String;)Ljava/lang/reflect/Field;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.setIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.MenuManager.update(ZZ)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkingSetMenuContributionItem.fill(Lorg/eclipse/swt/widgets/Menu;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.Model.areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.getControl()Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Ljava/lang/Runnable;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarManager.update(Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.addValue(Lorg/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.help.WorkbenchHelpSystem.setHelpTrace(Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.update(Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.ParameterizedCommand.<init>(Lorg/eclipse/core/commands/Command;[Lorg/eclipse/core/commands/Parameterization;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CoolBarToTrimManager.remove(Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/jface/action/IContributionItem;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarContributionItem.fill(Lorg/eclipse/swt/widgets/CoolBar;I)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.RadioMenu.isEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ShowInMenu.getShowInPartIds(Lorg/eclipse/ui/IWorkbenchPart;)Ljava/util/ArrayList;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveAllAction.updateState()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveablesList.fillModelsClosing(Ljava/util/Set;Ljava/util/Map;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.switchToPosition(Lorg/eclipse/jface/text/link/LinkedModeModel;Lorg/eclipse/jface/text/link/LinkedPosition;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.prune(Ljava/util/List;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$SubMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StyledString.isDifferentStyle(Lorg/eclipse/jface/viewers/StyledString$Styler;Lorg/eclipse/jface/viewers/StyledString$Styler;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.removeAutoEditStrategy(Lorg/eclipse/jface/text/IAutoEditStrategy;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionGroup.overlapsOrTouches(Lorg/eclipse/jface/text/link/LinkedPosition;Lorg/eclipse/jface/text/DocumentEvent;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.NonLocalUndoUserApprover.elementsContains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.createIURequirements(Ljava/util/Collection;)Ljava/util/Collection;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.queryForIU(Lorg/eclipse/equinox/p2/publisher/IPublisherResult;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.versionElements(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ConfigCUsAction.publishBundleCUs(Lorg/eclipse/equinox/p2/publisher/IPublisherInfo;[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;Ljava/lang/String;Lorg/eclipse/equinox/p2/publisher/IPublisherResult;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.FeaturesAction.getVersionRange(Lorg/eclipse/equinox/p2/publisher/eclipse/FeatureEntry;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.ExpandableComposite.setClient(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.propertytester.PlatformPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(Lorg/eclipse/core/internal/content/ContentTypeMatcher;Ljava/lang/String;Ljava/util/Comparator;)[[Lorg/eclipse/core/runtime/content/IContentType;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(Lorg/eclipse/core/internal/resources/File;Lorg/eclipse/core/internal/resources/ResourceInfo;Z)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Cache$Entry.compare(Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.getAdapter(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.classForName(Lorg/eclipse/core/runtime/IAdapterFactory;Ljava/lang/String;)Ljava/lang/Class;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Document;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.UAElement.importElement(Lorg/eclipse/help/internal/UAElement;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.AbstractIntroContainer.handleIncludeStyleInheritence(Lorg/eclipse/ui/internal/intro/impl/model/IntroInclude;Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroElement;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableValue.updateInnerObservableValue()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableList.updateInnerObservableList()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.swt.SWTVetoableValueDecorator.<init>(Lorg/eclipse/swt/widgets/Widget;Lorg/eclipse/jface/internal/databinding/swt/WidgetStringValueProperty;Lorg/eclipse/core/databinding/observable/value/IObservableValue;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.list.MultiList.<init>(Lorg/eclipse/core/databinding/observable/Realm;[Lorg/eclipse/core/databinding/observable/list/IObservableList;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableSet.updateInnerObservableSet()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableMap.updateDetailMap()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver.countPrecedingItems(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewContentProvider.createChildren(Ljava/lang/Object;)[Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardActivityFilter.select(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.includeInSetStructure(Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ActionSet;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.ProvisioningOperationWizard.provisioningContextChanged()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldHideToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.removeAttributeFromListener(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.setValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;Ljava/lang/String;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ConditionChooser.updateUnit()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.LocalizedString.getLocales()Ljava/util/List;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.FieldFactory.createFromDisplayUnit(Lcom/jrockit/mc/common/unit/UnitDescriptor;Ljava/lang/String;I)Lcom/jrockit/mc/ui/model/fields/Field;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.removeCollector(Lorg/eclipse/ui/internal/progress/IProgressUpdateCollector;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.merge(Lorg/eclipse/e4/ui/model/application/ui/MExpression;Lorg/eclipse/e4/ui/model/application/ui/MExpression;)Lorg/eclipse/e4/ui/model/application/ui/MExpression;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialViewer.drawBackground(Lorg/eclipse/swt/graphics/GC;Lcom/jrockit/mc/ui/dial/DialDevice;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.fields.internal.QuantityField.initKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;Ljava/lang/String;Lcom/jrockit/mc/common/unit/IQuantity;Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.getNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/jrockit/mc/common/xml/ClassFactory;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.setAttributeType(Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.sampler.CompositeRangeSampler.needsStructuralRefresh(Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.focusLost(Ljava/awt/event/FocusEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectInputStream.loadFeatureMap(Lorg/eclipse/emf/ecore/util/FeatureMap$Internal;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setExtendedMetaDataOption(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FontDescriptor.setStyle(I)Lorg/eclipse/jface/resource/FontDescriptor;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.canEdit(Ljava/lang/String;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.StringConstructorCellEditor.checkContructor(Ljava/lang/Class;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getForeground(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Color;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyDescriptor.isCompatibleWith(Lorg/eclipse/ui/views/properties/IPropertyDescriptor;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.ArrayLengthCellEditor.doGetValue()Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.fireSelectionChanged(II)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.FileUtil.computeOverlap(Ljava/net/URI;Ljava/net/URI;Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Queue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ScopeSetDialog.findOperation(Lorg/eclipse/help/ui/internal/views/ScopeSet;Ljava/lang/Class;)Lorg/eclipse/help/ui/internal/views/ScopeSetDialog$PendingOperation;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.internal.BasicPrimitivesConverter.getConverter(Ljava/lang/Class;)Lcom/jrockit/mc/rjmx/services/flr/internal/Converter;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferenceServiceRegistryHelper.applyRuntimeDefaults(Ljava/lang/String;Ljava/lang/ref/WeakReference;)Ljava/lang/ref/WeakReference;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.compiler.JspUtil.interpreterCall(ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.<clinit>()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory.getClassForInterface(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.demo.html.HTMLParser.addText(Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.servlet.http.HttpServlet.getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.check(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.configAdminRegistered(Lorg/osgi/service/cm/ConfigurationAdmin;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.updated(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.isPossibleMatch(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Reference.bindNewReference(Lorg/osgi/framework/ServiceReference;Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver.removeNonEffectiveRequirements(Ljava/util/ListIterator;Ljava/util/List;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.themes.ColorsAndFontsPreferencePage.isDefault(Lorg/eclipse/ui/internal/themes/ColorDefinition;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.updateActive(Lorg/eclipse/ui/IEditorPart;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.UIEvents.contains(Lorg/osgi/service/event/Event;Ljava/lang/String;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.saveData(Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.unsubscribe(Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardContentProvider.getParent(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.filesystem.URIUtil.equals(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.index.Index.concatenateUnique(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator.coerceAndEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.addListener(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.skip()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.isSubtype(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.layout(Lorg/eclipse/swt/graphics/GC;ILorg/eclipse/ui/internal/forms/widgets/Locator;ILjava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.about.InstallationDialog.createContents(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.setVisible(Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.equalSettings(Lcom/jrockit/mc/rjmx/services/flr/IEventSettingsHolder;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.wizards.preferences.WizardPreferencesImportPage1.getTransfers()[Lorg/eclipse/ui/internal/preferences/PreferenceTransferElement;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.scopeMatches(Ljava/lang/String;Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.NewWizardNewPage.isPrimary(Lorg/eclipse/ui/wizards/IWizardDescriptor;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.ColumnComposite.countVisibleColumnsBefore(Lcom/jrockit/mc/rjmx/ui/column/IColumn;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.KeysPreferencePage.createModifyTab(Lorg/eclipse/swt/widgets/TabFolder;)Lorg/eclipse/swt/widgets/Composite;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage.createDataControls(Lorg/eclipse/swt/widgets/Composite;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.fillEditorTable()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeSorter.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.getInitialRadioSelection()I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.TwoPaneElementSelector.setLowerSelectedElement(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredList.setSelection([Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.swing.ProgressMonitor.isCanceled()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.DefaultHelpUI.isActiveShell(Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/ui/IWorkbenchWindow;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.refresh()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.SeeAlsoPart.updateLinks(Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/util/List;)Ljava/lang/Class;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.allSameClass(Ljava/util/List;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.fireSelectionChanged(Lorg/eclipse/ui/forms/IFormPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.update()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.checkLimit()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.editor.FormPage.isActive()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCToolBarManager.remove(Lorg/eclipse/jface/action/IAction;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.Section.setSeparatorControl(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.isIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.BindingService.isSameBinding(Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;Lorg/eclipse/e4/ui/model/application/commands/MCommand;Lorg/eclipse/jface/bindings/Binding;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuFactoryGenerator.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ApplicationImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ContributionImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.CoreExpressionImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.advanced.impl.PerspectiveImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.WindowImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.PopupMenuImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectToolItemImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectMenuItemImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DynamicMenuContributionImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.ToolControlImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureChangeImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureMapEntryImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EAttributeImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EReferenceImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassifierImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EDataTypeImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumLiteralImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xml.type.impl.SimpleAnyTypeImpl.eIsSet(I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleData.dynamicIsSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.init(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/util/Map;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equals(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EObject;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.TopologicalSort.buildDependencyGraph()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.GenericMApplicationElementFactoryImpl$MApplicationElementClassToEClass.buildMapping(Lorg/eclipse/emf/ecore/EPackage;)Ljava/util/Map;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.saveAll(Ljava/util/List;ZZZLorg/eclipse/jface/operation/IRunnableContext;Lorg/eclipse/jface/window/IShellProvider;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferencePageHistory.addHistoryEntry(Lorg/eclipse/ui/internal/dialogs/PreferenceHistoryEntry;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.model.ConflictModel.setConflicts(Ljava/util/Collection;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MoveControlAction.run()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.checkDuplicates(Lorg/eclipse/ui/internal/NavigationHistoryEditorInfo;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.failsEnablement([Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCBook.showPageWithData(Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMinValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMaxValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedDialsSectionPart$AttributeDial.updateMetadata()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.setQuantityKindFromAttribute(Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setKindOfQuantity(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.updateQuantityKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.activate()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.TogglingCellEditor.doSetValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.canEdit(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.getCellEditor(Ljava/lang/Object;)Lorg/eclipse/jface/viewers/CellEditor;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.createConverter(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/conversion/IConverter;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateValueStrategy.findValidator(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/validation/IValidator;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.getKeyForClass(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToByteConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToShortConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToLongConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToFloatConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToDoubleConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigDecimalConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.NumberToStringConverter.<init>(Lcom/ibm/icu/text/NumberFormat;Ljava/lang/Class;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeConfiguratorTableFactory$2.getValueTyped(Lcom/jrockit/mc/rjmx/subscription/MRI;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.operativeset.actions.AddMatchingRelationalKeyAction.addMatchingEventsForType(Lcom/jrockit/mc/flightrecorder/spi/IEventType;Lcom/jrockit/mc/flightrecorder/spi/IField;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.toolbar.DeleteAction.removeFromList(Lcom/jrockit/mc/components/ui/tab/BaseDescriptor;Ljava/util/List;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addAfter(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addBefore(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.loadMenuAndToolbarStructure()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.createMenuEntries(Lorg/eclipse/e4/ui/model/application/ui/menu/MMenu;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.addMatchedKeys(Ljava/util/ArrayList;Lorg/eclipse/core/runtime/preferences/PreferenceFilterEntry;[Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldCreateToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.selectionChanged(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.commands.internal.Traverser.lookupMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.NewPropertySheetHandler.findPropertySheet(Lorg/eclipse/core/commands/ExecutionEvent;Lorg/eclipse/ui/views/properties/PropertyShowInContext;)Lorg/eclipse/ui/views/properties/PropertySheet;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$4$PerspectiveDropTarget.sameShell()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.WorkbenchActivitySupport.addExtension(Lorg/eclipse/core/runtime/dynamichelpers/IExtensionTracker;Lorg/eclipse/core/runtime/IExtension;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.EditorHistoryItem.matches(Lorg/eclipse/ui/IEditorInput;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.checkEditor(Lorg/eclipse/ui/IEditorInput;Ljava/util/List;Lorg/eclipse/ui/internal/EditorReference;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.createEntry(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IEditorPart;Lorg/eclipse/ui/INavigationLocation;)Lorg/eclipse/ui/internal/NavigationHistoryEntry;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistoryEntry.mergeInto(Lorg/eclipse/ui/internal/NavigationHistoryEntry;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(Lorg/eclipse/swt/widgets/Widget;[Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.itemExists([Lorg/eclipse/swt/widgets/Item;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.loader.ContentProviderManager.getContentProviderParentPage(Lorg/eclipse/ui/intro/config/IIntroContentProvider;)Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroPage;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.internalRefresh(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.internalIsInputOrEmptyPath(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.startsWith(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$9.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.AbstractWorkingSetDialog.removeSelectedWorkingSets(Ljava/util/List;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.gotoEntryForTab(Lorg/eclipse/ui/internal/NavigationHistoryEntry;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.handleWidgetSelected()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.Timestamp.in(Lcom/jrockit/mc/common/unit/IUnit;)Lcom/jrockit/mc/common/unit/IQuantity;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putDouble(Ljava/lang/String;D)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.restoreChangedWorkingSets()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesMapper.close(Lorg/eclipse/equinox/internal/security/storage/SecurePreferencesRoot;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.getCloseableSiblingParts(Lorg/eclipse/e4/ui/model/application/ui/basic/MPart;)Ljava/util/List;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ActionChooser$1.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeSelectorComponent$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.ViewsPreferencePage$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$12.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.layout.TreePart.updateSelection()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.tracetree.TraceModel.traceContainsFrames(Lcom/jrockit/mc/common/IMCStackTrace;Ljava/util/List;Ljava/util/Map;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonTypeProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMaxValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMinValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.handleSelection(Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.contentassist.AdditionalInfoController.showInformation(Lorg/eclipse/jface/text/contentassist/ICompletionProposal;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationEvent(Lorg/osgi/service/cm/ConfigurationEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationChange(Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;Lorg/osgi/service/cm/Configuration;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getComponentPropByPID(Ljava/lang/String;)Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.handleBoundServicesUpdate(Ljava/util/Hashtable;Ljava/util/Dictionary;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.director.app.DirectorApplication.parseIUsArgument(Ljava/util/List;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.validation.ObjectToPrimitiveValidator.mapContainsValues(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager.findMessage(Ljava/lang/Object;Ljava/util/ArrayList;)Lorg/eclipse/ui/internal/forms/MessageManager$Message;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.internal.ToolbarFormEditor.show(Lcom/jrockit/mc/ui/formpage/FormPageContributionGroup;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.refresh()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.tree.MBeanTreeSectionPart$1$1.findItem(Ljava/lang/Object;[Lorg/eclipse/swt/widgets/TreeItem;)Lorg/eclipse/swt/widgets/TreeItem;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.originatesFrom(Lorg/eclipse/core/runtime/IExtension;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.createProxy(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/core/internal/adapter/AdapterFactoryProxy;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Workspace.computeActiveBuildConfigOrder()Lorg/eclipse/core/internal/resources/ComputeProjectOrder$VertexOrder;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.successors.SuccessorFrameNodeBuilder.addTrace(Lcom/jrockit/mc/flightrecorder/ui/components/histogram/HistogramItem;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.createNewCharto(Lcom/jrockit/mc/flightrecorder/ui/components/chart/model/FLRChartDescriptor;Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;)Lse/hirt/greychart/impl/DefaultXYGreyChart;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.getContentType(Lcom/jrockit/mc/common/unit/UnitDescriptor;)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMin.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMax.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.AbstractSingleMRITransformation.subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue.getLiveValue()Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.KeyBindingService.removeKeyBindingService(Lorg/eclipse/ui/IWorkbenchSite;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialConfiguration.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.tabs.threads.ThreadMasterDetailBlock.pageChanged(Lorg/eclipse/jface/dialogs/PageChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.WorkbenchPartPropertySheets.getPropertySheetProxyPage(Ljava/lang/Object;)Lcom/jrockit/mc/ui/misc/WorkbenchPartPropertySheets$PropertySheetProxyPage;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.isThisPart(Lorg/eclipse/ui/IWorkbenchPartReference;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.handlePartDeactivation(Lorg/eclipse/ui/IWorkbenchPartReference;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler$PartListener.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partOpened(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory$1.updateNavigationHistory(Lorg/eclipse/ui/IWorkbenchPartReference;Z)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$DetailsContentViewer.refresh([Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.perspectiveChanged(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IPerspectiveDescriptor;Lorg/eclipse/ui/IWorkbenchPartReference;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.SelectableIUsPage$2.checkStateChanged(Lorg/eclipse/jface/viewers/CheckStateChangedEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$ItemsListLabelProvider.isSelected(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryChangeEvent.getHostDelta(Ljava/lang/String;)Lorg/eclipse/core/internal/registry/RegistryDelta;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryDelta.getExtensionDeltas(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IExtensionDelta;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$3.matches(Lorg/eclipse/core/runtime/IExtensionPoint;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.getViewAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.browse.MultiProtocolFileSystemBrowserAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.outgoing.MultiProtocolOutgoingAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.getAdapterNames()[Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.indexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.jsp.jasper.Activator.getJasperBundle()Lorg/osgi/framework/Bundle;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.getImportingBundles()[Lorg/osgi/framework/Bundle;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.addRequirers(Ljava/util/Set;Lorg/eclipse/osgi/container/ModuleWiring;Ljava/lang/String;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.DevClassPathHelper.getArrayFromList(Ljava/lang/String;)[Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/internal/registry/ConfigurationElement;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Lorg/eclipse/core/runtime/spi/RegistryContributor;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher.perspectiveIsActive(Lorg/eclipse/ui/IPerspectiveDescriptor;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectPrevious(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectNext(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormTextModel.select(Lorg/eclipse/ui/internal/forms/widgets/IFocusSelectable;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart$2.linkActivated(Lorg/eclipse/ui/forms/events/HyperlinkEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormUtil.ensureVisible(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.events.ExpansionEvent.getState()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$13.keyPressed(Lorg/eclipse/swt/events/KeyEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$3.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$6.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CycleBaseHandler$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$7.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$6.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$4.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.FormToolkit$BorderPainter.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.actions.SelectWorkingSetsAction.isWorkingSetEnabled(Lorg/eclipse/ui/IWorkingSet;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.BrowserPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ContextHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.EngineResultSection.hasControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.views.JVMBrowserView.addActions(Lorg/eclipse/jface/action/IMenuManager;Lorg/eclipse/jface/viewers/IStructuredSelection;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextEmail.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextRegex.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.paint(Lorg/eclipse/swt/graphics/GC;Lorg/eclipse/swt/graphics/Rectangle;Ljava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;Lorg/eclipse/ui/internal/forms/widgets/SelectionData;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.SearchField.addPreviousPick(Ljava/lang/String;Lorg/eclipse/ui/internal/quickaccess/QuickAccessElement;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessDialog$1$1.addPreviousPick(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.DefaultHyperlinkPresenter.highlightRegion(Lorg/eclipse/jface/text/IRegion;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer$3.select()V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.parse(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.handleScroll(Lorg/eclipse/swt/widgets/Event;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.isParentScrolling(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreeViewer.replace(Ljava/lang/Object;ILjava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.createListDiffs(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.listIndexOf(Ljava/util/List;Ljava/lang/Object;I)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue$1.handleValueChange(Lorg/eclipse/core/databinding/observable/value/ValueChangeEvent;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.map.BidiObservableMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.Pool$AccessUnit.matches(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceCompareTo(Lorg/eclipse/ecf/core/identity/BaseID;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.naming.ldap.Rdn$RdnEntry.compareTo(Ljavax/naming/ldap/Rdn$RdnEntry;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver$ResolveProcess.compare(Lorg/osgi/resource/Capability;Lorg/osgi/resource/Capability;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Lang.guessLanguages(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(Ljava/lang/CharSequence;I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule$4.isMatch(Ljava/lang/CharSequence;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.OptimisticComparator.compareCells(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.WeakInterningHashSet.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.isTouch()Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ECollections$2.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.nio.file.FileTreeWalker.wouldLoop(Ljava/nio/file/Path;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.toString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.getFormat()Lorg/eclipse/equinox/p2/metadata/IVersionFormat;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemReasonString(I)Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.paramString()Ljava/lang/String;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.FileEditorMapping.compareList(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.preferences.PropertyUtil.isEqual(Lorg/eclipse/ui/internal/preferences/IPropertyMap;Lorg/eclipse/ui/internal/preferences/IPropertyMap;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.equality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnChainMatch(Ljava/util/List;ILjava/util/List;I)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.skipWildCards(Ljava/util/List;I)I";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnmatch(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextAttribute.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Feature.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.equals([Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;Ljava/lang/Comparable;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceEquals(Lorg/eclipse/ecf/core/identity/BaseID;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.helpers.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.equals(Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.ImageDescription.safeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.equalContext(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllLimits(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MemberName$Factory.getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Class;)Ljava/util/List;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.valueEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/util/EnumMap;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.security.Identity.identityEquals(Ljava/security/Identity;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$BasicEStoreEList.delegateEquals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArraySet.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.font.TextLayout.equals(Ljava/awt/font/TextLayout;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ShapeGraphicAttribute.equals(Ljava/awt/font/ShapeGraphicAttribute;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ImageGraphicAttribute.equals(Ljava/awt/font/ImageGraphicAttribute;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.equal(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ForwardingNode.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;" -> "net.mooctest.Substitution.extendAll(Ljava/util/LinkedList;)Ljava/util/LinkedList;";
	"net.mooctest.Variable.getIdentifier()Ljava/lang/String;" -> "net.mooctest.DatalogTest2.testVariable2()V";
	"net.mooctest.Variable.getIdentifier()Ljava/lang/String;" -> "net.mooctest.DatalogTest2.testVariable()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest3.testFact()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest.substituteTo()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest5.blowTestFact2()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest.toFact()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest5.blowTestFact()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;";
	"net.mooctest.Argument.getVariable()Lnet/mooctest/Variable;" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Argument.getVariable()Lnet/mooctest/Variable;" -> "net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;";
	"net.mooctest.Argument.getVariable()Lnet/mooctest/Variable;" -> "net.mooctest.DatalogTest.toFact()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest.equals()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest1.test()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest1.testDatalogSames()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest.toFact()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest.initialize()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest.blowConstructor2()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogOtherTest.initialize()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest5.initialize()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest1.testDatalogGets()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest.hashCodeTest()V";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z";
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "net.mooctest.DatalogTest.blowConstructor1()V";
	"net.mooctest.Program.valToArg([Lnet/mooctest/Value;)[Lnet/mooctest/Argument;" -> "net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z";
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;";
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "net.mooctest.DatalogTest.getPredicate()V";
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "net.mooctest.DatalogTest1.testDatalogGets()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "net.mooctest.DatalogOtherTest.testRule()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;" -> "net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;";
	"net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;" -> "net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;";
	"net.mooctest.Value.getValue()Ljava/lang/String;" -> "net.mooctest.DatalogOtherTest.testValue()V";
	"net.mooctest.Datalog.getArguments()[Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest1.test()V";
	"net.mooctest.Datalog.getArguments()[Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest.getArguments()V";
	"net.mooctest.Datalog.getArguments()[Lnet/mooctest/Argument;" -> "net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;";
	"net.mooctest.Variable.hashCode()I" -> "net.mooctest.DatalogTest2.testVariable3()V";
	"net.mooctest.Variable.hashCode()I" -> "net.mooctest.DatalogOtherTest.testVariable3()V";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.OrdFieldSource.<clinit>()V";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.ReverseOrdFieldSource.<clinit>()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread.startListenSocket()V";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.framework.CapabilityPermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.framework.PackagePermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.framework.AdminPermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.framework.AdaptPermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.framework.ServicePermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.service.application.ApplicationAdminPermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.log.LogPermission.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.awt.datatransfer.DataFlavor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.databinding.property.SimplePropertyEvent.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.awt.font.ImageGraphicAttribute.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.awt.font.ShapeGraphicAttribute.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.awt.font.TextLine.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.AbstractSet.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.AbstractList.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.AbstractEList.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.http.impl.client.cache.ResourceReference.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.security.spec.EllipticCurve.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.sql.DriverInfo.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.AbstractMap$SimpleEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.AbstractMap$SimpleImmutableEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Collections$ReverseComparator2.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Calendar.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$Node.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.naming.RefAddr.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.naming.directory.BasicAttribute.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.naming.directory.BasicAttributes.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.text.StyleContext$SmallAttributeSet.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.tree.TreePath.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.CopyOnWriteArrayList.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.net.Proxy.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.awt.font.FontRenderContext.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.TreeMap$Entry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$KeySetView.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.invoke.MethodType.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.reflect.Parameter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.security.AccessControlContext.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.common.unit.LinearUnit.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.resources.mapping.ResourceMapping.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.resources.Resource.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.resources.Marker.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.resources.BuildConfiguration.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.resources.mapping.ShallowContainer.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.core.DefaultTreeNode.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.search.RecipientStringTerm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.search.AddressTerm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.search.RecipientTerm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.search.OrTerm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.search.NotTerm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.search.AndTerm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.viewers.DecorationOverlayIcon.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.resource.DerivedImageDescriptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.resource.FileImageDescriptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.ui.dial.DialDevice.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.action.ActionContributionItem.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.ui.misc.MCToolBarManager$ToolbarItem.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.ui.model.fields.Row.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.util.AttributeSource.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.index.IndexCommit.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.index.SegmentInfo.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.ConstantScoreQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.FilteredQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.MultiTermQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.NumericRangeQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.NGramPhraseQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.CustomScoreQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.ValueSourceQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.spans.SpanOrQuery.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.CachingSpanFilter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.CachingWrapperFilter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.FieldCacheRangeFilter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.FieldCacheImpl$Entry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.SortField.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.payloads.AveragePayloadFunction.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.payloads.MaxPayloadFunction.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.payloads.MinPayloadFunction.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.util.fst.PairOutputs$Pair.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.databinding.validation.ValidationStatus.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.databinding.observable.DecoratingObservable.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.databinding.observable.value.ValueDiff.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$4.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentitySet.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.SetDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapSimpleValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.Pair.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentityMap$4.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentitySet.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.expressions.Property.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.jobs.Semaphore.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.jobs.ObjectMap.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.resources.FileInfoMatcherDescription.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.resources.ProjectScope.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.resources.LinkDescription.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.utils.ObjectMap.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ecf.core.util.Proxy.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.URI$Fragment.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler$EClassFeatureNamePair.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLOptionsImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup$FeatureClassifierPair.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$EStoreImpl$Entry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.runtime.QualifiedName.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionedId.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionRange.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Unary.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.MatchExpression.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.UnaryCollectionFilter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Member.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.CollectionFilter.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.ContextExpression.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.LambdaExpression.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Not.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Condition.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.p2.operations.Update.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.preferences.AbstractScope.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.ExtensionRegistry$ListenerInfo.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableHelpResource.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableTocsArray.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.util.component.Container$Relationship.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$4.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementSet.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.link.LinkedPosition.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.link.ProposalPosition.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.contentassist.ContextInformationPopup$ContextFrame.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.TextSelection.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.viewers.TreeSelection.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.viewers.ViewerRow.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.osgi.framework.ServicePermission$Properties$Entry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ServiceReferenceImpl.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.views.properties.PropertyShowInContext.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.DefaultSaveable.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.Semaphore.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.AggregateWorkingSet.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.EditorElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.WizardElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.ViewElement.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.part.MultiEditorInput.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.sat4j.core.ReadOnlyVec.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.sat4j.core.ReadOnlyVecInt.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.sat4j.core.Vec.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.sat4j.pb.ObjectiveFunction.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.sat4j.pb.tools.WeightedObject.hashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.Object.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.event.TreeModelEvent.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.text.html.OptionListModel.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.tree.DefaultTreeSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.DefaultListSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "java.awt.image.BufferedImage.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.BranchLabel.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.director.Projector$AbstractVariable.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.util.ssl.SslContextFactory.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.Server.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.io.AbstractConnection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.io.nio.SelectChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.ResourceCache.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSession.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.Request.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.DocumentRewriteSession.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.PartSite.toString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable$EntrySet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap.hashOf(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToStringMapImpl.getHash()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.getHash()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.change.impl.EObjectToChangesMapEntryImpl.getHash()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.DynamicEObjectImpl$BasicEMapEntry.getHash()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl.getHash()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container$Dynamic$BasicEMapEntry.getHash()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.WeakInterningHashSet.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Arrays.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.HashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.storage.bundlefile.BundleFile.getResourceURL(Ljava/lang/String;Lorg/eclipse/osgi/container/Module;I)Ljava/net/URL;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.runtime.Path.computeHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getEntry(Ljava/lang/String;)Ljava/net/URL;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.<init>(Ljava/lang/reflect/AnnotatedElement;Lorg/eclipse/e4/core/di/IInjector;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Ljava/lang/Object;Z)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.framework.util.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.viewers.CustomHashtable.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.viewers.TreePath.hashCode(Lorg/eclipse/jface/viewers/IElementComparer;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.URI$LazyFragmentInitializer.clear()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.Pool$ObjectAccessUnit.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.hashCode(Ljava/lang/String;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Formatter$FormatSpecifier.printHashCode(Ljava/lang/Object;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.common.util.URI.rawAppendFragment(Ljava/lang/CharSequence;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.plaf.nimbus.ImageCache.hash(Ljava/awt/GraphicsConfiguration;II[Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Arrays.deepHashCode([Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.reflect.Proxy$Key1.<init>(Ljava/lang/Class;)V";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.reflect.Proxy$Key2.<init>(Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Variable.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Variable.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Hashtable.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight.scorer(Lorg/apache/lucene/index/IndexReader;ZZ)Lorg/apache/lucene/search/Scorer;";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight$1.add(ILorg/apache/lucene/index/IndexReader;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.RegistryIndexElement.getKeyHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.Contribution.getKeyHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.setEvent(Lorg/eclipse/equinox/internal/util/timer/TimerListener;IIJJILjava/lang/String;Ljava/security/AccessControlContext;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.registry.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.http.servlet.internal.ProxyContext$ContextAttributes.<init>(Lorg/eclipse/equinox/http/servlet/internal/ProxyContext;Lorg/osgi/service/http/HttpContext;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread.<init>(Lorg/eclipse/jetty/server/AsyncNCSARequestLog;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setClassName(Ljava/lang/String;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setHeldClass(Ljava/lang/Class;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(Ljavax/servlet/http/HttpServletRequest;J)Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.utils.Cache$Entry.getKeyHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.utils.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createWidget(Lorg/eclipse/e4/ui/model/application/ui/MUIElement;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jetty.io.AbstractBuffer.toDetailString()Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getWindowId(Lorg/eclipse/ui/IWorkbenchWindow;)Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getPageId(Lorg/eclipse/ui/IWorkbenchPage;)Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.calcHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.calcHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.projection.ProjectionDocument.<init>(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.PaintManager$PositionManager.<init>()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.TextViewer$ViewerState.connect(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.statushandlers.LabelProviderWrapper.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getIndex(Lorg/eclipse/emf/ecore/EClass;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.resetPerspectiveModel(Lorg/eclipse/e4/ui/model/application/ui/advanced/MPerspective;Lorg/eclipse/e4/ui/model/application/ui/basic/MWindow;Z)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.part.EditorInputTransfer.<clinit>()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.presentation.PresentationReconciler.<init>()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.text.TextViewer.<init>()V";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.hash(ILjava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "javax.mail.internet.UniqueValue.getUniqueMessageIDValue(Ljavax/mail/Session;)Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.views.types.EventTypesView.updateShowingPage()V";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Variable.hashCode()I" -> "java.util.WeakHashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.ResourceBundle$CacheKey.calculateHashCode()V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.util.EcoreUtil.getIdentification(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Variable.hashCode()I" -> "javax.swing.GroupLayout.createSpringDescription(Ljava/lang/StringBuffer;Ljavax/swing/GroupLayout$Spring;Ljava/lang/String;I)V";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ui.internal.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.hashCode([Ljava/lang/Comparable;Ljava/lang/Comparable;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Expression.hashCode([Lorg/eclipse/equinox/internal/p2/metadata/expression/Expression;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.ecf.core.identity.StringID.namespaceHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode([Lorg/eclipse/core/resources/IBuildConfiguration;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.databinding.observable.map.MapDiff$AbstractMapEntry.hash(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.commands.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.databinding.BindingStatus.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.http.util.LangUtils.hashCode(ILjava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.expressions.EqualsExpression.computeHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.expressions.Expression.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.hashCode(Ljava/net/URL;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.Objects.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "javax.security.auth.Subject.getCredHashCode(Ljava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "java.util.EnumMap.entryHashCode(I)I";
	"net.mooctest.Variable.hashCode()I" -> "java.nio.file.attribute.AclEntry.hash(ILjava/lang/Object;)I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.EClassImpl$9.delegateHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.emf.ecore.impl.EOperationImpl$1.delegateHashCode()I";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Variable.hashCode()I" -> "org.eclipse.core.internal.utils.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Variable.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "net.mooctest.DatalogTest3.testFact()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Argument.isVariable()Z" -> "net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;";
	"net.mooctest.Substitution.<init>()V" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Substitution.<init>()V" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Substitution.<init>()V" -> "net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest1.test()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest1.testDatalogSames()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.Program.valToArg([Lnet/mooctest/Value;)[Lnet/mooctest/Argument;";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest.<init>()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest1.testDatalogGets()V";
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.OrdFieldSource.<clinit>()V";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.ReverseOrdFieldSource.<clinit>()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread.startListenSocket()V";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.framework.CapabilityPermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.framework.PackagePermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.framework.AdminPermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.framework.AdaptPermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.framework.ServicePermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.service.application.ApplicationAdminPermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.log.LogPermission.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.awt.datatransfer.DataFlavor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.databinding.property.SimplePropertyEvent.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.awt.font.ImageGraphicAttribute.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.awt.font.ShapeGraphicAttribute.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.awt.font.TextLine.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.AbstractSet.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.AbstractList.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.AbstractEList.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.http.impl.client.cache.ResourceReference.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.security.spec.EllipticCurve.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.sql.DriverInfo.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.AbstractMap$SimpleEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.AbstractMap$SimpleImmutableEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Collections$ReverseComparator2.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Calendar.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$Node.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.naming.RefAddr.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.naming.directory.BasicAttribute.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.naming.directory.BasicAttributes.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.text.StyleContext$SmallAttributeSet.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.tree.TreePath.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.CopyOnWriteArrayList.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.net.Proxy.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.awt.font.FontRenderContext.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.TreeMap$Entry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$KeySetView.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.invoke.MethodType.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.reflect.Parameter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.security.AccessControlContext.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.common.unit.LinearUnit.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.resources.mapping.ResourceMapping.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.resources.Resource.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.resources.Marker.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.resources.BuildConfiguration.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.resources.mapping.ShallowContainer.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.core.DefaultTreeNode.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.search.RecipientStringTerm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.search.AddressTerm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.search.RecipientTerm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.search.OrTerm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.search.NotTerm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.search.AndTerm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.viewers.DecorationOverlayIcon.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.resource.DerivedImageDescriptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.resource.FileImageDescriptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.ui.dial.DialDevice.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.action.ActionContributionItem.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.ui.misc.MCToolBarManager$ToolbarItem.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.ui.model.fields.Row.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.util.AttributeSource.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.index.IndexCommit.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.index.SegmentInfo.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.ConstantScoreQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.FilteredQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.MultiTermQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.NumericRangeQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.NGramPhraseQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.CustomScoreQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.ValueSourceQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.spans.SpanOrQuery.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.CachingSpanFilter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.CachingWrapperFilter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.FieldCacheRangeFilter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.FieldCacheImpl$Entry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.SortField.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.payloads.AveragePayloadFunction.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.payloads.MaxPayloadFunction.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.payloads.MinPayloadFunction.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.util.fst.PairOutputs$Pair.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.databinding.validation.ValidationStatus.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.databinding.observable.DecoratingObservable.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.databinding.observable.value.ValueDiff.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$4.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentitySet.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.SetDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapSimpleValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.Pair.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentityMap$4.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentitySet.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.expressions.Property.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.jobs.Semaphore.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.jobs.ObjectMap.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.resources.FileInfoMatcherDescription.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.resources.ProjectScope.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.resources.LinkDescription.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.utils.ObjectMap.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ecf.core.util.Proxy.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.URI$Fragment.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler$EClassFeatureNamePair.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLOptionsImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup$FeatureClassifierPair.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$EStoreImpl$Entry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.runtime.QualifiedName.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionedId.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionRange.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Unary.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.MatchExpression.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.UnaryCollectionFilter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Member.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.CollectionFilter.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.ContextExpression.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.LambdaExpression.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Not.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Condition.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.p2.operations.Update.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.preferences.AbstractScope.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.ExtensionRegistry$ListenerInfo.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableHelpResource.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableTocsArray.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.util.component.Container$Relationship.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$4.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementSet.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.link.LinkedPosition.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.link.ProposalPosition.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.contentassist.ContextInformationPopup$ContextFrame.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.TextSelection.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.viewers.TreeSelection.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.viewers.ViewerRow.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.osgi.framework.ServicePermission$Properties$Entry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ServiceReferenceImpl.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.views.properties.PropertyShowInContext.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.DefaultSaveable.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.Semaphore.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.AggregateWorkingSet.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.EditorElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.WizardElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.ViewElement.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.part.MultiEditorInput.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.sat4j.core.ReadOnlyVec.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.sat4j.core.ReadOnlyVecInt.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.sat4j.core.Vec.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.sat4j.pb.ObjectiveFunction.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.sat4j.pb.tools.WeightedObject.hashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.Object.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.event.TreeModelEvent.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.text.html.OptionListModel.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.tree.DefaultTreeSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.DefaultListSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "java.awt.image.BufferedImage.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.BranchLabel.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.director.Projector$AbstractVariable.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.util.ssl.SslContextFactory.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.Server.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.io.AbstractConnection.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.io.nio.SelectChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.ResourceCache.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSession.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.Request.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.DocumentRewriteSession.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.PartSite.toString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable$EntrySet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap.hashOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToStringMapImpl.getHash()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.getHash()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.change.impl.EObjectToChangesMapEntryImpl.getHash()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.DynamicEObjectImpl$BasicEMapEntry.getHash()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl.getHash()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container$Dynamic$BasicEMapEntry.getHash()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.WeakInterningHashSet.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Arrays.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.HashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.storage.bundlefile.BundleFile.getResourceURL(Ljava/lang/String;Lorg/eclipse/osgi/container/Module;I)Ljava/net/URL;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.runtime.Path.computeHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getEntry(Ljava/lang/String;)Ljava/net/URL;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.<init>(Ljava/lang/reflect/AnnotatedElement;Lorg/eclipse/e4/core/di/IInjector;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Ljava/lang/Object;Z)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.framework.util.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.viewers.CustomHashtable.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.viewers.TreePath.hashCode(Lorg/eclipse/jface/viewers/IElementComparer;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.URI$LazyFragmentInitializer.clear()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.Pool$ObjectAccessUnit.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.hashCode(Ljava/lang/String;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Formatter$FormatSpecifier.printHashCode(Ljava/lang/Object;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.common.util.URI.rawAppendFragment(Ljava/lang/CharSequence;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.plaf.nimbus.ImageCache.hash(Ljava/awt/GraphicsConfiguration;II[Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Arrays.deepHashCode([Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.reflect.Proxy$Key1.<init>(Ljava/lang/Class;)V";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.reflect.Proxy$Key2.<init>(Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Fact.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Fact.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Hashtable.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight.scorer(Lorg/apache/lucene/index/IndexReader;ZZ)Lorg/apache/lucene/search/Scorer;";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight$1.add(ILorg/apache/lucene/index/IndexReader;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.RegistryIndexElement.getKeyHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.Contribution.getKeyHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.setEvent(Lorg/eclipse/equinox/internal/util/timer/TimerListener;IIJJILjava/lang/String;Ljava/security/AccessControlContext;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.registry.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.http.servlet.internal.ProxyContext$ContextAttributes.<init>(Lorg/eclipse/equinox/http/servlet/internal/ProxyContext;Lorg/osgi/service/http/HttpContext;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread.<init>(Lorg/eclipse/jetty/server/AsyncNCSARequestLog;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setClassName(Ljava/lang/String;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setHeldClass(Ljava/lang/Class;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(Ljavax/servlet/http/HttpServletRequest;J)Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.utils.Cache$Entry.getKeyHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.utils.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createWidget(Lorg/eclipse/e4/ui/model/application/ui/MUIElement;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jetty.io.AbstractBuffer.toDetailString()Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getWindowId(Lorg/eclipse/ui/IWorkbenchWindow;)Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getPageId(Lorg/eclipse/ui/IWorkbenchPage;)Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.calcHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.calcHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.projection.ProjectionDocument.<init>(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.PaintManager$PositionManager.<init>()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.TextViewer$ViewerState.connect(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.statushandlers.LabelProviderWrapper.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getIndex(Lorg/eclipse/emf/ecore/EClass;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.resetPerspectiveModel(Lorg/eclipse/e4/ui/model/application/ui/advanced/MPerspective;Lorg/eclipse/e4/ui/model/application/ui/basic/MWindow;Z)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.part.EditorInputTransfer.<clinit>()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.presentation.PresentationReconciler.<init>()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.text.TextViewer.<init>()V";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.hash(ILjava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "javax.mail.internet.UniqueValue.getUniqueMessageIDValue(Ljavax/mail/Session;)Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.views.types.EventTypesView.updateShowingPage()V";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Fact.hashCode()I" -> "java.util.WeakHashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.ResourceBundle$CacheKey.calculateHashCode()V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.util.EcoreUtil.getIdentification(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Fact.hashCode()I" -> "javax.swing.GroupLayout.createSpringDescription(Ljava/lang/StringBuffer;Ljavax/swing/GroupLayout$Spring;Ljava/lang/String;I)V";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ui.internal.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.hashCode([Ljava/lang/Comparable;Ljava/lang/Comparable;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Expression.hashCode([Lorg/eclipse/equinox/internal/p2/metadata/expression/Expression;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.ecf.core.identity.StringID.namespaceHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode([Lorg/eclipse/core/resources/IBuildConfiguration;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.databinding.observable.map.MapDiff$AbstractMapEntry.hash(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.commands.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.databinding.BindingStatus.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.http.util.LangUtils.hashCode(ILjava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.expressions.EqualsExpression.computeHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.expressions.Expression.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.hashCode(Ljava/net/URL;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.Objects.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "javax.security.auth.Subject.getCredHashCode(Ljava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "java.util.EnumMap.entryHashCode(I)I";
	"net.mooctest.Fact.hashCode()I" -> "java.nio.file.attribute.AclEntry.hash(ILjava/lang/Object;)I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.EClassImpl$9.delegateHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.emf.ecore.impl.EOperationImpl$1.delegateHashCode()I";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Fact.hashCode()I" -> "org.eclipse.core.internal.utils.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Fact.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Predicate.getName()Ljava/lang/String;" -> "net.mooctest.DatalogOtherTest.testPredicate()V";
	"net.mooctest.Argument.isValue()Z" -> "net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;";
	"net.mooctest.Argument.isValue()Z" -> "net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;";
	"net.mooctest.Rule.getHead()Lnet/mooctest/Datalog;" -> "net.mooctest.DatalogOtherTest.testRule()V";
	"net.mooctest.Datalog.hashCode()I" -> "net.mooctest.DatalogTest.hashCodeTest()V";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.OrdFieldSource.<clinit>()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.ReverseOrdFieldSource.<clinit>()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread.startListenSocket()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.framework.CapabilityPermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.framework.PackagePermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.framework.AdminPermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.framework.AdaptPermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.framework.ServicePermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.service.application.ApplicationAdminPermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.log.LogPermission.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.awt.datatransfer.DataFlavor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.databinding.property.SimplePropertyEvent.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.awt.font.ImageGraphicAttribute.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.awt.font.ShapeGraphicAttribute.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.awt.font.TextLine.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.AbstractSet.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.AbstractList.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.AbstractEList.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.http.impl.client.cache.ResourceReference.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.security.spec.EllipticCurve.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.sql.DriverInfo.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.AbstractMap$SimpleEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.AbstractMap$SimpleImmutableEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Collections$ReverseComparator2.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Calendar.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$Node.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.naming.RefAddr.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.naming.directory.BasicAttribute.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.naming.directory.BasicAttributes.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.text.StyleContext$SmallAttributeSet.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.tree.TreePath.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.CopyOnWriteArrayList.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.net.Proxy.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.awt.font.FontRenderContext.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.TreeMap$Entry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap$KeySetView.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.invoke.MethodType.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.reflect.Parameter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.security.AccessControlContext.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.common.unit.LinearUnit.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.resources.mapping.ResourceMapping.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.resources.Resource.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.resources.Marker.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.resources.BuildConfiguration.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.resources.mapping.ShallowContainer.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.core.DefaultTreeNode.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.search.RecipientStringTerm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.search.AddressTerm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.search.RecipientTerm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.search.OrTerm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.search.NotTerm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.search.AndTerm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.viewers.DecorationOverlayIcon.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.resource.DerivedImageDescriptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.resource.FileImageDescriptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.ui.dial.DialDevice.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.action.ActionContributionItem.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.ui.misc.MCToolBarManager$ToolbarItem.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.ui.model.fields.Row.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.util.AttributeSource.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.index.IndexCommit.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.index.SegmentInfo.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.ConstantScoreQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.FilteredQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.MultiTermQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.NumericRangeQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.NGramPhraseQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.CustomScoreQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.ValueSourceQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.spans.SpanOrQuery.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.CachingSpanFilter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.CachingWrapperFilter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.FieldCacheRangeFilter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.FieldCacheImpl$Entry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.SortField.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.payloads.AveragePayloadFunction.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.payloads.MaxPayloadFunction.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.payloads.MinPayloadFunction.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.util.fst.PairOutputs$Pair.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.databinding.validation.ValidationStatus.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.databinding.observable.DecoratingObservable.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.databinding.observable.value.ValueDiff.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$4.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.identity.IdentitySet.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.SetDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapDelegatingValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.property.value.MapSimpleValueObservableMap$MapEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.Pair.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentityMap$4.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.IdentitySet.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.expressions.Property.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.jobs.Semaphore.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.jobs.ObjectMap.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.resources.FileInfoMatcherDescription.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.resources.ProjectScope.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.resources.LinkDescription.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.utils.ObjectMap.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ecf.core.util.Proxy.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.URI$Fragment.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler$EClassFeatureNamePair.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLOptionsImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup$FeatureClassifierPair.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$EStoreImpl$Entry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.runtime.QualifiedName.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionedId.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.p2.metadata.VersionRange.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Unary.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.MatchExpression.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.UnaryCollectionFilter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Member.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.CollectionFilter.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.ContextExpression.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.LambdaExpression.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Not.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Condition.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.p2.operations.Update.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.preferences.AbstractScope.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.ExtensionRegistry$ListenerInfo.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableHelpResource.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.help.internal.workingset.AdaptableTocsArray.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.util.component.Container$Relationship.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$4.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementSet.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.link.LinkedPosition.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.link.ProposalPosition.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.contentassist.ContextInformationPopup$ContextFrame.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.TextSelection.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.viewers.TreeSelection.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.viewers.ViewerRow.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.osgi.framework.ServicePermission$Properties$Entry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ServiceReferenceImpl.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.views.properties.PropertyShowInContext.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.DefaultSaveable.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.Semaphore.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.AggregateWorkingSet.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.EditorElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.WizardElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.quickaccess.ViewElement.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.part.MultiEditorInput.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.sat4j.core.ReadOnlyVec.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.sat4j.core.ReadOnlyVecInt.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.sat4j.core.Vec.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.sat4j.pb.ObjectiveFunction.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.sat4j.pb.tools.WeightedObject.hashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.Object.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.event.TreeModelEvent.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.text.html.OptionListModel.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.tree.DefaultTreeSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.DefaultListSelectionModel.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "java.awt.image.BufferedImage.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.BranchLabel.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.director.Projector$AbstractVariable.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.util.ssl.SslContextFactory.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.Server.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.io.AbstractConnection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.io.nio.SelectChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.ResourceCache.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSession.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.Request.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.DocumentRewriteSession.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.PartSite.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable$EntrySet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap$5.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.BasicEMap.hashOf(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToStringMapImpl.getHash()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.getHash()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.change.impl.EObjectToChangesMapEntryImpl.getHash()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.DynamicEObjectImpl$BasicEMapEntry.getHash()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl.getHash()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container$Dynamic$BasicEMapEntry.getHash()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.WeakInterningHashSet.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Arrays.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.HashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.storage.bundlefile.BundleFile.getResourceURL(Ljava/lang/String;Lorg/eclipse/osgi/container/Module;I)Ljava/net/URL;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.runtime.Path.computeHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getEntry(Ljava/lang/String;)Ljava/net/URL;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.core.internal.di.Requestor.<init>(Ljava/lang/reflect/AnnotatedElement;Lorg/eclipse/e4/core/di/IInjector;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Ljava/lang/Object;Z)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.framework.util.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.viewers.CustomHashtable.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.viewers.TreePath.hashCode(Lorg/eclipse/jface/viewers/IElementComparer;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.URI$LazyFragmentInitializer.clear()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.Pool$ObjectAccessUnit.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.hashCode(Ljava/lang/String;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Formatter$FormatSpecifier.printHashCode(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.common.util.URI.rawAppendFragment(Ljava/lang/CharSequence;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.plaf.nimbus.ImageCache.hash(Ljava/awt/GraphicsConfiguration;II[Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Arrays.deepHashCode([Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.reflect.Proxy$Key1.<init>(Ljava/lang/Class;)V";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.reflect.Proxy$Key2.<init>(Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Datalog.hashCode()I" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Hashtable.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight.scorer(Lorg/apache/lucene/index/IndexReader;ZZ)Lorg/apache/lucene/search/Scorer;";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.TermQuery$TermWeight$1.add(ILorg/apache/lucene/index/IndexReader;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.parseURL(Ljava/net/URL;Ljava/lang/String;II)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.RegistryIndexElement.getKeyHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.Contribution.getKeyHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerQueueNode.setEvent(Lorg/eclipse/equinox/internal/util/timer/TimerListener;IIJJILjava/lang/String;Ljava/security/AccessControlContext;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.registry.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.http.servlet.internal.ProxyContext$ContextAttributes.<init>(Lorg/eclipse/equinox/http/servlet/internal/ProxyContext;Lorg/osgi/service/http/HttpContext;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread.<init>(Lorg/eclipse/jetty/server/AsyncNCSARequestLog;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setClassName(Ljava/lang/String;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.servlet.Holder.setHeldClass(Ljava/lang/Class;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(Ljavax/servlet/http/HttpServletRequest;J)Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.<init>(Lorg/eclipse/core/internal/runtime/ReferenceHashSet;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.utils.Cache$Entry.getKeyHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.utils.KeyedHashSet.keyHash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createWidget(Lorg/eclipse/e4/ui/model/application/ui/MUIElement;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.codegen.ObjectCache.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jetty.io.AbstractBuffer.toDetailString()Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getWindowId(Lorg/eclipse/ui/IWorkbenchWindow;)Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.misc.UIListenerLogging.getPageId(Lorg/eclipse/ui/IWorkbenchPage;)Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.calcHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.calcHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.projection.ProjectionDocument.<init>(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.PaintManager$PositionManager.<init>()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.TextViewer$ViewerState.connect(Lorg/eclipse/jface/text/IDocument;)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.statushandlers.LabelProviderWrapper.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getIndex(Lorg/eclipse/emf/ecore/EClass;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.resetPerspectiveModel(Lorg/eclipse/e4/ui/model/application/ui/advanced/MPerspective;Lorg/eclipse/e4/ui/model/application/ui/basic/MWindow;Z)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.part.EditorInputTransfer.<clinit>()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.presentation.PresentationReconciler.<init>()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.text.TextViewer.<init>()V";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.hash(ILjava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.mail.internet.UniqueValue.getUniqueMessageIDValue(Ljavax/mail/Session;)Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "com.jrockit.mc.flightrecorder.ui.views.types.EventTypesView.updateShowingPage()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.WeakHashMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.ResourceBundle$CacheKey.calculateHashCode()V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.util.EcoreUtil.getIdentification(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Datalog.hashCode()I" -> "javax.swing.GroupLayout.createSpringDescription(Ljava/lang/StringBuffer;Ljavax/swing/GroupLayout$Spring;Ljava/lang/String;I)V";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ui.internal.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.hash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jface.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.hashCode([Ljava/lang/Comparable;Ljava/lang/Comparable;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.metadata.expression.Expression.hashCode([Lorg/eclipse/equinox/internal/p2/metadata/expression/Expression;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.ecf.core.identity.StringID.namespaceHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.e4.ui.internal.workbench.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.events.BuildContext.hashCode([Lorg/eclipse/core/resources/IBuildConfiguration;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.databinding.observable.map.MapDiff$AbstractMapEntry.hash(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.commands.util.Util.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.databinding.BindingStatus.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.jdt.internal.compiler.util.Util.hashCode([Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.http.util.LangUtils.hashCode(ILjava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.expressions.EqualsExpression.computeHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.expressions.Expression.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.osgi.storage.url.BundleResourceHandler.hashCode(Ljava/net/URL;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.Objects.hashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "javax.security.auth.Subject.getCredHashCode(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.util.EnumMap.entryHashCode(I)I";
	"net.mooctest.Datalog.hashCode()I" -> "java.nio.file.attribute.AclEntry.hash(ILjava/lang/Object;)I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.EClassImpl$9.delegateHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.emf.ecore.impl.EOperationImpl$1.delegateHashCode()I";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Datalog.hashCode()I" -> "org.eclipse.core.internal.utils.UniversalUniqueIdentifier.computeNodeAddress()[B";
	"net.mooctest.Datalog.hashCode()I" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V";
	"net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;";
	"net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "net.mooctest.Rule.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "net.mooctest.DatalogTest1.testDatalog2()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Rule.getBody()[Lnet/mooctest/Datalog;" -> "net.mooctest.DatalogOtherTest.testRule()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "net.mooctest.Argument.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "net.mooctest.Fact.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "net.mooctest.DatalogOtherTest.testValue()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z" -> "net.mooctest.DatalogTest4.testProgram()V";
	"net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z" -> "net.mooctest.DatalogTest5.blow1()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "net.mooctest.Argument.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "net.mooctest.DatalogTest2.testVariable2()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.UIDefaults$TextAndMnemonicHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTML$UnknownTag.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.LDAPFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormat.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.osgi.framework.FrameworkUtil$FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.FilterImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Objects.toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository$ZippedFolderOutputStream.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$SetFromMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.ConcurrentHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$AsLIFOQueue.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.WeakInterningHashSet$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Hashtable.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.security.cert.PKIXParameters.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.security.cert.TrustAnchor.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.security.cert.X509CertSelector.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap$CheckedEntrySet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$CheckedMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$SynchronizedMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Collections$UnmodifiableMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Formatter.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.stream.SpinedBuffer.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.naming.directory.ModificationItem.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.tree.DefaultMutableTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.parser.ContentModel.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.TimerQueue.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.security.Provider$Service.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Hashtable$Entry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.lang.invoke.MemberName.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.HandlerProxy.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.Command.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.commands.CommandStateProxy.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.BoundedList.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.DefaultTreeNode.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.flr.internal.FlightRecorderService.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationTrigger.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.TestExpression.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.expressions.AndExpression.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.StructuredRowSelection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.TagLibraryInfoImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.auth.AuthOption.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.client.fluent.Request.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.entity.mime.Header.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.message.HeaderGroup.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.protocol.BasicHttpContext.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.LimitTokenCountAnalyzer.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.document.Document.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.search.BooleanScorer.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.search.FieldCacheRangeFilter.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.AbstractOperation.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Status.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.MultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanSetPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.DecoratingObservableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.AbstractObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.ObservableSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ObservableList.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanValuePropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanListPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.PojoMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.beans.BeanMapPropertyDecorator.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiff.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.set.SetDiff.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.map.DecoratingObservableMap$BackedCollection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.list.ListDiffEntry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.observable.value.ValueDiff.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ExportedPreferences.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSPropertyListImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ecf.core.status.SerializableMultiStatus.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicDiagnostic$StatusWrapper.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.BasicEMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$2.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$BasicEmptyUnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$SynchronizedInterningSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.ECollections$UnmodifiableEList.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.URI$Fragment.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.xml.impl.TagImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.app.PrettyQuery.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.InstallableUnitPropertyOperand.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.TouchpointManager$TouchpointEntry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CollectionResult.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.ResolvedInstallableUnit.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.operations.Update.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.ImmutableMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.KeyedHashSet.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.registry.ReadWriteMonitor.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler$Chain.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletMapping.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.MultiMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.Slf4jLog.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.log.JettyAwareLogger.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Constraint.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.AttributesMap.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.StructuredSelection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.Binding.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverConstraint.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionSupplier.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.osgi.service.event.EventProperties.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl$UsedBlames.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedCapability.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.WrappedResource.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$RequiredBundleImpl.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateVariableType.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.AdaptableList.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.WidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.PulldownDelegateWidgetProxy.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ViewIntroAdapterSite.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.core.ConstrGroup.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVec.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.core.ReadOnlyVecInt.toString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EFactoryImpl.convertToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDurationToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGMonthDayToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertGYearMonthToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertLongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonNegativeIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertNonPositiveIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertTimeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedIntObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertUnsignedShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.get(Lorg/eclipse/emf/ecore/EStructuralFeature;Z)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.normalize(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.TriggerRule.compareTo(Ljava/lang/Object;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.CharArrayMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreUtil.resolve(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/resource/ResourceSet;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.MimeTypes.<clinit>()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.StringMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.databinding.conversion.StringToDateConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ActivityPersistanceHelper$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.browser.views.JVMBrowserView$1.run()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Activator.run()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Console.run()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.WorkThread.run()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.databinding.util.Policy$1.log(Lorg/eclipse/core/runtime/IStatus;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JComponent.putClientProperty(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.Request.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.log.ExtendedLogReaderServiceFactory.addLogListener(Lorg/osgi/service/log/LogListener;Lorg/eclipse/equinox/log/LogFilter;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.setDelayedInput(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolutionError(Lorg/eclipse/e4/core/internal/di/Requestor;I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.QLParser.parseLambdaDefinition()Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.appendValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.toLDAPString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Binary.appendLDAPValue(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.parser.ExpressionParser.getVariableOrRootMember(Ljava/lang/String;)Lorg/eclipse/equinox/p2/metadata/expression/IExpression;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.persistence.XMLWriter.attribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeInstallableUnit(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toURL(Ljava/net/URI;)Ljava/net/URL;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.net.URI.decode(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.io.MetadataWriter.writeRequirement(Lorg/eclipse/equinox/p2/metadata/IRequirement;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.toUnencodedString(Ljava/net/URI;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.update.ConfigurationWriter.toString([Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooOldException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.index.IndexFormatTooNewException.<init>(Lorg/apache/lucene/store/DataInput;III)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.store.MMapDirectory$MMapIndexInput.<init>(Lorg/apache/lucene/store/MMapDirectory;Ljava/lang/String;Ljava/io/RandomAccessFile;I)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getAttribute(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.EMFPlugin$InternalHelper.log(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerWiring.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.getManager()Lorg/eclipse/osgi/framework/eventmgr/EventManager;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getUsesTimeout([Ljava/util/Dictionary;)J";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.getMultipleSuppliersLimit([Ljava/util/Dictionary;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Formatter$FormatSpecifier.printString(Ljava/lang/Object;Ljava/util/Locale;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.commons.logging.LogFactory.logHierarchy(Ljava/lang/String;Ljava/lang/ClassLoader;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.commons.logging.impl.LogFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpParser.parseNext()I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toLong(Lorg/eclipse/jetty/io/Buffer;)J";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.parsedHeader(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.to8859_1_String(Lorg/eclipse/jetty/io/Buffer;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.NCSARequestLog.log(Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.BufferUtil.toInt(Lorg/eclipse/jetty/io/Buffer;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.PlatformURLMetaConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.Path.toPortableString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.filesystem.FileCache.cache(Lorg/eclipse/core/filesystem/IFileStore;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/io/File;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.PrefsMessages.message(Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.removedService(Lorg/osgi/framework/ServiceReference;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.LabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.NodesView$ViewLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.resource.DeviceResourceException.<init>(Lorg/eclipse/jface/resource/DeviceResourceDescriptor;Ljava/lang/Throwable;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.boot.PlatformURLConnection.debug(Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.ResourceUtility.imageDescriptorFromURI(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/jface/resource/ImageDescriptor;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.CaptionField.formatObject(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.model.fields.Field.defaultFormat(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.util.ResourceLocator.openFromZip(Lorg/osgi/framework/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.container.InternalUtils.getPermisionName(Lorg/osgi/framework/wiring/BundleCapability;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.getBranding()Lorg/eclipse/equinox/internal/app/IBranding;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/InputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.preferences.EclipsePreferences.toDeepDebugString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleContainer.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject.dynamicSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;ILjava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.setResource(Lorg/eclipse/emf/ecore/resource/Resource;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createInputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/InputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext.registerStaticAttributeKey(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.ImageView.setPropertiesFromAttributes()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.getRule(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/Element;)Ljavax/swing/text/Style;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.StyleSheet.createResolvedStyle(Ljava/lang/String;Ljava/util/Vector;Ljavax/swing/text/html/HTML$Tag;)Ljavax/swing/text/Style;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$LengthValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontFamily.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS$FontSize.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$BlockElement.getName()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$RunElement.getName()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.DefaultListCellRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.synth.SynthComboBoxUI$SynthComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.table.TableColumn$1.getTableCellRendererComponent(Ljavax/swing/JTable;Ljava/lang/Object;ZZII)Ljava/awt/Component;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.StyleContext$NamedStyle.getName()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.MinimalHTMLWriter.writeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeAdditionalComments()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.convertToHTML32(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.createFontAttribute(Ljavax/swing/text/html/CSS$Attribute;Ljavax/swing/text/AttributeSet;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLWriter.writeStyle(Ljava/lang/String;Ljavax/swing/text/Style;Z)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.CSS.getFont(Ljavax/swing/text/StyleContext;Ljavax/swing/text/AttributeSet;ILjavax/swing/text/html/StyleSheet;)Ljava/awt/Font;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.BlockView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.TableView.calculateMinorAxisRequirements(ILjavax/swing/SizeRequirements;)Ljavax/swing/SizeRequirements;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.NumberFormatter.toggleSign(Z)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.InternationalFormatter.stringToValue(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.MaskFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.DefaultFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.colorchooser.ValueFormatter.valueToString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JSpinner$ListEditor$ListFormatter$Filter.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.SpinnerListModel.findNextMatch(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.text.html.HTMLDocument$HTMLReader$ConvertAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.get(Ljavax/swing/plaf/synth/SynthContext;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle.getExtendedState(Ljavax/swing/plaf/synth/SynthContext;Ljavax/swing/plaf/nimbus/NimbusStyle$Values;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.nimbus.NimbusStyle$CacheKey.init(Ljava/lang/Object;I)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.DefaultCellEditor$1.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JTree.convertValueToText(Ljava/lang/Object;ZZZIZ)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicFileChooserUI$FileTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicTableUI$TableTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicListUI$ListTransferHandler.createTransferable(Ljavax/swing/JComponent;)Ljava/awt/datatransfer/Transferable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.RowFilter$Entry.getStringValue(I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.DefaultRowSorter$ModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.table.TableRowSorter$TableRowSorterModelWrapper.getStringValueAt(II)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JTable$1.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableModel.getColumnName(I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Ljava/awt/Container;[Ljava/lang/Object;I)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getMessage()Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Ljava/awt/Container;Ljava/awt/GridBagConstraints;Ljava/lang/Object;IZ)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.MRIMetaDataToolkit.getColor(Lcom/jrockit/mc/rjmx/subscription/IMRIMetaDataProvider;)Ljava/awt/Color;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommand.<init>(Lcom/jrockit/mc/rjmx/services/internal/HotSpot24DiagnosticCommandService;Ljavax/management/Descriptor;Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractImpact(Ljavax/management/Descriptor;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService$DiagnosticCommandParameter.<init>(Ljavax/management/Descriptor;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractDescription(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.HotSpot24DiagnosticCommandService.extractType(Ljavax/management/Descriptor;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ConnectionToolkit.getVMName(Lcom/jrockit/mc/rjmx/IConnectionHandle;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.JVMSupportToolkit.isFlightRecorderDisabled(Lcom/jrockit/mc/rjmx/IConnectionHandle;Z)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.io.ObjectOutputStream.writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.components.graph.TreeNodeWrapper.getName()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod([Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Ljava/lang/Object;)Ljava/lang/IndexOutOfBoundsException;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.lang.invoke.InvokerBytecodeGenerator.debugString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.describeValue(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.attachFragment0(Lorg/eclipse/osgi/internal/module/ResolverBundle;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveOSGiEE(Lorg/eclipse/osgi/internal/module/ResolverBundle;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverBundle.constraintsConflict(Lorg/eclipse/osgi/service/resolver/BundleDescription;[Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;[Lorg/eclipse/osgi/service/resolver/BundleSpecification;[Lorg/eclipse/osgi/service/resolver/GenericSpecification;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.resolver.VersionConstraintImpl.escapeValue(Ljava/lang/Object;Z)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(Lorg/eclipse/osgi/internal/module/ResolverBundle;Ljava/util/List;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.VersionHashMap.<init>(Lorg/eclipse/osgi/internal/module/ResolverImpl;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleDatabase$Persistence.writeMap(Ljava/util/Map;Ljava/io/DataOutputStream;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.toString(Lorg/eclipse/osgi/container/Module;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.getLocation()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.ensureUNCPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.getName(Lorg/osgi/framework/Bundle;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.getService()Lorg/osgi/service/log/LogService;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.buildDebugString(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.impl.tpt.timer.TimerImpl.<init>(Lorg/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.Activator$3.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.jasper.compiler.JspRuntimeContext.<init>(Ljavax/servlet/ServletContext;Lorg/apache/jasper/Options;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.addingService(Lorg/osgi/framework/ServiceReference;)Ljava/util/Set;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.osgi.util.tracker.ServiceTracker.<init>(Lorg/osgi/framework/BundleContext;Lorg/osgi/framework/ServiceReference;Lorg/osgi/util/tracker/ServiceTrackerCustomizer;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.writeTimestamps()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.BrowserCompatSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.NetscapeDraftSpec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2109Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.cookie.RFC2965Spec.parse(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader()Lorg/apache/http/HttpResponse;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.conn.DefaultClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.Arrays.deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.util.VersionInfo.fromMap(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.E4Workbench.initializeContext(Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/e4/ui/model/application/ui/MContext;)Lorg/eclipse/e4/core/contexts/IEclipseContext;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper.formatMap(Ljava/util/Map;ZZ)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRequest.getResult()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.runtime.URIUtil.removeFileExtension(Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getContextString(Lorg/eclipse/equinox/internal/p2/engine/Phase;Lorg/eclipse/equinox/internal/p2/engine/Operand;Lorg/eclipse/equinox/p2/engine/spi/ProvisioningAction;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallFeatureAction.uninstallFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.AddSourceBundleAction.addSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallBundleAction.installBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.RemoveSourceBundleAction.removeSourceBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.InstallFeatureAction.installFeature(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions.UninstallBundleAction.uninstallBundle(Ljava/util/Map;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ParameterizedProvisioningAction.processVariables(Ljava/lang/String;Ljava/util/Map;Z)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.touchpoint.eclipse.EclipseTouchpoint.prepareIU(Lorg/eclipse/equinox/p2/core/IProvisioningAgent;Lorg/eclipse/equinox/p2/engine/IProfile;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.SimplePlanner.generateProvisioningPlan(Ljava/util/Collection;Ljava/util/Collection;Lorg/eclipse/equinox/internal/p2/director/ProfileChangeRequest;Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;Lorg/eclipse/equinox/p2/engine/ProvisioningContext;)Lorg/eclipse/equinox/p2/engine/IProvisioningPlan;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.printSolution(Ljava/util/Collection;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.encode(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;[Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/query/IQueryable;Ljava/util/Collection;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.getUserReadableName(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation$PatchedHardRequirement.toStatus()Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.tools.TextOutputTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.tools.DotSearchTracing.node(I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getNonGreedyVariable(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.createAtMostOne([Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector.getAbstractVariable(Lorg/eclipse/equinox/p2/metadata/IRequirement;Z)Lorg/eclipse/equinox/internal/p2/director/Projector$AbstractVariable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.getCurrentOperandId()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandEnd(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.ActionManager.getTouchpointQualifiedActionId(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/ITouchpointType;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.EngineSession.debugOperandStart(Lorg/eclipse/equinox/internal/p2/engine/Operand;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatOperands([Lorg/eclipse/equinox/internal/p2/engine/Operand;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.DebugHelper.formatArray(Ljava/util/Collection;ZZ)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.reconciler.dropins.Activator.readTimestamps()Ljava/util/Properties;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpsConnector(Ljava/util/Dictionary;)Lorg/eclipse/jetty/server/Connector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.http.jetty.internal.HttpServerManager.createHttpContext(Ljava/util/Dictionary;)Lorg/eclipse/jetty/servlet/ServletContextHandler;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.writeState(Ljava/lang/String;Lorg/eclipse/jetty/util/component/LifeCycle;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.Scanner.reportBulkChanges(Ljava/util/List;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(Ljava/lang/Appendable;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.IPAccessHandler.dump()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logWarning(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logError(Ljava/lang/String;Ljava/lang/Throwable;Lorg/eclipse/equinox/internal/ds/Reference;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotFoundError(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.logMethodNotVisible(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;[Ljava/lang/Class;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.activate(Lorg/osgi/framework/Bundle;Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.activate(Ljava/lang/Object;Lorg/osgi/service/component/ComponentContext;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.resolveEligible()Ljava/util/Vector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.ComponentStorage.parseXMLDeclaration(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Ljava/util/Vector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.storage.file.FileStorage.getPath([Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.readRealObject(BLjava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.writeObject(Ljava/io/OutputStream;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.WorkspaceDescriptionReader.read(Lorg/w3c/dom/Node;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.resources.ModelObjectWriter.write(Ljava/lang/Object;Lorg/eclipse/core/internal/resources/XMLWriter;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.FactoryReg.ungetService(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.addSetCookie(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;ZZI)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.ViewerComparator.getLabel(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.decorators.LightweightActionDescriptor.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.WorkbenchAdapter.getLabel(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.addActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.removeActiveContext(Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.contexts.ContextManager.setActiveContextIds(Ljava/util/Set;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.bindings.BindingManager.computeBindings(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getIconURI(Lorg/eclipse/jface/resource/ImageDescriptor;Lorg/eclipse/e4/core/contexts/IEclipseContext;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.NamedHandleObjectWithState.getName()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuHelper.getId(Lorg/eclipse/core/runtime/IConfigurationElement;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeModel.getCategory()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getUniqueKey()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.templates.TemplateProposal.getCategory()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.link.LinkedModeUI.getCategory()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.createRootAdvice()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.publisher.eclipse.BrandingIron.modifyInfoPListFile(Lorg/eclipse/equinox/internal/p2/publisher/eclipse/ExecutablesDescriptor;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.internal.JMXRMISystemPropertiesProvider.setup()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.HotSpotLiveSetAttribute.getMemoryPoolUsed(Ljavax/management/openmbean/CompositeData;)J";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractPropertySyntheticAttribute.hasResolvedAttribute(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.BasicPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourceMappingPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.toString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.propertytester.ResourcePropertyTester.testProperty(Lorg/eclipse/core/resources/IResource;Z[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsICountable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/ICountable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.Expressions.getAsIIterable(Ljava/lang/Object;Lorg/eclipse/core/expressions/Expression;)Lorg/eclipse/core/expressions/IIterable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getConnectionInformation()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.system.ServerInformationModel.getApplicationArguments()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.DefaultVirtualMachineService.getPID()I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute$MapAttributeChild.<init>(Lcom/jrockit/mc/rjmx/services/IReadOnlyAttribute;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.core.labelingrules.NamingRule.replaceConstants(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.document.NumericField.stringValue()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.store.Lock.obtain(J)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.context.ContextManager.getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/help/IContext;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSStyle()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.core.impl.dom.CSSStyleDeclarationImpl.removeProperty(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSId()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.css.swt.dom.WidgetElement.getCSSClass()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.table.DefaultTableCellRenderer.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.SwingUtilities.notifyAction(Ljavax/swing/Action;Ljavax/swing/KeyStroke;Ljava/awt/event/KeyEvent;Ljava/lang/Object;I)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JComboBox$DefaultKeySelectionManager.selectionForKey(CLjavax/swing/ComboBoxModel;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JList.getNextMatch(Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/io/InputStream;Ljava/util/Map;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.EFSURIHandlerImpl.getStore(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ArchiveURIHandlerImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl;Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.delegatedGetResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(Lorg/eclipse/emf/ecore/resource/Resource;Ljava/io/IOException;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.exists(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.views.properties.PropertySheetEntry.getValueAsString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl$Archive.<init>(Lorg/eclipse/emf/ecore/resource/impl/URIConverterImpl;Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.databinding.provisional.viewers.ViewerLabelProvider.updateLabel(Lorg/eclipse/jface/viewers/ViewerLabel;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.security.ui.storage.view.ValuesView$TableLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider.getColumnText(Ljava/lang/Object;I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.common.util.TypeHandling.getValueString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$2.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.AttributeTreeBuilder$3.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$NameLabelProvider.getDefaultText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.console.commands.CommandsTracker$CommandsTrackerCustomizer.removedService(Lorg/osgi/framework/ServiceReference;Ljava/util/Set;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.util.Util$1.displayString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.logProblem(Lorg/eclipse/jdt/core/compiler/CategorizedProblem;II[C)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.br.BrazilianStemFilter.incrementToken()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.de.GermanStemFilter.incrementToken()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.fr.FrenchStemFilter.incrementToken()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.nl.DutchStemFilter.incrementToken()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.ru.RussianStemFilter.incrementToken()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.collation.CollationKeyFilter.incrementToken()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.analysis.sinks.DateRecognizerSinkFilter.accept(Lorg/apache/lucene/util/AttributeSource;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among_b([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.tartarus.snowball.SnowballProgram.find_among([Lorg/tartarus/snowball/Among;I)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.servlet.EclipseConnector.transfer(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.passConditionalHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.sendData(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;ZLorg/eclipse/jetty/util/resource/Resource;Lorg/eclipse/jetty/http/HttpContent;Ljava/util/Enumeration;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.servlet.DefaultServlet.writeHeaders(Ljavax/servlet/http/HttpServletResponse;Lorg/eclipse/jetty/http/HttpContent;J)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache.load(Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)Lorg/eclipse/jetty/http/HttpContent;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.ResourceCache$Content.<init>(Lorg/eclipse/jetty/server/ResourceCache;Ljava/lang/String;Lorg/eclipse/jetty/util/resource/Resource;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.internal.webapp.utils.Utils.convertStreamToString(Ljava/io/InputStream;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.handler.ResourceHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$Crypt.check(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.util.security.Credential$MD5.check(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.server.AbstractHttpConnection.startRequest(Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;Lorg/eclipse/jetty/io/Buffer;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.isResolvable(Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;Ljava/util/Collection;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkCycle(Ljava/util/List;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.internal.module.ResolverImpl.checkUsesConstraints([Lorg/eclipse/osgi/internal/module/ResolverBundle;[Ljava/util/Dictionary;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.getEligible(Lorg/osgi/framework/ServiceEvent;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Vector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectStaticUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Vector;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectDynamicUnBind(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;Z)Ljava/util/Hashtable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.Resolver.selectReferencesToUpdate(Ljava/util/Vector;Lorg/osgi/framework/ServiceReference;)Ljava/util/Hashtable;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.Util.getSymbolicName(Lorg/osgi/resource/Resource;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printRequirement(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.osgi.container.ModuleResolutionReport.printCapability(Lorg/osgi/resource/Capability;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Matches.match(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator$StringCoercer.coerce(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.QueryableArray.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.engine.Profile.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.repository.URLMetadataRepository.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.query.CompoundQueryable.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.metadata.expression.Pipe$NoIndexProvider.getManagedProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewComparator.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RevertProfilePage$2.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor.updateContents(Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createEFSOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLOutputStream(Lorg/eclipse/emf/common/util/URI;)Ljava/io/OutputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.URIHandlerImpl.createOutputStream(Lorg/eclipse/emf/common/util/URI;Ljava/util/Map;)Ljava/io/OutputStream;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.services.internal.MBeanOperationsWrapper.convertImpact(Ljavax/management/MBeanOperationInfo;)Lcom/jrockit/mc/rjmx/services/IOperation$OperationImpact;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.createORupdateMKeyBinding(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingService.findMKeyBinding(Lorg/eclipse/e4/ui/model/application/commands/MBindingTable;Lorg/eclipse/jface/bindings/Binding;)Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ContributionsAnalyzer.printElement(ILorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createMenuCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MMenuElement;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.createToolBarCommandAddition(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/e4/ui/model/application/ui/menu/MToolBarElement;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectOutputStream.writeURI(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.addNamespaceDeclarations()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.getNameToValueMap()Ljava/util/Map;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.getHREF(Lorg/eclipse/emf/ecore/EObject;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.handleDanglingHREF(Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/common/util/URI;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.saveElementFeatureMap(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EStructuralFeature;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ModelAssembler.processFragment(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/util/List;Ljava/util/List;Z)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(Lorg/eclipse/emf/common/util/URI;)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.URIHelper.EMFtoPlatform(Lorg/eclipse/emf/common/util/URI;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.misc.UIListenerLogging.logPagePropertyChanged(Lorg/eclipse/ui/IWorkbenchPage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.isApplicableTo(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.notification.tab.TriggerActionSectionPart$1$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm$1.onInvocatorUpdated(Lcom/jrockit/mc/rjmx/services/IOperation;Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.ui.fields.FieldToolkit.storeSetting(Lorg/eclipse/jface/dialogs/IDialogSettings;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.celleditors.ParsingCellEditor.format(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.p2.ui.RepositoryManipulationPage$6.modify(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.save()Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.RenameDialog.textChanged(Ljava/lang/String;Z)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.LegacyHandlerService.populateSnapshot(Lorg/eclipse/core/expressions/IEvaluationContext;Lorg/eclipse/e4/core/contexts/IEclipseContext;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.write(Lorg/eclipse/jface/bindings/Scheme;[Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.keys.BindingPersistence.writeBindingToPreferences(Lorg/eclipse/ui/IMemento;Lorg/eclipse/jface/bindings/Binding;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.console.ui.tabs.memory.MemoryPoolModel.setupSubscription(Ljavax/management/ObjectName;Lcom/jrockit/mc/rjmx/subscription/IMBeanHelperService;Lcom/jrockit/mc/rjmx/subscription/ISubscriptionService;)Lcom/jrockit/mc/console/ui/tabs/memory/MemoryPoolInformation;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.viewers.DialogCellEditor$2.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.registry.EditorRegistry.saveAssociations()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ShowViewDialog.saveWidgetValues()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.invokeAsync(Ljava/util/concurrent/Callable;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.InformationControlReplacer.showInformationControl(Lorg/eclipse/swt/graphics/Rectangle;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.internal.text.revisions.RevisionPainter$RevisionHover.getHoverInfo(Lorg/eclipse/jface/text/source/ISourceViewer;I)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect()V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getResource(Ljava/lang/Object;)Lorg/eclipse/help/IHelpResource;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.help.ui.internal.views.ReusableHelpPart.getHref(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.util.ref.Log.trace([BII)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.modify(Ljava/util/Dictionary;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/felix/service/command/Function;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Reflective.coerce(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/Class;Ljava/lang/Object;[I)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convert(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertBundle(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.convertServiceReference(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.escape()C";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.activator.EventAdminListener.beforeExecute(Lorg/apache/felix/service/command/CommandSession;Ljava/lang/CharSequence;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.app.EclipseAppHandle.run(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.internal.workbench.swt.WorkbenchStatusReporter.openDialog(Lorg/eclipse/core/runtime/IStatus;Z[Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.commands.internal.executables.ShowVersion.dumpProperties(Ljava/util/Properties;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseCachingPolicy.from1_0Origin(Lorg/apache/http/HttpResponse;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.ResponseProtocolCompliance.identityIsNotUsedInContentEncoding(Lorg/apache/http/HttpResponse;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.CachedResponseSuitabilityChecker.etagValidatorMatches(Lorg/apache/http/HttpRequest;Lorg/apache/http/client/cache/HttpCacheEntry;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.http.impl.client.cache.RequestProtocolCompliance.buildHeaderFromElements(Ljava/util/List;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.format(Ljava/lang/Object;ILorg/apache/felix/service/command/Converter;)Ljava/lang/CharSequence;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.CommandSessionImpl.inspect(Ljava/lang/Object;)Ljava/lang/CharSequence;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.shell.Converters.print(Lorg/osgi/framework/ServiceReference;)Ljava/lang/CharSequence;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.ui.operations.ExecuteOperationForm.createInvocationResult(Ljava/lang/String;Lorg/eclipse/swt/graphics/Image;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.ILauncherMode$2.displayResult(Lorg/sat4j/specs/ISolver;Lorg/sat4j/specs/IProblem;Lorg/sat4j/specs/ILogAble;Ljava/io/PrintWriter;Lorg/sat4j/reader/Reader;JZ)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Projector$ExplanationJob.run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.flightrecorder.ui.FlightRecordingEditor$ComponentVerifier.<init>(Lcom/jrockit/mc/flightrecorder/FlightRecording;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.alert.NotificationUIToolkit.prettyPrint(Ljava/io/StringWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;Ljava/lang/String;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeStatement(Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Token.source()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.executeMethod(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Closure.eval(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expand()Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.felix.gogo.runtime.Tokenizer.expandVar()Ljava/lang/Object;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorStringMatch.triggerOn(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "com.jrockit.mc.rjmx.triggers.internal.NotificationToolkit.prettyPrint(Ljava/io/PrintWriter;Lcom/jrockit/mc/rjmx/triggers/TriggerEvent;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.concurrent.future.ThreadsExecutor.createThreadName(Lorg/eclipse/equinox/concurrent/future/IProgressRunnable;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.databinding.viewers.ObservableMapCellLabelProvider.update(Lorg/eclipse/jface/viewers/ViewerCell;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.localstore.FileSystemResourceManager.propertyChange(Lorg/eclipse/core/runtime/Preferences$PropertyChangeEvent;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.core.internal.di.InjectorImpl.uninject(Ljava/lang/Object;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "java.util.logging.XMLFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields.qualityList(Ljava/util/Enumeration;)Ljava/util/List;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.handlers.WidgetMethodHandler.setInitializationData(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.ui.viewers.IUDragAdapter.dragSetData(Lorg/eclipse/swt/dnd/DragSourceEvent;)V";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jface.text.DocumentCommand.getCategory()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.internal.ObjectActionContributor.testName(Ljava/lang/Object;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage()Lorg/eclipse/emf/ecore/EPackage;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.director.Explanation.compareTo(Lorg/eclipse/equinox/internal/p2/director/Explanation;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.commands.util.Util.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.ui.model.ContributionComparator.getComparisonString(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.p2.console.ProvCommandProvider$1.compare(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)I";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.append(Ljava/lang/CharSequence;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.commons.codec.language.bm.Rule$Phoneme.join(Lorg/apache/commons/codec/language/bm/Rule$Phoneme;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingResourceLocator.getBaseURL()Ljava/net/URL;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.util.EcoreValidator.isWellFormedURI(Ljava/lang/String;)Z";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDateTime(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertDate(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.type.impl.XMLTypeFactoryImpl.convertAnySimpleType(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.xml.namespace.impl.XMLNamespaceFactoryImpl.convertSpaceTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigDecimalToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBigIntegerToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEBooleanObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEByteObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertECharacterObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEDoubleObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEFloatObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEIntegerObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertELongObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.impl.EcoreFactoryImpl.convertEShortObjectToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.ecore.change.impl.ChangeFactoryImpl.convertChangeKindToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.MenuFactoryImpl.convertItemTypeToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.e4.ui.model.application.ui.impl.UiFactoryImpl.convertSideValueToString(Lorg/eclipse/emf/ecore/EDataType;Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.el.MapELResolver.getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.jetty.http.HttpFields$3.nextElement()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.sat4j.minisat.core.Solver.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.osgi.dto.DTO.appendValue(Ljava/lang/StringBuilder;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.equinox.internal.ds.SCRUtil.getStringRepresentation(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.internal.expressions.util.LRUCache.toStringContents()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.core.commands.operations.ObjectUndoContext.getLabel()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.search.ConstantScoreQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.apache.lucene.search.NumericRangeQuery.toString(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$AutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.GroupLayout$ContainerAutoPreferredGapSpring.getMatchDescription()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.security.auth.Subject.toString(Z)Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "org.eclipse.emf.common.util.DelegatingEList.delegateToString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JComponent.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JDesktopPane.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JEditorPane.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.AbstractButton.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JOptionPane.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JLabel.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JComboBox.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JInternalFrame.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.swing.JScrollPane.paramString()Ljava/lang/String;";
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "javax.security.auth.Policy.isCustomPolicySet(Lsun/security/util/Debug;)Z";
	"net.mooctest.Substitution.<init>(Ljava/util/LinkedList;Ljava/util/LinkedList;)V" -> "net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;";
	"net.mooctest.Argument.<init>(Lnet/mooctest/Value;Lnet/mooctest/Variable;Z)V" -> "net.mooctest.Argument.variable(Lnet/mooctest/Variable;)Lnet/mooctest/Argument;";
	"net.mooctest.Argument.<init>(Lnet/mooctest/Value;Lnet/mooctest/Variable;Z)V" -> "net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;";
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "net.mooctest.DatalogTest4.<init>()V";
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "net.mooctest.DatalogOtherTest.testRule()V";
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "net.mooctest.DatalogOtherTest.<init>()V";
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "net.mooctest.DatalogTest5.<init>()V";
	"net.mooctest.Substitution.extendAll(Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "net.mooctest.DatalogOtherTest.testSubstitution()V";
	"net.mooctest.Substitution.extendAll(Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "net.mooctest.DatalogTest3.testFact()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.http.PathMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.CapabilityPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.PackagePermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdminPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.AdaptPermission.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.MRIValueEvent.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.WeakGroupedListenerList$WeakComputationReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableWeakReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$HashableSoftReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.http.impl.client.cache.ResourceReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.nio.file.attribute.AclEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.spec.EllipticCurve.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$EntryIterator$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Calendar.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$MapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.naming.RefAddr.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttributes.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.tree.TreePath.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.net.Proxy.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.events.socket.AbstractSocketWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Method.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.lang.reflect.Parameter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.ImpreciseScaleFactor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.LinearUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.designelement.AbstractElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.notifications.MBeanNotificationLogInspector$NotificationValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.mapping.ResourceMapping.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.editor.ConsoleEditorInput.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.core.DefaultTreeNode.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientStringTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.RecipientTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.OrTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.NotTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.mail.search.AndTerm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.OpenTypeConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.StringConvertibleValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.ServiceEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.AbstractAttributeSubscription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.OverlayImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.ImageImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FileImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.ImageDataImageDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialDevice.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.NotExpression.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ActionContributionItem.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.Row.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.batik.css.engine.sac.CSSConditionalSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.logging.impl.WeakHashtable$Referenced.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.Token$TokenAttributeFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.index.IndexCommit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.ConstantScoreQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FilteredQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.NumericRangeQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanNearPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanPayloadCheckQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.spans.SpanOrQuery.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingSpanFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.CachingWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheRangeFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.MultiTermQueryWrapperFilter.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.FieldCacheImpl$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.search.SortField.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.fst.PairOutputs$Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.validation.ValidationStatus.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.DefaultDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.databinding.swt.SWTObservables$DisplayRealm.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Pair.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.Property.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.resources.FileInfoMatcherDescription.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.events.BuildContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.ValueComputation.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$Subscriber.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.Requestor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractDescendantSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractSiblingSelector.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.AbstractCombinatorCondition.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.sac.CSSConditionalSelectorImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.resources.ResourceByDefinitionKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientSecureProtocolSocketFactory.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$BasicFeatureMapEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.FeatureMapUtil$EntryImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.advanced.StructuredTextEnvironment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet$StrongReference.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.QualifiedName.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRCommandProvider$ComponentRef.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.repository.artifact.spi.ArtifactDescriptor.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.OSGiVersion.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionFormatParser$Fragment.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.InstallableUnit.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.Literal.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequirementChange.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ProvidedCapability.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.TouchpointType.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.ArtifactKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.InstalledIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.AbstractScope.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$HandlerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.ui.SecurityStatusControl$IconState.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.search.HelpCriteriaContentProvider$CriterionValue.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver$Candidate.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.io.View.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredSelection.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.ViewerRow.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$BundleWireImpl.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.ServicePermission$Properties$Entry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.graphics.TextStyle.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$ControlDecorator.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager$Message.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyShowInContext.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.DefaultSaveable.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferenceHistoryEntry.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.LegacyCommandListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.CategorizedActivity.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.LegacySchemeListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.WorkbenchKeyboard.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.LegacyContextListenerWrapper.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.EditorElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PreferenceElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PerspectiveElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.PropertiesElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.WizardElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.ViewElement.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.part.DrillFrame.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.ReadOnlyVecInt.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.sat4j.core.Vec.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.ObjectiveFunction.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.sat4j.pb.tools.WeightedObject.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.help.Map$ID.equals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionedId.toString()Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.toString()Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractCollection.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$EntrySetView.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.CharArrayMap$EntrySet.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.MRIAttributeInspector$ValueComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl$OptionsMap.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.Headers.getIndex(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryIndexForKey(IILjava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.entryForKey(IILjava/lang/Object;)Lorg/eclipse/emf/common/util/BasicEMap$Entry;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentPredicate(Ljava/util/List;Lorg/eclipse/emf/ecore/EReference;)Lorg/eclipse/emf/ecore/EObject;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.AbstractEList.equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.util.CircularArray.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.wasSet()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.remove(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementMulti.getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.DirectMap.findKey(Ljava/lang/String;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ResourceTranslator.hasRuntime21(Lorg/osgi/framework/Bundle;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.removeNode(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap$TreeNode.find(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/HashMap$TreeNode;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.putTreeVal(ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeNode.findTreeNode(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.log.Log.initialized()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.remove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.indexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Arrays$ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.StringToNumberConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToBooleanConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.StringToCharacterConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.convert(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.conversion.IdentityConverter.isPrimitiveTypeMatchedWithBoxed(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.site.SelectionProviderActivator$TempAdapterFactory.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart$1.getAdapter(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.DesignerTab.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.StatisticsCalculator.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.UrlConnectionRetrieveFileTransfer.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetPage.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectActionContributor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.ViewDescriptor.getAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.contexts.ContextServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.EvaluationServiceFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchSupportFactory.create(Ljava/lang/Class;Lorg/eclipse/ui/services/IServiceLocator;Lorg/eclipse/ui/services/IServiceLocator;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.services.ServiceLocator$ParentLocator.getService(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(Lorg/eclipse/e4/core/internal/contexts/ContextChangeEvent;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage$2.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$5.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.AggregateWorkingSet.propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.commands.CommandService.refreshElements(Ljava/lang/String;Ljava/util/Map;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$5.run()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.ListenerList.add(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.property.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer$5.run()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CTabFolder$8.run()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.containsKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.ArrayTable.put(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractAction.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformLogWriter.isLoggable(Lorg/osgi/framework/Bundle;Ljava/lang/String;I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Lorg/eclipse/core/runtime/IPath;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.append(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.setDevice(Ljava/lang/String;)Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.makeAbsolute()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.canonicalize()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.collapseParentReferences()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.operations.ObjectUndoContext.matches(Lorg/eclipse/core/commands/operations/IUndoContext;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.removeListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.MatchingCharacterPainter.paint(I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.resolveArgs(Lorg/eclipse/e4/core/internal/di/Requestor;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;Lorg/eclipse/e4/core/di/suppliers/PrimaryObjectSupplier;ZZZ)[Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.getProviderType(Ljava/lang/reflect/Type;)Ljava/lang/Class;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.get(Lorg/eclipse/e4/core/di/suppliers/IObjectDescriptor;Lorg/eclipse/e4/core/di/suppliers/IRequestor;ZZ)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.hasQualifier(Ljava/lang/Class;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.InjectorImpl.isOverridden(Ljava/lang/reflect/Method;Ljava/util/ArrayList;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.internal.di.ObjectDescriptor.getQualifier(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.framework.util.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/osgi/framework/util/KeyedElement;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$FilterImpl.compare_Unknown(ILjava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.query.QueryUtil.createIUQuery(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/query/IQuery;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.lastIndexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.extractRange(Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.<init>(Lorg/eclipse/equinox/p2/metadata/Version;ZLorg/eclipse/equinox/p2/metadata/Version;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.isPredefined(Lorg/eclipse/equinox/p2/metadata/expression/IExpression;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.put(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.viewers.ProvElementComparer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.equals(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.identity.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.IdentityMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.viewers.ViewerElementMap$1.retainAll(Ljava/util/Collection;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.security.auth.Subject$SecureSet.removeAll(Ljava/util/Collection;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.CustomHashtable.keyEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.doFindItem(Ljava/lang/Object;)Lorg/eclipse/swt/widgets/Widget;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.matchingFirstSegments(Lorg/eclipse/core/runtime/IPath;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.tableProviders.objectstatistics.ClassStatistics$1.accept(Lcom/jrockit/mc/flightrecorder/spi/IEvent;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.HistogramSelectionIterator.skipForwardEvent()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.OSGiObjectSupplier$1.bundleChanged(Lorg/osgi/framework/BundleEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.ErrorPageErrorHandler.getErrorPage(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.PlatformURLConfigConnection.resolve()Ljava/net/URL;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.setResolvedURL(Ljava/net/URL;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.NativeCodeFinder.getNativePaths()Ljava/util/List;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.isUpdateJob(Lorg/eclipse/core/runtime/jobs/Job;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.search.federated.FederatedSearchJob.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveableHelper$6.belongsTo(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.progress.DeferredTreeContentManager$1.isParent(Lorg/eclipse/ui/progress/DeferredTreeContentManager$DeferredContentFamily;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.SubMonitor.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.InstancePreferences.loadLegacy()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.BundleDefaultPreferences.<init>(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.DefaultPreferences.applyDefaults(Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.internalPut(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.OSGiPreferencesServiceImpl$OSGiLocalRootPreferences.fixPath(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.isPrefixOf(Lorg/eclipse/core/runtime/IPath;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.Path.removeFileExtension()Lorg/eclipse/core/runtime/IPath;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.convertFromProperties(Lorg/eclipse/core/internal/preferences/EclipsePreferences;Ljava/util/Properties;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.get(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.internalPut(Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressManagerUtil.getModalChildExcluding([Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/swt/widgets/Shell;)Lorg/eclipse/swt/widgets/Shell;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.core.impl.engine.CSSElementContextImpl.elementMustBeRefreshed(Lorg/eclipse/e4/ui/css/core/dom/IElementProvider;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.CompositeRuler$CompositeRulerCanvas.addListener(Ljava/lang/Class;Lorg/eclipse/swt/widgets/Control;Ljava/util/EventListener;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getText(Ljava/lang/Object;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyColumnLabelProvider.getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal()Ljava/net/URL;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.boot.PlatformURLConnection.shouldCache(Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.FindSupport.find(Ljava/net/URL;)Ljava/net/URL;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService$3.visit(Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PluginVersionIdentifier.parseVersion(Ljava/lang/String;)[Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getAttributeAsIs(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElementHandle.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IConfigurationElement;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.PersistenceToolkit.create(Lcom/jrockit/mc/common/persistence/Type;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putBoolean(Ljava/lang/String;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.preference.PreferenceStore.firePropertyChangeEvent(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.implies(Ljava/security/Permission;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Collections.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.checkPermission2(Ljava/security/Permission;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.get(Ljava/lang/String;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.BaseExtensionPointHandle.getExtension(Ljava/lang/String;)Lorg/eclipse/core/runtime/IExtension;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.removeNodeChildrenFromQueue(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.localstore.UnifiedTree.getLocalList(Lorg/eclipse/core/internal/localstore/UnifiedTreeNode;)[Lorg/eclipse/core/filesystem/IFileInfo;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ProjectDescription.setBuildSpec([Lorg/eclipse/core/resources/ICommand;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.shouldUnset(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.basicRemove(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Lorg/eclipse/emf/common/notify/NotificationChain;)Lorg/eclipse/emf/common/notify/NotificationChain;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(Lorg/eclipse/emf/common/util/URI;Z)Lorg/eclipse/emf/ecore/resource/Resource;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.getDescribedProperty(Lorg/eclipse/core/runtime/QualifiedName;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeMatcher.getSpecificDescription(Lorg/eclipse/core/internal/content/BasicDescription;)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.isRequested(Lorg/eclipse/core/runtime/QualifiedName;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentDescription.setProperty(Lorg/eclipse/core/runtime/QualifiedName;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.dispatchEventImpl(Ljava/awt/AWTEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.AWTKeyStroke.registerSubclass(Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.event.EventListenerList.remove(Ljava/lang/Class;Ljava/util/EventListener;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.getLocalAttribute(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.isDefined(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS.translateHTMLToCSS(Ljavax/swing/text/AttributeSet;)Ljavax/swing/text/AttributeSet;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.removeAttributes(Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$FontWeight.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.CSS$StringValue.fromStyleConstants(Ljavax/swing/text/StyleConstants;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTableHeaderUI.getHeaderHeight()I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.getSelectedIndex()I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JSplitPane.addImpl(Ljava/awt/Component;Ljava/lang/Object;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTabbedPane.indexOfComponent(Ljava/awt/Component;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.PriorityQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.export(Ljava/io/OutputStream;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.help.FavoritesNode.exportNode(Ljava/io/OutputStreamWriter;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxEditor.getItem()Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultComboBoxModel.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.actionPerformed(Ljava/awt/event/ActionEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.StyleContext$SmallAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.MuxingAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.SimpleAttributeSet.containsAttributes(Ljavax/swing/text/AttributeSet;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.emptyTag(Ljavax/swing/text/Element;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLWriter.noMatchForTagInAttributes(Ljavax/swing/text/AttributeSet;Ljavax/swing/text/html/HTML$Tag;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument$DefaultDocumentEvent.getChange(Ljavax/swing/text/Element;)Ljavax/swing/event/DocumentEvent$ElementChange;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$LeafIterator.setEndOffset()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.InlineView.setPropertiesFromAttributes()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JEditorPane$PlainEditorKit.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextAreaUI.create(Ljavax/swing/text/Element;)Ljavax/swing/text/View;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.<init>(Ljavax/swing/text/Element;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.ParagraphView.setPropertiesFromAttributes()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.TableView.updateInsets()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.TextLayoutStrategy.layoutRow(Ljavax/swing/text/FlowView;II)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ArrayBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.PriorityBlockingQueue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedTransferQueue.findAndRemove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.FrameView$FrameEditorPane.getEditorKitForContentType(Ljava/lang/String;)Ljavax/swing/text/EditorKit;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addDecoration(Lsun/font/Decoration;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addFont(Ljava/lang/Object;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.font.StyledParagraph.addToVector(Ljava/lang/Object;ILjava/util/Vector;[I)[I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.handleInsertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.insertUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.AbstractDocument.postRemoveUpdate(Ljavax/swing/text/AbstractDocument$DefaultDocumentEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.help.plaf.basic.BasicContentViewerUI$PageLoader$Callback.handleStartTag(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader$MetaAction.start(Ljavax/swing/text/html/HTML$Tag;Ljavax/swing/text/MutableAttributeSet;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.PlainDocument.insertString(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.text.html.HTMLDocument$HTMLReader.handleText([CI)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JOptionPane.showOptionDialog(Ljava/awt/Component;Ljava/lang/Object;Ljava/lang/String;IILjavax/swing/Icon;[Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.contentsChanged(Ljavax/swing/event/ListDataEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setSelectedValue(Ljava/lang/Object;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.AbstractButton.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.Component.setDropTarget(Ljava/awt/dnd/DropTarget;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.addDropTargetListener(Ljava/awt/dnd/DropTargetListener;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DropTarget.setComponent(Ljava/awt/Component;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JComboBox.setSelectedItem(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultCellEditor$2.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerDateModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.SpinnerNumberModel.setValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicFileChooserUI.resetGlobFilter()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.dnd.DragSourceContext.setCursorImpl(Ljava/awt/Cursor;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.help.SortMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.help.UniteAppendMerge.processMerge(Ljavax/swing/tree/TreeNode;)Ljavax/swing/tree/TreeNode;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JList.setCellRenderer(Ljavax/swing/ListCellRenderer;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.JTextField.setAction(Ljavax/swing/Action;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex()I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.DefaultDesktopManager.getBoundsForIconOf(Ljavax/swing/JInternalFrame;)Ljava/awt/Rectangle;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicColorChooserUI.installPreviewPanel()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.MetalIconFactory$ImageCacher$ImageGcPair.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.metal.BumpBuffer.hasSameConfiguration(Ljava/awt/GraphicsConfiguration;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.listensToAttribute(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.HotspotManagementToolkit.isVMOptionExplicit(Ljavax/management/MBeanServerConnection;Ljava/lang/String;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putByteArray(Ljava/lang/String;[B)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.getRangeType()Lcom/jrockit/mc/rjmx/ui/internal/ChartModel$AxisRange;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.graph.EventGraphTree.restoreExpansionState()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MethodHandles.constant(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.stream.DistinctOps$1$1.accept(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Hashtable.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.StateImpl.checkProp(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.compatibility.state.PlatformBundleListener$1.filterMatches(Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.module.ResolverBundle.equivalentMaps(Ljava/util/Map;Ljava/util/Map;Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.BundleSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.ImportPackageSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.NativeCodeSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.resolver.HostSpecificationImpl.isSatisfiedBy(Lorg/eclipse/osgi/service/resolver/BaseDescription;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleRevision.isCurrent()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection.verifyNoDuplicates(Ljava/util/Collection;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.cleanup(Lorg/eclipse/osgi/container/ModuleRevision;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.hookregistry.StorageHookFactory.createStorageHookAndValidateFactoryClass(Lorg/eclipse/osgi/storage/BundleInfo$Generation;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.storage.BundleInfo$Generation.getStorageHook(Ljava/lang/Class;)Lorg/eclipse/osgi/internal/hookregistry/StorageHookFactory$StorageHook;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionsParser.logStatus(Lorg/xml/sax/SAXParseException;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryIndexElement.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.compare(Lorg/eclipse/core/internal/registry/KeyedElement;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.removeKey(Ljava/lang/String;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.HashtableOfStringAndInt.put(Ljava/lang/String;I)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.toURI(Ljava/net/URL;)Ljava/net/URI;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.EquinoxBundle.adapt0(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.DTOBuilder.mapComponentType(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.url.EquinoxFactoryManager.getField(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/reflect/Field;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.ref.Log.security()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.impl.tpt.ServiceFactoryImpl.<init>(Ljava/lang/String;Lorg/eclipse/equinox/internal/util/ref/Log;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleContainer.update(Lorg/eclipse/osgi/container/Module;Lorg/eclipse/osgi/container/ModuleRevisionBuilder;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.Activator.startRegistry()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ExtensionRegistry.<init>(Lorg/eclipse/core/runtime/spi/RegistryStrategy;Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.cacheUse()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.WorkManager$NotifyRule.contains(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Resource.isConflicting(Lorg/eclipse/core/runtime/jobs/ISchedulingRule;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.removeByKey(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/registry/KeyedElement;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.Contribution.mergeContribution(Lorg/eclipse/core/internal/registry/Contribution;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryObjectManager.findCommonNamespaceIdentifier([Lorg/eclipse/core/internal/registry/RegistryObject;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.EclipseBundleListener.checkForNLSFiles(Lorg/osgi/framework/Bundle;Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.TableReader.checkCacheValidity(Ljava/io/DataInputStream;J)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.console.command.adapter.Activator.getCommandMethods(Ljava/lang/Object;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.loadData(Ljava/lang/String;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseScheduledApplication.<init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.addScheduledApp(Lorg/eclipse/equinox/internal/app/EclipseScheduledApplication;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationDescriptor.checkArgs(Ljava/util/Map;Z)Ljava/util/Map;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationHandle.destroy()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap$Values.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedQueue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ValuesView.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.TreeMap.valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.init()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.EclipseAppContainer.createAppDescriptor(Lorg/eclipse/core/runtime/IExtension;)Lorg/eclipse/equinox/internal/app/EclipseAppDescriptor;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.RequiredCapability.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;IIZLjava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.enterLoad(Ljava/net/URI;Lorg/eclipse/core/runtime/IProgressMonitor;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.http.util.LangUtils.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.http.pool.RouteSpecificPool.getFree(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.util.JREProxyHelper.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.remove(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.Queue.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.StringUtil.equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.net.ProxyType.setProxyData(Lorg/eclipse/core/net/proxy/IProxyData;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putInt(Ljava/lang/String;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.cert.X509CertSelector.matchSubjectAlternativeNames(Ljava/security/cert/X509Certificate;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionParser.removeRedundantTrail(Ljava/util/List;Ljava/lang/Comparable;)Ljava/lang/Comparable;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.makeRelative(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxManipulatorImpl.setConfiguratorManipulator()Lorg/eclipse/equinox/internal/provisional/configuratormanipulator/ConfiguratorManipulator;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.FileLocator.getBundleFile(Lorg/osgi/framework/Bundle;)Ljava/io/File;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.fromString(Ljava/lang/String;)Ljava/net/URI;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameURI(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.URIUtil.sameString(Ljava/lang/String;Ljava/lang/String;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxBundlesState.getPrerequisteBundles(Lorg/eclipse/equinox/frameworkadmin/BundleInfo;)[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository.getCompleteArtifactDescriptor(Lorg/eclipse/equinox/p2/metadata/IArtifactKey;)Lorg/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.IUMap.remove(Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isDynamicImport(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.pde.internal.build.publisher.FeatureRootAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AdviceFileAdvice.isApplicable(Ljava/lang/String;ZLjava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractAdvice.matchVersion(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.isIncluded(Lorg/eclipse/equinox/p2/metadata/Version;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.BundlesAction.isOptional(Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createMatchExpressionFromRange(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/VersionRange;)Lorg/eclipse/equinox/p2/metadata/expression/IMatchExpression;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.createTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.MetadataFactory.getCachedTouchpointType(Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/ITouchpointType;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.sat4j.tools.FullClauseSelectorSolver.addControlableClause(Lorg/sat4j/specs/IVecInt;)Lorg/sat4j/specs/IConstr;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.server.session.AbstractSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.listener.ELContextCleaner.purgeEntries(Ljava/lang/reflect/Field;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.contains(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.component.Container.update(Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.startedBundle2(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.enableComponents(Ljava/util/Vector;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.unbind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.getMethod(Lorg/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl;Lorg/eclipse/equinox/internal/ds/Reference;Ljava/lang/String;Lorg/osgi/framework/ServiceReference;)Ljava/lang/reflect/Method;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.InstanceProcess.checkCanCauseCycle(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getMethod(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/reflect/Method;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.bind(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.readObject(Ljava/io/InputStream;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeValue(Ljava/lang/Object;Ljava/io/OutputStream;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writePrimitiveArray(Ljava/lang/Class;Ljava/lang/Object;ILjava/io/OutputStream;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.io.ExternalizableDictionary.writeRealObject(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/OutputStream;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.util.xml.impl.XMLParserImpl.parse_tag_special(Lorg/eclipse/equinox/internal/util/xml/impl/TagImpl;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doProperty(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.doReference(Lorg/eclipse/equinox/internal/util/xml/Tag;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getNamespace(Ljava/lang/String;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.validate(II)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.getCardinality(Ljava/lang/String;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.DeclarationParser.isCorrectComponentTag(Ljava/lang/String;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.PerformanceStats.removeStats(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.watson.DefaultElementComparator.testEquality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putLong(Ljava/lang/String;J)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.getValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.stoppingBundle(Lorg/osgi/framework/Bundle;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentType.hasFileSpec(Lorg/eclipse/core/runtime/preferences/IScopeContext;Ljava/lang/String;I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.setNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.internalIntrospecthelper(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.createTypedArray(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.runtime.JspRuntimeLibrary.convert(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTransferable.getTransferData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.isStandardTextRepresentationClass()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicTextUI$TextTransferHandler$TextTransferable.getRicherData(Ljava/awt/datatransfer/DataFlavor;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.net.Socket$1.run()Ljava/lang/Boolean;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.TestExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.EqualsExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.LegacyHandlerSubmissionExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.ActiveShellExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.expressions.WorkbenchWindowExpression.evaluate(Lorg/eclipse/core/expressions/IEvaluationContext;)Lorg/eclipse/core/expressions/EvaluationResult;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.findElementsRecursive(Lorg/eclipse/e4/ui/model/application/MApplicationElement;Ljava/lang/Class;Lorg/eclipse/e4/ui/workbench/Selector;Ljava/util/List;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ToolBarManagerRenderer$7.select(Lorg/eclipse/e4/ui/model/application/MApplicationElement;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.showIntro(Lorg/eclipse/ui/IWorkbenchWindow;Z)Lorg/eclipse/ui/intro/IIntroPart;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.findCoolItem([Lorg/eclipse/swt/widgets/CoolItem;Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/swt/widgets/CoolItem;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.CTabRendering$ReflectionSupport.getField(Ljava/lang/String;)Ljava/lang/reflect/Field;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.setIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.MenuManager.update(ZZ)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkingSetMenuContributionItem.fill(Lorg/eclipse/swt/widgets/Menu;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.Model.areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.getControl()Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Ljava/lang/Runnable;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarManager.update(Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.add(Ljava/lang/Object;I)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.addValue(Lorg/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.help.WorkbenchHelpSystem.setHelpTrace(Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.CoolBarManager.update(Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.commands.ParameterizedCommand.<init>(Lorg/eclipse/core/commands/Command;[Lorg/eclipse/core/commands/Parameterization;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CoolBarToTrimManager.remove(Lorg/eclipse/jface/action/IContributionItem;)Lorg/eclipse/jface/action/IContributionItem;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.action.ToolBarContributionItem.fill(Lorg/eclipse/swt/widgets/CoolBar;I)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.RadioMenu.isEqual(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ShowInMenu.getShowInPartIds(Lorg/eclipse/ui/IWorkbenchPart;)Ljava/util/ArrayList;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveAllAction.updateState()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.SaveablesList.fillModelsClosing(Ljava/util/Set;Ljava/util/Map;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.switchToPosition(Lorg/eclipse/jface/text/link/LinkedModeModel;Lorg/eclipse/jface/text/link/LinkedPosition;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionAnnotations.prune(Ljava/util/List;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap$SubMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.jobs.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.MarkerAttributeMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.ObjectMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.containsValue(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.StyledString.isDifferentStyle(Lorg/eclipse/jface/viewers/StyledString$Styler;Lorg/eclipse/jface/viewers/StyledString$Styler;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.removeAutoEditStrategy(Lorg/eclipse/jface/text/IAutoEditStrategy;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.link.LinkedPositionGroup.overlapsOrTouches(Lorg/eclipse/jface/text/link/LinkedPosition;Lorg/eclipse/jface/text/DocumentEvent;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.NonLocalUndoUserApprover.elementsContains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.createIURequirements(Ljava/util/Collection;)Ljava/util/Collection;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.AbstractPublisherAction.queryForIU(Lorg/eclipse/equinox/p2/publisher/IPublisherResult;Ljava/lang/String;Lorg/eclipse/equinox/p2/metadata/Version;)Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ProductAction.versionElements(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.ConfigCUsAction.publishBundleCUs(Lorg/eclipse/equinox/p2/publisher/IPublisherInfo;[Lorg/eclipse/equinox/frameworkadmin/BundleInfo;Ljava/lang/String;Lorg/eclipse/equinox/p2/publisher/IPublisherResult;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.publisher.eclipse.FeaturesAction.getVersionRange(Lorg/eclipse/equinox/p2/publisher/eclipse/FeatureEntry;)Lorg/eclipse/equinox/p2/metadata/VersionRange;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.ExpandableComposite.setClient(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.expressions.propertytester.PlatformPropertyTester.test(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.content.ContentTypeCatalog.internalFindContentTypesFor(Lorg/eclipse/core/internal/content/ContentTypeMatcher;Ljava/lang/String;Ljava/util/Comparator;)[[Lorg/eclipse/core/runtime/content/IContentType;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(Lorg/eclipse/core/internal/resources/File;Lorg/eclipse/core/internal/resources/ResourceInfo;Z)Lorg/eclipse/core/runtime/content/IContentDescription;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.KeyedHashSet.getByKey(Ljava/lang/Object;)Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Cache$Entry.compare(Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.getAdapter(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.AdapterManager.classForName(Lorg/eclipse/core/runtime/IAdapterFactory;Ljava/lang/String;)Ljava/lang/Class;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.util.ModelUtil.getElementsByTagName(Lorg/w3c/dom/Document;Ljava/lang/String;)[Lorg/w3c/dom/Element;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.UAElement.importElement(Lorg/eclipse/help/internal/UAElement;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.AbstractIntroContainer.handleIncludeStyleInheritence(Lorg/eclipse/ui/internal/intro/impl/model/IntroInclude;Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroElement;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableValue.updateInnerObservableValue()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableList.updateInnerObservableList()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.internal.databinding.swt.SWTVetoableValueDecorator.<init>(Lorg/eclipse/swt/widgets/Widget;Lorg/eclipse/jface/internal/databinding/swt/WidgetStringValueProperty;Lorg/eclipse/core/databinding/observable/value/IObservableValue;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.list.MultiList.<init>(Lorg/eclipse/core/databinding/observable/Realm;[Lorg/eclipse/core/databinding/observable/list/IObservableList;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableSet.updateInnerObservableSet()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableMap.updateDetailMap()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.internal.util.SequenceResolver.countPrecedingItems(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.swt.internal.copy.ViewContentProvider.createChildren(Ljava/lang/Object;)[Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardActivityFilter.select(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.includeInSetStructure(Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ActionSet;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.ProvisioningOperationWizard.provisioningContextChanged()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldHideToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.DefaultAttributeSubscriptionService.removeAttributeFromListener(Lcom/jrockit/mc/rjmx/subscription/IMRIValueListener;Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.configuration.model.xml.XMLTagInstance.setValue(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLAttribute;Ljava/lang/String;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ConditionChooser.updateUnit()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.persistence.LocalizedString.getLocales()Ljava/util/List;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.model.fields.FieldFactory.createFromDisplayUnit(Lcom/jrockit/mc/common/unit/UnitDescriptor;Ljava/lang/String;I)Lcom/jrockit/mc/ui/model/fields/Field;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.ProgressViewUpdater.removeCollector(Lorg/eclipse/ui/internal/progress/IProgressUpdateCollector;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.merge(Lorg/eclipse/e4/ui/model/application/ui/MExpression;Lorg/eclipse/e4/ui/model/application/ui/MExpression;)Lorg/eclipse/e4/ui/model/application/ui/MExpression;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialViewer.drawBackground(Lorg/eclipse/swt/graphics/GC;Lcom/jrockit/mc/ui/dial/DialDevice;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.fields.internal.QuantityField.initKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;Ljava/lang/String;Lcom/jrockit/mc/common/unit/IQuantity;Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.xml.XmlToolkit.getNameTypeValue(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/jrockit/mc/common/xml/ClassFactory;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.subscription.internal.FileMRIMetaData.setAttributeType(Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.sampler.CompositeRangeSampler.needsStructuralRefresh(Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.plaf.basic.BasicComboBoxUI$Handler.focusLost(Ljava/awt/event/FocusEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl$EObjectInputStream.loadFeatureMap(Lorg/eclipse/emf/ecore/util/FeatureMap$Internal;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.ResourceEntityHandlerImpl.setBaseURI(Lorg/eclipse/emf/common/util/URI;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setExtendedMetaDataOption(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.resource.FontDescriptor.setStyle(I)Lorg/eclipse/jface/resource/FontDescriptor;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.canEdit(Ljava/lang/String;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.StringConstructorCellEditor.checkContructor(Ljava/lang/Class;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeLabelProvider.getForeground(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Color;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyDescriptor.isCompatibleWith(Lorg/eclipse/ui/views/properties/IPropertyDescriptor;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.ArrayLengthCellEditor.doGetValue()Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextViewer.fireSelectionChanged(II)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.FileUtil.computeOverlap(Ljava/net/URI;Ljava/net/URI;Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.utils.Queue.indexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ScopeSetDialog.findOperation(Lorg/eclipse/help/ui/internal/views/ScopeSet;Ljava/lang/Class;)Lorg/eclipse/help/ui/internal/views/ScopeSetDialog$PendingOperation;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.flr.internal.BasicPrimitivesConverter.getConverter(Ljava/lang/Class;)Lcom/jrockit/mc/rjmx/services/flr/internal/Converter;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferenceServiceRegistryHelper.applyRuntimeDefaults(Ljava/lang/String;Ljava/lang/ref/WeakReference;)Ljava/lang/ref/WeakReference;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.jasper.compiler.JspUtil.interpreterCall(ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.batch.Main$Logger.<clinit>()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.get(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.add(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleSet.includes(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.get(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.ObjectVector.contains(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.removeKey(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory.getClassForInterface(Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.demo.html.HTMLParser.addText(Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.servlet.http.HttpServlet.getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.servlet.DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.nio.channels.Channels.newChannel(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.security.Password.check(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jetty.util.LazyList.remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.configAdminRegistered(Lorg/osgi/service/cm/ConfigurationAdmin;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ComponentReference.updated(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/service/component/ComponentInstance;Lorg/osgi/framework/ServiceReference;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Resolver.isPossibleMatch(Lorg/eclipse/equinox/internal/ds/Reference;Lorg/osgi/framework/ServiceReference;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.Reference.bindNewReference(Lorg/osgi/framework/ServiceReference;Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.LinkedList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.ArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ArrayDelegatingEList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils$UnmodifiableArrayList.lastIndexOf(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.lastIndexOf(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver.removeNonEffectiveRequirements(Ljava/util/ListIterator;Ljava/util/List;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.toStringBlame(Lorg/osgi/service/resolver/ResolveContext;Lorg/apache/felix/resolver/Candidates;Lorg/apache/felix/resolver/ResolverImpl$Blame;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.felix.resolver.ResolverImpl.getPackageSourcesInternal(Lorg/osgi/service/resolver/ResolveContext;Lorg/osgi/resource/Capability;Ljava/util/Map;Ljava/util/List;Ljava/util/Set;)Ljava/util/List;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.themes.ColorsAndFontsPreferencePage.isDefault(Lorg/eclipse/ui/internal/themes/ColorDefinition;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.updateActive(Lorg/eclipse/ui/IEditorPart;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.ReferenceHashSet.remove(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.UIEvents.contains(Lorg/osgi/service/event/Event;Ljava/lang/String;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.app.AppPersistence.saveData(Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.commands.util.Util.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier.unsubscribe(Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WizardContentProvider.getParent(Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap.removeKey(Ljava/lang/String;)Lorg/eclipse/core/internal/preferences/ImmutableMap;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.filesystem.URIUtil.equals(Ljava/net/URI;Ljava/net/URI;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.index.Index.concatenateUnique(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.expression.CoercingComparator.coerceAndEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.core.di.internal.extensions.PreferencesObjectSupplier.addListener(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/e4/core/di/suppliers/IRequestor;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.skip()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.isSubtype(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.layout(Lorg/eclipse/swt/graphics/GC;ILorg/eclipse/ui/internal/forms/widgets/Locator;ILjava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.about.InstallationDialog.createContents(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.setVisible(Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.model.RecordingTemplate.equalSettings(Lcom/jrockit/mc/rjmx/services/flr/IEventSettingsHolder;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.wizards.preferences.WizardPreferencesImportPage1.getTransfers()[Lorg/eclipse/ui/internal/preferences/PreferenceTransferElement;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.scopeMatches(Ljava/lang/String;Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.NewWizardNewPage.isPrimary(Lorg/eclipse/ui/wizards/IWizardDescriptor;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.ColumnComposite.countVisibleColumnsBefore(Lcom/jrockit/mc/rjmx/ui/column/IColumn;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.KeysPreferencePage.createModifyTab(Lorg/eclipse/swt/widgets/TabFolder;)Lorg/eclipse/swt/widgets/Composite;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage.createDataControls(Lorg/eclipse/swt/widgets/Composite;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage.fillEditorTable()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.MBeanTreeSorter.compare(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.getInitialRadioSelection()I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.TwoPaneElementSelector.setLowerSelectedElement(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredList.setSelection([Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.swing.ProgressMonitor.isCanceled()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.DefaultHelpUI.isActiveShell(Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/ui/IWorkbenchWindow;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.refresh()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.SeeAlsoPart.updateLinks(Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/util/List;)Ljava/lang/Class;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.getCommonClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.ObjectContributorManager.allSameClass(Ljava/util/List;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.ManagedForm.fireSelectionChanged(Lorg/eclipse/ui/forms/IFormPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.update()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.DetailsPart.checkLimit()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.editor.FormPage.isActive()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCToolBarManager.remove(Lorg/eclipse/jface/action/IAction;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.Section.setSeparatorControl(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.isIntroStandby(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.BindingService.isSameBinding(Lorg/eclipse/e4/ui/model/application/commands/MKeyBinding;Lorg/eclipse/e4/ui/model/application/commands/MCommand;Lorg/eclipse/jface/bindings/Binding;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.Util.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuFactoryGenerator.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.menus.MenuAdditionCacheEntry.<init>(Lorg/eclipse/e4/ui/model/application/MApplication;Lorg/eclipse/e4/core/contexts/IEclipseContext;Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.StringToObjectMapImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ApplicationImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.impl.ContributionImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.CoreExpressionImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.advanced.impl.PerspectiveImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.WindowImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.PopupMenuImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectToolItemImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DirectMenuItemImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.DynamicMenuContributionImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.model.application.ui.menu.impl.ToolControlImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureChangeImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.FeatureMapEntryImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.change.impl.ResourceChangeImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EAttributeImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EReferenceImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassifierImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EClassImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EDataTypeImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EEnumLiteralImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xml.type.impl.SimpleAnyTypeImpl.eIsSet(I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleData.dynamicIsSet(Lorg/eclipse/emf/ecore/InternalEObject;Lorg/eclipse/emf/ecore/EStructuralFeature$Internal$DynamicValueHolder;I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.init(Lorg/eclipse/emf/ecore/xmi/XMLResource;Ljava/util/Map;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equals(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EObject;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.EcoreUtil$EqualityHelper.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.TopologicalSort.buildDependencyGraph()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.GenericMApplicationElementFactoryImpl$MApplicationElementClassToEClass.buildMapping(Lorg/eclipse/emf/ecore/EPackage;)Ljava/util/Map;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.saveAll(Ljava/util/List;ZZZLorg/eclipse/jface/operation/IRunnableContext;Lorg/eclipse/jface/window/IShellProvider;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.PreferencePageHistory.addHistoryEntry(Lorg/eclipse/ui/internal/dialogs/PreferenceHistoryEntry;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.model.ConflictModel.setConflicts(Ljava/util/Collection;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MoveControlAction.run()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.checkDuplicates(Lorg/eclipse/ui/internal/NavigationHistoryEditorInfo;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(Lorg/eclipse/ui/intro/IIntroPart;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.RegistryPageContributor.failsEnablement([Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.MCBook.showPageWithData(Ljava/lang/Object;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMinValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setMaxValue(Lcom/jrockit/mc/common/unit/IQuantity;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedDialsSectionPart$AttributeDial.updateMetadata()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.setQuantityKindFromAttribute(Lcom/jrockit/mc/rjmx/subscription/MRI;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.ChartModel$RangedAxis.setKindOfQuantity(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.CombinedChartSectionPart.updateQuantityKind(Lcom/jrockit/mc/common/unit/KindOfQuantity;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UpdateIntervalCellEditor.activate()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.TogglingCellEditor.doSetValue(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.canEdit(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertyEditingSupport.getCellEditor(Ljava/lang/Object;)Lorg/eclipse/jface/viewers/CellEditor;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.createConverter(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/conversion/IConverter;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateValueStrategy.findValidator(Ljava/lang/Object;Ljava/lang/Object;)Lorg/eclipse/core/databinding/validation/IValidator;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.getKeyForClass(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToByteConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToShortConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToLongConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToFloatConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToDoubleConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigIntegerConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.UpdateStrategy.addNumberToBigDecimalConverters(Ljava/util/Map;Lcom/ibm/icu/text/NumberFormat;[Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.conversion.NumberToStringConverter.<init>(Lcom/ibm/icu/text/NumberFormat;Ljava/lang/Class;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeConfiguratorTableFactory$2.getValueTyped(Lcom/jrockit/mc/rjmx/subscription/MRI;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.operativeset.actions.AddMatchingRelationalKeyAction.addMatchingEventsForType(Lcom/jrockit/mc/flightrecorder/spi/IEventType;Lcom/jrockit/mc/flightrecorder/spi/IField;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.toolbar.DeleteAction.removeFromList(Lcom/jrockit/mc/components/ui/tab/BaseDescriptor;Ljava/util/List;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addAfter(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.LayoutItem.addBefore(Lcom/jrockit/mc/components/ui/design/LayoutItem;Lcom/jrockit/mc/components/ui/design/LayoutItem;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.loadMenuAndToolbarStructure()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.CustomizePerspectiveDialog.createMenuEntries(Lorg/eclipse/e4/ui/model/application/ui/menu/MMenu;Lorg/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.PreferencesService.addMatchedKeys(Ljava/util/ArrayList;Lorg/eclipse/core/runtime/preferences/PreferenceFilterEntry;[Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.window.ToolTip.shouldCreateToolTip(Lorg/eclipse/swt/widgets/Event;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.selectionChanged(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.commands.internal.Traverser.lookupMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.NewPropertySheetHandler.findPropertySheet(Lorg/eclipse/core/commands/ExecutionEvent;Lorg/eclipse/ui/views/properties/PropertyShowInContext;)Lorg/eclipse/ui/views/properties/PropertySheet;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$4$PerspectiveDropTarget.sameShell()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.activities.ws.WorkbenchActivitySupport.addExtension(Lorg/eclipse/core/runtime/dynamichelpers/IExtensionTracker;Lorg/eclipse/core/runtime/IExtension;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.EditorHistoryItem.matches(Lorg/eclipse/ui/IEditorInput;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.WorkbenchPage.checkEditor(Lorg/eclipse/ui/IEditorInput;Ljava/util/List;Lorg/eclipse/ui/internal/EditorReference;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.createEntry(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IEditorPart;Lorg/eclipse/ui/INavigationLocation;)Lorg/eclipse/ui/internal/NavigationHistoryEntry;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistoryEntry.mergeInto(Lorg/eclipse/ui/internal/NavigationHistoryEntry;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(Lorg/eclipse/swt/widgets/Widget;[Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.itemExists([Lorg/eclipse/swt/widgets/Item;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.intro.impl.model.loader.ContentProviderManager.getContentProviderParentPage(Lorg/eclipse/ui/intro/config/IIntroContentProvider;)Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroPage;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.fieldassist.FieldAssistColors.disposeColors(Lorg/eclipse/swt/widgets/Display;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.internalRefresh(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.AbstractTreeViewer.internalIsInputOrEmptyPath(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreePath.startsWith(Lorg/eclipse/jface/viewers/TreePath;Lorg/eclipse/jface/viewers/IElementComparer;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher$9.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.AbstractWorkingSetDialog.removeSelectedWorkingSets(Ljava/util/List;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory.gotoEntryForTab(Lorg/eclipse/ui/internal/NavigationHistoryEntry;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.AbstractElementListSelectionDialog.handleWidgetSelected()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.common.unit.Timestamp.in(Lcom/jrockit/mc/common/unit/IUnit;)Lcom/jrockit/mc/common/unit/IQuantity;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.preferences.EclipsePreferences.putDouble(Ljava/lang/String;D)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.WorkingSetSelectionDialog.restoreChangedWorkingSets()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.security.storage.SecurePreferencesMapper.close(Lorg/eclipse/equinox/internal/security/storage/SecurePreferencesRoot;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.getCloseableSiblingParts(Lorg/eclipse/e4/ui/model/application/ui/basic/MPart;)Ljava/util/List;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.notification.widget.ActionChooser$1.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.internal.AttributeSelectorComponent$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.dialogs.ViewsPreferencePage$2.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.keys.NewKeysPreferencePage$12.selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.components.ui.design.view.layout.TreePart.updateSelection()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.tracetree.TraceModel.traceContainsFrames(Lcom/jrockit/mc/common/IMCStackTrace;Ljava/util/List;Ljava/util/Map;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonTypeProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMaxValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.controlpanel.ui.recordingconfiguration.RecordingTemplatePart.updateCommonMinValueProperty(Lcom/jrockit/mc/flightrecorder/controlpanel/ui/recordingconfiguration/RecordingTemplatePart$CommonValueProperties;Lcom/jrockit/mc/rjmx/services/flr/IOptionConstraint;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.wizards.ActionWizardPage.handleSelection(Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.contentassist.AdditionalInfoController.showInformation(Lorg/eclipse/jface/text/contentassist/ICompletionProposal;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationEvent(Lorg/osgi/service/cm/ConfigurationEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.SCRManager.processConfigurationChange(Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;Lorg/osgi/service/cm/Configuration;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponent.getComponentPropByPID(Ljava/lang/String;)Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.ds.model.ServiceComponentProp.handleBoundServicesUpdate(Ljava/util/Hashtable;Ljava/util/Dictionary;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.director.app.DirectorApplication.parseIUsArgument(Ljava/util/List;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.databinding.validation.ObjectToPrimitiveValidator.mapContainsValues(Ljava/lang/Class;Ljava/lang/Class;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.MessageManager.findMessage(Ljava/lang/Object;Ljava/util/ArrayList;)Lorg/eclipse/ui/internal/forms/MessageManager$Message;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.formpage.internal.ToolbarFormEditor.show(Lcom/jrockit/mc/ui/formpage/FormPageContributionGroup;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.attributes.ReadOnlyMRIAttribute.refresh()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.mbeanbrowser.tree.MBeanTreeSectionPart$1$1.findItem(Ljava/lang/Object;[Lorg/eclipse/swt/widgets/TreeItem;)Lorg/eclipse/swt/widgets/TreeItem;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.originatesFrom(Lorg/eclipse/core/runtime/IExtension;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.createProxy(Lorg/eclipse/core/runtime/IConfigurationElement;)Lorg/eclipse/core/internal/adapter/AdapterFactoryProxy;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.setupProxy(Lorg/eclipse/ecf/core/util/Proxy;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.resources.Workspace.computeActiveBuildConfigOrder()Lorg/eclipse/core/internal/resources/ComputeProjectOrder$VertexOrder;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.util.EqualsToolkit.nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.histogram.successors.SuccessorFrameNodeBuilder.addTrace(Lcom/jrockit/mc/flightrecorder/ui/components/histogram/HistogramItem;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.createNewCharto(Lcom/jrockit/mc/flightrecorder/ui/components/chart/model/FLRChartDescriptor;Lcom/jrockit/mc/flightrecorder/spi/ITimeRange;)Lse/hirt/greychart/impl/DefaultXYGreyChart;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.flightrecorder.ui.components.chart.ChartModelBuilder.getContentType(Lcom/jrockit/mc/common/unit/UnitDescriptor;)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMin.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.triggers.internal.ValueEvaluatorNumberMax.triggerOn(Lcom/jrockit/mc/common/unit/IQuantity;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.services.internal.AbstractSingleMRITransformation.subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue.getLiveValue()Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.set(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.KeyBindingService.removeKeyBindingService(Lorg/eclipse/ui/IWorkbenchSite;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.DialConfiguration.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.console.ui.tabs.threads.ThreadMasterDetailBlock.pageChanged(Lorg/eclipse/jface/dialogs/PageChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.misc.WorkbenchPartPropertySheets.getPropertySheetProxyPage(Ljava/lang/Object;)Lcom/jrockit/mc/ui/misc/WorkbenchPartPropertySheets$PropertySheetProxyPage;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.intro.config.CustomizableIntroPart.saveState(Lorg/eclipse/ui/IMemento;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.isThisPart(Lorg/eclipse/ui/IWorkbenchPartReference;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HelpView.handlePartDeactivation(Lorg/eclipse/ui/IWorkbenchPartReference;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.operations.OperationHistoryActionHandler$PartListener.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partClosed(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.partOpened(Lorg/eclipse/ui/IWorkbenchPart;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.NavigationHistory$1.updateNavigationHistory(Lorg/eclipse/ui/IWorkbenchPartReference;Z)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$DetailsContentViewer.refresh([Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PagePartSelectionTracker.perspectiveChanged(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IPerspectiveDescriptor;Lorg/eclipse/ui/IWorkbenchPartReference;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.ui.dialogs.SelectableIUsPage$2.checkStateChanged(Lorg/eclipse/jface/viewers/CheckStateChangedEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$ItemsListLabelProvider.isSelected(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryChangeEvent.getHostDelta(Ljava/lang/String;)Lorg/eclipse/core/internal/registry/RegistryDelta;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.RegistryDelta.getExtensionDeltas(Ljava/lang/String;)[Lorg/eclipse/core/runtime/IExtensionDelta;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.runtime.dynamichelpers.ExtensionTracker$3.matches(Lorg/eclipse/core/runtime/IExtensionPoint;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.views.properties.PropertySheet.getViewAdapter(Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.browse.MultiProtocolFileSystemBrowserAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.outgoing.MultiProtocolOutgoingAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapterFactory.getContainerAdapter(Lorg/eclipse/ecf/core/IContainer;Ljava/lang/Class;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.adapter.AdapterFactoryProxy.getAdapterNames()[Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.Vector.indexOf(Ljava/lang/Object;I)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.WeakHashMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.jsp.jasper.Activator.getJasperBundle()Lorg/osgi/framework/Bundle;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.getImportingBundles()[Lorg/osgi/framework/Bundle;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.framework.legacy.PackageAdminImpl$ExportedPackageImpl.addRequirers(Ljava/util/Set;Lorg/eclipse/osgi/container/ModuleWiring;Ljava/lang/String;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentSkipListMap.doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.runtime.DevClassPathHelper.getArrayFromList(Ljava/lang/String;)[Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.ConfigurationElement.getChildren(Ljava/lang/String;)[Lorg/eclipse/core/internal/registry/ConfigurationElement;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Lorg/eclipse/core/runtime/spi/RegistryContributor;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.PerspectiveSwitcher.perspectiveIsActive(Lorg/eclipse/ui/IPerspectiveDescriptor;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectPrevious(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer.selectNext(Lorg/eclipse/ui/internal/progress/ProgressInfoItem;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormTextModel.select(Lorg/eclipse/ui/internal/forms/widgets/IFocusSelectable;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart$2.linkActivated(Lorg/eclipse/ui/forms/events/HyperlinkEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.FormUtil.ensureVisible(Lorg/eclipse/swt/widgets/Control;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.events.ExpansionEvent.getState()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$13.keyPressed(Lorg/eclipse/swt/events/KeyEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$3.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$6.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.CycleBaseHandler$2.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$7.mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.internal.workbench.renderers.swt.AbstractTableInformationControl$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.MultipleHyperlinkPresenter$4.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessContents$6.mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart$4.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.forms.widgets.FormToolkit$BorderPainter.paintControl(Lorg/eclipse/swt/events/PaintEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.actions.SelectWorkingSetsAction.isWorkingSetEnabled(Lorg/eclipse/ui/IWorkingSet;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.DynamicHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.HyperlinkTreePart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.BrowserPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.ContextHelpPart.hasFocusControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.help.ui.internal.views.EngineResultSection.hasControl(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.browser.views.JVMBrowserView.addActions(Lorg/eclipse/jface/action/IMenuManager;Lorg/eclipse/jface/viewers/IStructuredSelection;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextEmail.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.bidi.internal.consumable.StructuredTextRegex.getDirection(Lorg/eclipse/equinox/bidi/advanced/IStructuredTextExpert;Ljava/lang/String;Lorg/eclipse/equinox/bidi/custom/StructuredTextCharTypes;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.forms.widgets.Paragraph.paint(Lorg/eclipse/swt/graphics/GC;Lorg/eclipse/swt/graphics/Rectangle;Ljava/util/Hashtable;Lorg/eclipse/ui/internal/forms/widgets/IHyperlinkSegment;Lorg/eclipse/ui/internal/forms/widgets/SelectionData;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.SearchField.addPreviousPick(Ljava/lang/String;Lorg/eclipse/ui/internal/quickaccess/QuickAccessElement;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.quickaccess.QuickAccessDialog$1$1.addPreviousPick(Ljava/lang/String;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.hyperlink.DefaultHyperlinkPresenter.highlightRegion(Lorg/eclipse/jface/text/IRegion;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.progress.DetailedProgressViewer$3.select()V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.celleditors.UnitCellEditor.parse(Ljava/lang/String;)Ljava/lang/Object;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.handleScroll(Lorg/eclipse/swt/widgets/Event;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.swt.custom.CCombo.isParentScrolling(Lorg/eclipse/swt/widgets/Control;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.viewers.TreeViewer.replace(Ljava/lang/Object;ILjava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.createListDiffs(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.listIndexOf(Ljava/util/List;Ljava/lang/Object;I)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.value.SelectObservableValue$1.handleValueChange(Lorg/eclipse/core/databinding/observable/value/ValueChangeEvent;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.map.BidiObservableMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.Pool$AccessUnit.matches(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceCompareTo(Lorg/eclipse/ecf/core/identity/BaseID;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.naming.ldap.Rdn$RdnEntry.compareTo(Ljavax/naming/ldap/Rdn$RdnEntry;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.container.ModuleResolver$ResolveProcess.compare(Lorg/osgi/resource/Capability;Lorg/osgi/resource/Capability;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Lang.guessLanguages(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(Ljava/lang/CharSequence;I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.commons.codec.language.bm.Rule$4.isMatch(Ljava/lang/CharSequence;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.ui.column.OptimisticComparator.compareCells(Ljava/lang/Object;Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.WeakInterningHashSet.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.notify.impl.NotificationImpl.isTouch()Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.BasicEMap.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.common.util.ECollections$2.indexOfKey(Ljava/lang/Object;)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(ILorg/eclipse/emf/ecore/util/FeatureMap$Entry;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.contains(Lorg/eclipse/emf/ecore/EStructuralFeature;Ljava/lang/Object;Z)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.DelegatingFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.util.BasicFeatureMap.add(Lorg/eclipse/emf/ecore/util/FeatureMap$Entry;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.nio.file.FileTreeWalker.wouldLoop(Ljava/nio/file/Path;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.toString(Ljava/lang/StringBuffer;)V";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.p2.metadata.VersionRange.getFormat()Lorg/eclipse/equinox/p2/metadata/IVersionFormat;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.problemReasonString(I)Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.datatransfer.DataFlavor.paramString()Ljava/lang/String;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.registry.FileEditorMapping.compareList(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ui.internal.preferences.PropertyUtil.isEqual(Lorg/eclipse/ui/internal/preferences/IPropertyMap;Lorg/eclipse/ui/internal/preferences/IPropertyMap;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.osgi.internal.serviceregistry.ShrinkableValueCollectionMap.equality(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnChainMatch(Ljava/util/List;ILjava/util/List;I)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.skipWildCards(Ljava/util/List;I)I";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.framework.FrameworkUtil$DNChainMatching.dnmatch(Ljava/util/List;Ljava/util/List;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jface.text.TextAttribute.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Feature.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.update.Site.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.equinox.internal.p2.metadata.VersionVector.equals([Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;Ljava/lang/Comparable;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.ecf.core.identity.URIID.namespaceEquals(Lorg/eclipse/ecf/core/identity/BaseID;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.e4.ui.css.swt.helpers.URI.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.databinding.observable.Diffs.equals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.apache.lucene.analysis.miscellaneous.PatternAnalyzer.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.equals(Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.core.expressions.Expression.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.ui.dial.ImageDescription.safeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "com.jrockit.mc.rjmx.util.internal.AbstractReadOnlyAttribute.equalValues(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.equalContext(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.AccessControlContext.containsAllLimits(Ljava/security/AccessControlContext;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.lang.invoke.MemberName$Factory.getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Class;)Ljava/util/List;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.valueEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "javax.naming.directory.BasicAttribute.arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.EnumMap.equals(Ljava/util/EnumMap;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.AbstractMap.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.security.Identity.identityEquals(Ljava/security/Identity;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.eclipse.emf.ecore.impl.EStoreEObjectImpl$BasicEStoreEList.delegateEquals(Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.CopyOnWriteArraySet.eq(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.font.TextLayout.equals(Ljava/awt/font/TextLayout;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ShapeGraphicAttribute.equals(Ljava/awt/font/ShapeGraphicAttribute;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.awt.font.ImageGraphicAttribute.equals(Ljava/awt/font/ImageGraphicAttribute;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "org.osgi.service.application.ApplicationAdminPermission.equal(Ljava/lang/Object;Ljava/lang/Object;)Z";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$Node.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$TreeBin.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "java.util.concurrent.ConcurrentHashMap$ForwardingNode.find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;";
	"net.mooctest.Program.getProgram()[Lnet/mooctest/Rule;" -> "net.mooctest.DatalogTest4.testProgram()V";
	"net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;" -> "net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;";
	"net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;" -> "net.mooctest.DatalogTest.toFact()V";
	"net.mooctest.Datalog.compatibleWith(Lnet/mooctest/Fact;)Z" -> "net.mooctest.Program.query(Lnet/mooctest/Datalog;[Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;";
	"net.mooctest.Datalog.compatibleWith(Lnet/mooctest/Fact;)Z" -> "net.mooctest.DatalogTest.substituteTo()V";
}
